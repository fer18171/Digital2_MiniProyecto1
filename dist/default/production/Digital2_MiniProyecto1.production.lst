

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 15:42:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  000C                     _PIR1bits	set	12
   286  000B                     _INTCONbits	set	11
   287  0007                     _PORTC	set	7
   288  0008                     _PORTD	set	8
   289  001F                     _ADCON0bits	set	31
   290  008C                     _PIE1bits	set	140
   291  009F                     _ADCON1bits	set	159
   292  0087                     _TRISCbits	set	135
   293  0085                     _TRISAbits	set	133
   294  0085                     _TRISA	set	133
   295  0087                     _TRISC	set	135
   296  0088                     _TRISD	set	136
   297  0188                     _ANSELbits	set	392
   298  0189                     _ANSELH	set	393
   299  0188                     _ANSEL	set	392
   300                           
   301                           	psect	cinit
   302  000F                     start_initialization:	
   303                           ; #config settings
   304                           
   305  000F                     __initialization:
   306                           
   307                           ; Clear objects allocated to COMMON
   308  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   309  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   310  0011                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0011                     __end_of__initialization:
   314  0011  0183               	clrf	3
   315  0012  120A  118A  2910   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0079                     __pbssCOMMON:
   319  0079                     _ADC_finish:
   320  0079                     	ds	1
   321  007A                     _ADC_value:
   322  007A                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_setup:
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_oli:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_oli:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 1 bytes @ 0x0
   338  0070                     	ds	3
   339  0073                     ??_setup:
   340  0073                     ?_ADC_setup:	
   341                           ; 1 bytes @ 0x3
   342                           
   343  0073                     ADC_setup@Channel:	
   344                           ; 1 bytes @ 0x3
   345                           
   346                           
   347                           ; 1 bytes @ 0x3
   348  0073                     	ds	1
   349  0074                     ADC_setup@Format:
   350                           
   351                           ; 1 bytes @ 0x4
   352  0074                     	ds	1
   353  0075                     ADC_setup@Vref:
   354                           
   355                           ; 1 bytes @ 0x5
   356  0075                     	ds	1
   357  0076                     ??_ADC_setup:
   358                           
   359                           ; 1 bytes @ 0x6
   360  0076                     	ds	2
   361  0078                     ADC_setup@ConClock:
   362                           
   363                           ; 1 bytes @ 0x8
   364  0078                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:
   368  0020                     ??_main:
   369                           
   370                           ; 1 bytes @ 0x0
   371  0020                     	ds	1
   372                           
   373                           	psect	maintext
   374  0110                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 49 in file "Slave1.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       1       0       0       0
   397 ;;      Totals:         0       1       0       0       0
   398 ;;Total ram usage:        1 bytes
   399 ;; Hardware stack levels required when called:    2
   400 ;; This function calls:
   401 ;;		_ADC_setup
   402 ;;		_setup
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _main
   410  0110                     _main:
   411  0110                     l1016:	
   412                           ;incstack = 0
   413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   414                           
   415                           
   416                           ;Slave1.c: 50:     INTCONbits.PEIE = 1;
   417  0110  120A  118A  213D  120A  118A  	fcall	_setup
   418  0115                     l1018:
   419                           
   420                           ;Slave1.c: 51:     ADC_finish = 0;
   421  0115  3002               	movlw	2
   422  0116  1283               	bcf	3,5	;RP0=0, select bank0
   423  0117  1303               	bcf	3,6	;RP1=0, select bank0
   424  0118  00A0               	movwf	??_main
   425  0119  0820               	movf	??_main,w
   426  011A  00F3               	movwf	ADC_setup@Channel
   427  011B  01F4               	clrf	ADC_setup@Format
   428  011C  01F5               	clrf	ADC_setup@Vref
   429  011D  3003               	movlw	3
   430  011E  120A  118A  2015  120A  118A  	fcall	_ADC_setup
   431  0123                     l1020:
   432                           
   433                           ;Slave1.c: 52: }
   434  0123  1283               	bcf	3,5	;RP0=0, select bank0
   435  0124  1303               	bcf	3,6	;RP1=0, select bank0
   436  0125  149F               	bsf	31,1	;volatile
   437  0126                     l1022:
   438                           
   439                           ;Slave1.c: 54: void __attribute__((picinterrupt(("")))) oli(void) {
   440  0126  0379               	decf	_ADC_finish,w
   441  0127  1D03               	btfss	3,2
   442  0128  292A               	goto	u61
   443  0129  292B               	goto	u60
   444  012A                     u61:
   445  012A  2937               	goto	l1030
   446  012B                     u60:
   447  012B                     l1024:
   448                           
   449                           ;Slave1.c: 55:     if (PIR1bits.ADIF == 1) {
   450  012B  01F9               	clrf	_ADC_finish
   451  012C                     l1026:
   452                           
   453                           ;Slave1.c: 56:         PIR1bits.ADIF = 0;
   454  012C  309F               	movlw	159
   455  012D  1283               	bcf	3,5	;RP0=0, select bank0
   456  012E  1303               	bcf	3,6	;RP1=0, select bank0
   457  012F  00A0               	movwf	??_main
   458  0130                     u77:
   459  0130  2931               	nop2
   460  0131  0BA0               	decfsz	??_main,f
   461  0132  2930               	goto	u77
   462  0133  2934               	nop2
   463  0134                     l1028:
   464                           
   465                           ;Slave1.c: 57:         ADC_value = ADRESH;
   466  0134  1283               	bcf	3,5	;RP0=0, select bank0
   467  0135  1303               	bcf	3,6	;RP1=0, select bank0
   468  0136  149F               	bsf	31,1	;volatile
   469  0137                     l1030:
   470                           
   471                           ;Slave1.c: 59:     }
   472  0137  087A               	movf	_ADC_value,w
   473  0138  0088               	movwf	8	;volatile
   474  0139  2926               	goto	l1022
   475  013A  120A  118A  280C   	ljmp	start
   476  013D                     __end_of_main:
   477                           
   478                           	psect	text1
   479  013D                     __ptext1:	
   480 ;; *************** function _setup *****************
   481 ;; Defined at:
   482 ;;		line 69 in file "Slave1.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		status,2
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _setup
   512  013D                     _setup:
   513  013D                     l694:	
   514                           ;incstack = 0
   515                           ; Regs used in _setup: [status,2]
   516                           
   517  013D  1683               	bsf	3,5	;RP0=1, select bank3
   518  013E  1703               	bsf	3,6	;RP1=1, select bank3
   519  013F  0188               	clrf	8	;volatile
   520  0140  0189               	clrf	9	;volatile
   521  0141                     l696:
   522  0141  1508               	bsf	8,2	;volatile
   523  0142  1683               	bsf	3,5	;RP0=1, select bank1
   524  0143  1303               	bcf	3,6	;RP1=0, select bank1
   525  0144  0188               	clrf	8	;volatile
   526  0145  0187               	clrf	7	;volatile
   527  0146  0185               	clrf	5	;volatile
   528  0147                     l698:
   529  0147  1505               	bsf	5,2	;volatile
   530  0148                     l700:
   531  0148  1607               	bsf	7,4	;volatile
   532  0149                     l702:
   533  0149  1587               	bsf	7,3	;volatile
   534  014A  1283               	bcf	3,5	;RP0=0, select bank0
   535  014B  1303               	bcf	3,6	;RP1=0, select bank0
   536  014C  0188               	clrf	8	;volatile
   537  014D  0187               	clrf	7	;volatile
   538  014E                     l704:
   539  014E  178B               	bsf	11,7	;volatile
   540  014F                     l706:
   541  014F  170B               	bsf	11,6	;volatile
   542  0150  01F9               	clrf	_ADC_finish
   543  0151                     l50:
   544  0151  0008               	return
   545  0152                     __end_of_setup:
   546                           
   547                           	psect	text2
   548  0015                     __ptext2:	
   549 ;; *************** function _ADC_setup *****************
   550 ;; Defined at:
   551 ;;		line 3 in file "ADC.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  ConClock        1    wreg     unsigned char 
   554 ;;  Channel         1    3[COMMON] unsigned char 
   555 ;;  Format          1    4[COMMON] unsigned char 
   556 ;;  Vref            1    5[COMMON] unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  ConClock        1    8[COMMON] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         3       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0
   570 ;;      Temps:          2       0       0       0       0
   571 ;;      Totals:         6       0       0       0       0
   572 ;;Total ram usage:        6 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _ADC_setup
   584  0015                     _ADC_setup:
   585                           
   586                           ;incstack = 0
   587                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
   588                           ;ADC_setup@ConClock stored from wreg
   589  0015  00F8               	movwf	ADC_setup@ConClock
   590  0016                     l866:
   591                           
   592                           ;ADC.c: 4:     switch (ConClock) {
   593  0016  2836               	goto	l880
   594  0017                     l868:
   595                           
   596                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
   597  0017  303F               	movlw	-193
   598  0018  1283               	bcf	3,5	;RP0=0, select bank0
   599  0019  1303               	bcf	3,6	;RP1=0, select bank0
   600  001A  059F               	andwf	31,f	;volatile
   601                           
   602                           ;ADC.c: 7:             break;
   603  001B  289B               	goto	l918
   604  001C                     l870:
   605                           
   606                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
   607  001C  1283               	bcf	3,5	;RP0=0, select bank0
   608  001D  1303               	bcf	3,6	;RP1=0, select bank0
   609  001E  081F               	movf	31,w	;volatile
   610  001F  393F               	andlw	-193
   611  0020  3840               	iorlw	64
   612  0021  009F               	movwf	31	;volatile
   613                           
   614                           ;ADC.c: 10:             break;
   615  0022  289B               	goto	l918
   616  0023                     l872:
   617                           
   618                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
   619  0023  1283               	bcf	3,5	;RP0=0, select bank0
   620  0024  1303               	bcf	3,6	;RP1=0, select bank0
   621  0025  081F               	movf	31,w	;volatile
   622  0026  393F               	andlw	-193
   623  0027  3880               	iorlw	128
   624  0028  009F               	movwf	31	;volatile
   625                           
   626                           ;ADC.c: 13:             break;
   627  0029  289B               	goto	l918
   628  002A                     l874:
   629                           
   630                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
   631  002A  30C0               	movlw	192
   632  002B  1283               	bcf	3,5	;RP0=0, select bank0
   633  002C  1303               	bcf	3,6	;RP1=0, select bank0
   634  002D  049F               	iorwf	31,f	;volatile
   635                           
   636                           ;ADC.c: 16:             break;
   637  002E  289B               	goto	l918
   638  002F                     l876:
   639                           
   640                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
   641  002F  1283               	bcf	3,5	;RP0=0, select bank0
   642  0030  1303               	bcf	3,6	;RP1=0, select bank0
   643  0031  081F               	movf	31,w	;volatile
   644  0032  393F               	andlw	-193
   645  0033  3880               	iorlw	128
   646  0034  009F               	movwf	31	;volatile
   647                           
   648                           ;ADC.c: 19:             break;
   649  0035  289B               	goto	l918
   650  0036                     l880:
   651  0036  0878               	movf	ADC_setup@ConClock,w
   652  0037  00F6               	movwf	??_ADC_setup
   653  0038  01F7               	clrf	??_ADC_setup+1
   654                           
   655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   656                           ; Switch size 1, requested type "simple"
   657                           ; Number of cases is 1, Range of values is 0 to 0
   658                           ; switch strategies available:
   659                           ; Name         Instructions Cycles
   660                           ; simple_byte            4     3 (average)
   661                           ; direct_byte           11     8 (fixed)
   662                           ; jumptable            260     6 (fixed)
   663                           ;	Chosen strategy is simple_byte
   664  0039  0877               	movf	??_ADC_setup+1,w
   665  003A  3A00               	xorlw	0	; case 0
   666  003B  1903               	skipnz
   667  003C  283E               	goto	l1092
   668  003D  282F               	goto	l876
   669  003E                     l1092:
   670                           
   671                           ; Switch size 1, requested type "simple"
   672                           ; Number of cases is 4, Range of values is 1 to 4
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte           13     7 (average)
   676                           ; direct_byte           23    11 (fixed)
   677                           ; jumptable            263     9 (fixed)
   678                           ;	Chosen strategy is simple_byte
   679  003E  0876               	movf	??_ADC_setup,w
   680  003F  3A01               	xorlw	1	; case 1
   681  0040  1903               	skipnz
   682  0041  2817               	goto	l868
   683  0042  3A03               	xorlw	3	; case 2
   684  0043  1903               	skipnz
   685  0044  281C               	goto	l870
   686  0045  3A01               	xorlw	1	; case 3
   687  0046  1903               	skipnz
   688  0047  2823               	goto	l872
   689  0048  3A07               	xorlw	7	; case 4
   690  0049  1903               	skipnz
   691  004A  282A               	goto	l874
   692  004B  282F               	goto	l876
   693  004C                     l882:
   694                           
   695                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
   696  004C  30C3               	movlw	-61
   697  004D  059F               	andwf	31,f	;volatile
   698                           
   699                           ;ADC.c: 24:             break;
   700  004E  28D5               	goto	l920
   701  004F                     l884:
   702                           
   703                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
   704  004F  081F               	movf	31,w	;volatile
   705  0050  39C3               	andlw	-61
   706  0051  3804               	iorlw	4
   707  0052  009F               	movwf	31	;volatile
   708                           
   709                           ;ADC.c: 27:             break;
   710  0053  28D5               	goto	l920
   711  0054                     l886:
   712                           
   713                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
   714  0054  081F               	movf	31,w	;volatile
   715  0055  39C3               	andlw	-61
   716  0056  3808               	iorlw	8
   717  0057  009F               	movwf	31	;volatile
   718                           
   719                           ;ADC.c: 30:             break;
   720  0058  28D5               	goto	l920
   721  0059                     l888:
   722                           
   723                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
   724  0059  081F               	movf	31,w	;volatile
   725  005A  39C3               	andlw	-61
   726  005B  380C               	iorlw	12
   727  005C  009F               	movwf	31	;volatile
   728                           
   729                           ;ADC.c: 33:             break;
   730  005D  28D5               	goto	l920
   731  005E                     l890:
   732                           
   733                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
   734  005E  081F               	movf	31,w	;volatile
   735  005F  39C3               	andlw	-61
   736  0060  3810               	iorlw	16
   737  0061  009F               	movwf	31	;volatile
   738                           
   739                           ;ADC.c: 36:             break;
   740  0062  28D5               	goto	l920
   741  0063                     l892:
   742                           
   743                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
   744  0063  081F               	movf	31,w	;volatile
   745  0064  39C3               	andlw	-61
   746  0065  3814               	iorlw	20
   747  0066  009F               	movwf	31	;volatile
   748                           
   749                           ;ADC.c: 39:             break;
   750  0067  28D5               	goto	l920
   751  0068                     l894:
   752                           
   753                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
   754  0068  081F               	movf	31,w	;volatile
   755  0069  39C3               	andlw	-61
   756  006A  3818               	iorlw	24
   757  006B  009F               	movwf	31	;volatile
   758                           
   759                           ;ADC.c: 42:             break;
   760  006C  28D5               	goto	l920
   761  006D                     l896:
   762                           
   763                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
   764  006D  081F               	movf	31,w	;volatile
   765  006E  39C3               	andlw	-61
   766  006F  381C               	iorlw	28
   767  0070  009F               	movwf	31	;volatile
   768                           
   769                           ;ADC.c: 45:             break;
   770  0071  28D5               	goto	l920
   771  0072                     l898:
   772                           
   773                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
   774  0072  081F               	movf	31,w	;volatile
   775  0073  39C3               	andlw	-61
   776  0074  3820               	iorlw	32
   777  0075  009F               	movwf	31	;volatile
   778                           
   779                           ;ADC.c: 48:             break;
   780  0076  28D5               	goto	l920
   781  0077                     l900:
   782                           
   783                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
   784  0077  081F               	movf	31,w	;volatile
   785  0078  39C3               	andlw	-61
   786  0079  3824               	iorlw	36
   787  007A  009F               	movwf	31	;volatile
   788                           
   789                           ;ADC.c: 51:             break;
   790  007B  28D5               	goto	l920
   791  007C                     l902:
   792                           
   793                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
   794  007C  081F               	movf	31,w	;volatile
   795  007D  39C3               	andlw	-61
   796  007E  3828               	iorlw	40
   797  007F  009F               	movwf	31	;volatile
   798                           
   799                           ;ADC.c: 54:             break;
   800  0080  28D5               	goto	l920
   801  0081                     l904:
   802                           
   803                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
   804  0081  081F               	movf	31,w	;volatile
   805  0082  39C3               	andlw	-61
   806  0083  382C               	iorlw	44
   807  0084  009F               	movwf	31	;volatile
   808                           
   809                           ;ADC.c: 57:             break;
   810  0085  28D5               	goto	l920
   811  0086                     l906:
   812                           
   813                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
   814  0086  081F               	movf	31,w	;volatile
   815  0087  39C3               	andlw	-61
   816  0088  3830               	iorlw	48
   817  0089  009F               	movwf	31	;volatile
   818                           
   819                           ;ADC.c: 60:             break;
   820  008A  28D5               	goto	l920
   821  008B                     l908:
   822                           
   823                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
   824  008B  081F               	movf	31,w	;volatile
   825  008C  39C3               	andlw	-61
   826  008D  3834               	iorlw	52
   827  008E  009F               	movwf	31	;volatile
   828                           
   829                           ;ADC.c: 63:             break;
   830  008F  28D5               	goto	l920
   831  0090                     l910:
   832                           
   833                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
   834  0090  081F               	movf	31,w	;volatile
   835  0091  39C3               	andlw	-61
   836  0092  3838               	iorlw	56
   837  0093  009F               	movwf	31	;volatile
   838                           
   839                           ;ADC.c: 66:             break;
   840  0094  28D5               	goto	l920
   841  0095                     l912:
   842                           
   843                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
   844  0095  303C               	movlw	60
   845  0096  049F               	iorwf	31,f	;volatile
   846                           
   847                           ;ADC.c: 69:             break;
   848  0097  28D5               	goto	l920
   849  0098                     l914:
   850                           
   851                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
   852  0098  30C3               	movlw	-61
   853  0099  059F               	andwf	31,f	;volatile
   854                           
   855                           ;ADC.c: 72:             break;
   856  009A  28D5               	goto	l920
   857  009B                     l918:
   858  009B  0873               	movf	ADC_setup@Channel,w
   859  009C  00F6               	movwf	??_ADC_setup
   860  009D  01F7               	clrf	??_ADC_setup+1
   861                           
   862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   863                           ; Switch size 1, requested type "simple"
   864                           ; Number of cases is 1, Range of values is 0 to 0
   865                           ; switch strategies available:
   866                           ; Name         Instructions Cycles
   867                           ; simple_byte            4     3 (average)
   868                           ; direct_byte           11     8 (fixed)
   869                           ; jumptable            260     6 (fixed)
   870                           ;	Chosen strategy is simple_byte
   871  009E  0877               	movf	??_ADC_setup+1,w
   872  009F  3A00               	xorlw	0	; case 0
   873  00A0  1903               	skipnz
   874  00A1  28A3               	goto	l1094
   875  00A2  2898               	goto	l914
   876  00A3                     l1094:
   877                           
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 16, Range of values is 0 to 15
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte           49    25 (average)
   883                           ; direct_byte           56     8 (fixed)
   884                           ; jumptable            260     6 (fixed)
   885                           ;	Chosen strategy is simple_byte
   886  00A3  0876               	movf	??_ADC_setup,w
   887  00A4  3A00               	xorlw	0	; case 0
   888  00A5  1903               	skipnz
   889  00A6  284C               	goto	l882
   890  00A7  3A01               	xorlw	1	; case 1
   891  00A8  1903               	skipnz
   892  00A9  284F               	goto	l884
   893  00AA  3A03               	xorlw	3	; case 2
   894  00AB  1903               	skipnz
   895  00AC  2854               	goto	l886
   896  00AD  3A01               	xorlw	1	; case 3
   897  00AE  1903               	skipnz
   898  00AF  2859               	goto	l888
   899  00B0  3A07               	xorlw	7	; case 4
   900  00B1  1903               	skipnz
   901  00B2  285E               	goto	l890
   902  00B3  3A01               	xorlw	1	; case 5
   903  00B4  1903               	skipnz
   904  00B5  2863               	goto	l892
   905  00B6  3A03               	xorlw	3	; case 6
   906  00B7  1903               	skipnz
   907  00B8  2868               	goto	l894
   908  00B9  3A01               	xorlw	1	; case 7
   909  00BA  1903               	skipnz
   910  00BB  286D               	goto	l896
   911  00BC  3A0F               	xorlw	15	; case 8
   912  00BD  1903               	skipnz
   913  00BE  2872               	goto	l898
   914  00BF  3A01               	xorlw	1	; case 9
   915  00C0  1903               	skipnz
   916  00C1  2877               	goto	l900
   917  00C2  3A03               	xorlw	3	; case 10
   918  00C3  1903               	skipnz
   919  00C4  287C               	goto	l902
   920  00C5  3A01               	xorlw	1	; case 11
   921  00C6  1903               	skipnz
   922  00C7  2881               	goto	l904
   923  00C8  3A07               	xorlw	7	; case 12
   924  00C9  1903               	skipnz
   925  00CA  2886               	goto	l906
   926  00CB  3A01               	xorlw	1	; case 13
   927  00CC  1903               	skipnz
   928  00CD  288B               	goto	l908
   929  00CE  3A03               	xorlw	3	; case 14
   930  00CF  1903               	skipnz
   931  00D0  2890               	goto	l910
   932  00D1  3A01               	xorlw	1	; case 15
   933  00D2  1903               	skipnz
   934  00D3  2895               	goto	l912
   935  00D4  2898               	goto	l914
   936  00D5                     l920:
   937                           
   938                           ;ADC.c: 74:     if (Format == 1) {
   939  00D5  0374               	decf	ADC_setup@Format,w
   940  00D6  1D03               	btfss	3,2
   941  00D7  28D9               	goto	u41
   942  00D8  28DA               	goto	u40
   943  00D9                     u41:
   944  00D9  28DE               	goto	l93
   945  00DA                     u40:
   946  00DA                     l922:
   947                           
   948                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
   949  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   950  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   951  00DC  179F               	bsf	31,7	;volatile
   952                           
   953                           ;ADC.c: 76:     } else {
   954  00DD  28F1               	goto	l926
   955  00DE                     l93:
   956                           
   957                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
   958  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   959  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   960  00E0  139F               	bcf	31,7	;volatile
   961  00E1  28F1               	goto	l926
   962  00E2                     l96:	
   963                           ;ADC.c: 80:         case 1:
   964                           
   965                           
   966                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
   967  00E2  121F               	bcf	31,4	;volatile
   968                           
   969                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
   970  00E3  129F               	bcf	31,5	;volatile
   971                           
   972                           ;ADC.c: 83:             break;
   973  00E4  2907               	goto	l97
   974  00E5                     l98:	
   975                           ;ADC.c: 84:         case 2:
   976                           
   977                           
   978                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
   979  00E5  161F               	bsf	31,4	;volatile
   980                           
   981                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
   982  00E6  169F               	bsf	31,5	;volatile
   983                           
   984                           ;ADC.c: 87:             break;
   985  00E7  2907               	goto	l97
   986  00E8                     l99:	
   987                           ;ADC.c: 88:         case 3:
   988                           
   989                           
   990                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
   991  00E8  121F               	bcf	31,4	;volatile
   992                           
   993                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
   994  00E9  169F               	bsf	31,5	;volatile
   995                           
   996                           ;ADC.c: 91:             break;
   997  00EA  2907               	goto	l97
   998  00EB                     l100:	
   999                           ;ADC.c: 92:         case 4:
  1000                           
  1001                           
  1002                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  1003  00EB  161F               	bsf	31,4	;volatile
  1004                           
  1005                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  1006  00EC  129F               	bcf	31,5	;volatile
  1007                           
  1008                           ;ADC.c: 95:             break;
  1009  00ED  2907               	goto	l97
  1010  00EE                     l101:	
  1011                           ;ADC.c: 96:         default:
  1012                           
  1013                           
  1014                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1015  00EE  121F               	bcf	31,4	;volatile
  1016                           
  1017                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  1018  00EF  129F               	bcf	31,5	;volatile
  1019                           
  1020                           ;ADC.c: 99:             break;
  1021  00F0  2907               	goto	l97
  1022  00F1                     l926:
  1023  00F1  0875               	movf	ADC_setup@Vref,w
  1024  00F2  00F6               	movwf	??_ADC_setup
  1025  00F3  01F7               	clrf	??_ADC_setup+1
  1026                           
  1027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1028                           ; Switch size 1, requested type "simple"
  1029                           ; Number of cases is 1, Range of values is 0 to 0
  1030                           ; switch strategies available:
  1031                           ; Name         Instructions Cycles
  1032                           ; simple_byte            4     3 (average)
  1033                           ; direct_byte           11     8 (fixed)
  1034                           ; jumptable            260     6 (fixed)
  1035                           ;	Chosen strategy is simple_byte
  1036  00F4  0877               	movf	??_ADC_setup+1,w
  1037  00F5  3A00               	xorlw	0	; case 0
  1038  00F6  1903               	skipnz
  1039  00F7  28F9               	goto	l1096
  1040  00F8  28EE               	goto	l101
  1041  00F9                     l1096:
  1042                           
  1043                           ; Switch size 1, requested type "simple"
  1044                           ; Number of cases is 4, Range of values is 1 to 4
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte           13     7 (average)
  1048                           ; direct_byte           23    11 (fixed)
  1049                           ; jumptable            263     9 (fixed)
  1050                           ;	Chosen strategy is simple_byte
  1051  00F9  0876               	movf	??_ADC_setup,w
  1052  00FA  3A01               	xorlw	1	; case 1
  1053  00FB  1903               	skipnz
  1054  00FC  28E2               	goto	l96
  1055  00FD  3A03               	xorlw	3	; case 2
  1056  00FE  1903               	skipnz
  1057  00FF  28E5               	goto	l98
  1058  0100  3A01               	xorlw	1	; case 3
  1059  0101  1903               	skipnz
  1060  0102  28E8               	goto	l99
  1061  0103  3A07               	xorlw	7	; case 4
  1062  0104  1903               	skipnz
  1063  0105  28EB               	goto	l100
  1064  0106  28EE               	goto	l101
  1065  0107                     l97:
  1066                           
  1067                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  1068  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0109  141F               	bsf	31,0	;volatile
  1071                           
  1072                           ;ADC.c: 102:     INTCONbits.GIE=1;
  1073  010A  178B               	bsf	11,7	;volatile
  1074                           
  1075                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  1076  010B  170B               	bsf	11,6	;volatile
  1077                           
  1078                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  1079  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1080  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1081  010E  170C               	bsf	12,6	;volatile
  1082  010F                     l102:
  1083  010F  0008               	return
  1084  0110                     __end_of_ADC_setup:
  1085                           
  1086                           	psect	text3
  1087  0152                     __ptext3:	
  1088 ;; *************** function _oli *****************
  1089 ;; Defined at:
  1090 ;;		line 86 in file "Slave1.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          3       0       0       0       0
  1107 ;;      Totals:         3       0       0       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		Interrupt level 1
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _oli
  1119  0152                     _oli:
  1120  0152                     i1l798:
  1121  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0154  1F0C               	btfss	12,6	;volatile
  1124  0155  2957               	goto	u3_21
  1125  0156  2958               	goto	u3_20
  1126  0157                     u3_21:
  1127  0157  295F               	goto	i1l56
  1128  0158                     u3_20:
  1129  0158                     i1l800:
  1130  0158  130C               	bcf	12,6	;volatile
  1131  0159                     i1l802:
  1132  0159  081E               	movf	30,w	;volatile
  1133  015A  00F0               	movwf	??_oli
  1134  015B  0870               	movf	??_oli,w
  1135  015C  00FA               	movwf	_ADC_value
  1136  015D                     i1l804:
  1137  015D  01F9               	clrf	_ADC_finish
  1138  015E  0AF9               	incf	_ADC_finish,f
  1139  015F                     i1l56:
  1140  015F  0872               	movf	??_oli+2,w
  1141  0160  008A               	movwf	10
  1142  0161  0E71               	swapf	??_oli+1,w
  1143  0162  0083               	movwf	3
  1144  0163  0EFE               	swapf	btemp,f
  1145  0164  0E7E               	swapf	btemp,w
  1146  0165  0009               	retfie
  1147  0166                     __end_of_oli:
  1148  007E                     btemp	set	126	;btemp
  1149  007E                     wtemp0	set	126
  1150                           
  1151                           	psect	intentry
  1152  0004                     __pintentry:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _oli: [wreg]
  1155                           
  1156  0004                     interrupt_function:
  1157  007E                     saved_w	set	btemp
  1158  0004  00FE               	movwf	btemp
  1159  0005  0E03               	swapf	3,w
  1160  0006  00F1               	movwf	??_oli+1
  1161  0007  080A               	movf	10,w
  1162  0008  00F2               	movwf	??_oli+2
  1163  0009  120A  118A  2952   	ljmp	_oli
  1164                           
  1165                           	psect	config
  1166                           
  1167                           ;Config register CONFIG1 @ 0x2007
  1168                           ;	Oscillator Selection bits
  1169                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1170                           ;	Watchdog Timer Enable bit
  1171                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1172                           ;	Power-up Timer Enable bit
  1173                           ;	PWRTE = OFF, PWRT disabled
  1174                           ;	RE3/MCLR pin function select bit
  1175                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1176                           ;	Code Protection bit
  1177                           ;	CP = OFF, Program memory code protection is disabled
  1178                           ;	Data Code Protection bit
  1179                           ;	CPD = OFF, Data memory code protection is disabled
  1180                           ;	Brown Out Reset Selection bits
  1181                           ;	BOREN = OFF, BOR disabled
  1182                           ;	Internal External Switchover bit
  1183                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1184                           ;	Fail-Safe Clock Monitor Enabled bit
  1185                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1186                           ;	Low Voltage Programming Enable bit
  1187                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1188                           ;	In-Circuit Debugger Mode bit
  1189                           ;	DEBUG = 0x1, unprogrammed default
  1190  2007                     	org	8199
  1191  2007  20F1               	dw	8433
  1192                           
  1193                           ;Config register CONFIG2 @ 0x2008
  1194                           ;	Brown-out Reset Selection bit
  1195                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1196                           ;	Flash Program Memory Self Write Enable bits
  1197                           ;	WRT = OFF, Write protection off
  1198  2008                     	org	8200
  1199  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_setup

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              0 BANK0      1     1      0
                          _ADC_setup
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _setup

 _oli (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 15:42:55 2021

                     l50 0151                       l93 00DE                       l96 00E2  
                     l97 0107                       l98 00E5                       l99 00E8  
                     u40 00DA                       u41 00D9                       u60 012B  
                     u61 012A                       u77 0130                      l100 00EB  
                    l101 00EE                      l102 010F       __size_of_ADC_setup 00FB  
                    l700 0148                      l702 0149                      l704 014E  
                    l706 014F                      l900 0077                      l910 0090  
                    l902 007C                      l912 0095                      l904 0081  
                    l920 00D5                      l922 00DA                      l914 0098  
                    l906 0086                      l908 008B                      l926 00F1  
                    l870 001C                      l918 009B                      l694 013D  
                    l872 0023                      l880 0036                      l696 0141  
                    l890 005E                      l882 004C                      l874 002A  
                    l866 0016                      l698 0147                      l892 0063  
                    l884 004F                      l876 002F                      l868 0017  
                    l894 0068                      l886 0054                      l896 006D  
                    l888 0059                      l898 0072                      _oli 0152  
                   l1020 0123                     l1030 0137                     l1022 0126  
                   l1024 012B                     l1016 0110                     l1026 012C  
                   l1018 0115                     l1028 0134                     l1092 003E  
                   l1094 00A3                     l1096 00F9                     ?_oli 0070  
                   i1l56 015F                     u3_20 0158                     u3_21 0157  
                   _main 0110                     btemp 007E                     start 000C  
                  ??_oli 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l800 0158                    i1l802 0159                    i1l804 015D  
                  i1l798 0152                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _setup 013D                    pclath 000A                    status 0003  
                  wtemp0 007E        __end_of_ADC_setup 0110          __initialization 000F  
           __end_of_main 013D                   ??_main 0020            ADC_setup@Vref 0075  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       ADC_setup@Channel 0073                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 0152                  ??_setup 0073  
             __pmaintext 0110               __pintentry 0004                _ADC_value 007A  
              _ADC_setup 0015                _ANSELbits 0188                  __ptext1 013D  
                __ptext2 0015                  __ptext3 0152             __size_of_oli 0014  
      ADC_setup@ConClock 0078     end_of_initialization 0011               ?_ADC_setup 0073  
              _TRISAbits 0085                _TRISCbits 0087      start_initialization 000F  
            __end_of_oli 0166              ??_ADC_setup 0076          ADC_setup@Format 0074  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
         __size_of_setup 0015        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             _ADC_finish 0079            __size_of_main 002D               _INTCONbits 000B  
               intlevel1 0000  
