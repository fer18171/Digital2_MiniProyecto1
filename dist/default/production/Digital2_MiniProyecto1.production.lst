

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:49:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  001E                     _ADRESH	set	30
   369  000C                     _PIR1bits	set	12
   370  000B                     _INTCONbits	set	11
   371  0007                     _PORTC	set	7
   372  0008                     _PORTD	set	8
   373  001F                     _ADCON0bits	set	31
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  009F                     _ADCON1bits	set	159
   377  008C                     _PIE1bits	set	140
   378  0087                     _TRISCbits	set	135
   379  0085                     _TRISAbits	set	133
   380  0085                     _TRISA	set	133
   381  0087                     _TRISC	set	135
   382  0088                     _TRISD	set	136
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0188                     _ANSELbits	set	392
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   397  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   398  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   399  0012                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0012                     __end_of__initialization:
   403  0012  0183               	clrf	3
   404  0013  120A  118A  2915   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0077                     __pbssCOMMON:
   408  0077                     _OK:
   409  0077                     	ds	1
   410  0078                     _ADC_finish:
   411  0078                     	ds	1
   412  0079                     _ADC_value:
   413  0079                     	ds	1
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_setup:
   418  0070                     ?_spiRead:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_spiRead:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_oli:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     spiWrite@dat:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     ??_oli:
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	3
   452  0074                     ?_ADC_setup:
   453  0074                     ?_spiInit:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     ADC_setup@Channel:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     spiInit@sDataSample:	
   460                           ; 1 bytes @ 0x4
   461                           
   462                           
   463                           ; 1 bytes @ 0x4
   464  0074                     	ds	1
   465  0075                     ADC_setup@Format:
   466  0075                     spiInit@sClockIdle:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     ADC_setup@Vref:
   473  0076                     spiInit@sTransmitEdge:	
   474                           ; 1 bytes @ 0x6
   475                           
   476                           
   477                           ; 1 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??_setup:
   480  0077                     ??_spiInit:	
   481                           ; 1 bytes @ 0x7
   482                           
   483                           
   484                           	psect	cstackBANK0
   485  0020                     __pcstackBANK0:	
   486                           ; 1 bytes @ 0x7
   487                           
   488  0020                     ??_ADC_setup:
   489  0020                     spiInit@sType:	
   490                           ; 1 bytes @ 0x0
   491                           
   492                           
   493                           ; 1 bytes @ 0x0
   494  0020                     	ds	2
   495  0022                     ADC_setup@ConClock:
   496                           
   497                           ; 1 bytes @ 0x2
   498  0022                     	ds	1
   499  0023                     ??_main:
   500                           
   501                           ; 1 bytes @ 0x3
   502  0023                     	ds	1
   503                           
   504                           	psect	maintext
   505  0115                     __pmaintext:	
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 50 in file "Slave1.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : B00/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          0       1       0       0       0
   528 ;;      Totals:         0       1       0       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels required when called:    5
   531 ;; This function calls:
   532 ;;		_ADC_setup
   533 ;;		_setup
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _main
   541  0115                     _main:
   542  0115                     l1240:	
   543                           ;incstack = 0
   544                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   545                           
   546                           
   547                           ;Slave1.c: 51: 
   548  0115  120A  118A  216A  120A  118A  	fcall	_setup
   549  011A                     l1242:
   550                           
   551                           ;Slave1.c: 52:     INTCONbits.GIE = 1;
   552  011A  3002               	movlw	2
   553  011B  1283               	bcf	3,5	;RP0=0, select bank0
   554  011C  1303               	bcf	3,6	;RP1=0, select bank0
   555  011D  00A3               	movwf	??_main
   556  011E  0823               	movf	??_main,w
   557  011F  00F4               	movwf	ADC_setup@Channel
   558  0120  01F5               	clrf	ADC_setup@Format
   559  0121  01F6               	clrf	ADC_setup@Vref
   560  0122  3003               	movlw	3
   561  0123  120A  118A  2016  120A  118A  	fcall	_ADC_setup
   562  0128                     l1244:
   563                           
   564                           ;Slave1.c: 53:     INTCONbits.PEIE = 1;
   565  0128  1283               	bcf	3,5	;RP0=0, select bank0
   566  0129  1303               	bcf	3,6	;RP1=0, select bank0
   567  012A  149F               	bsf	31,1	;volatile
   568  012B                     l1246:
   569                           
   570                           ;Slave1.c: 55:     PIE1bits.SSPIE = 1;
   571  012B  0378               	decf	_ADC_finish,w
   572  012C  1D03               	btfss	3,2
   573  012D  292F               	goto	u121
   574  012E  2930               	goto	u120
   575  012F                     u121:
   576  012F  292B               	goto	l1246
   577  0130                     u120:
   578  0130                     l1248:
   579                           
   580                           ;Slave1.c: 56: 
   581  0130  01F8               	clrf	_ADC_finish
   582  0131                     l1250:
   583                           
   584                           ;Slave1.c: 57:     ADC_finish = 0;
   585  0131  309F               	movlw	159
   586  0132  1283               	bcf	3,5	;RP0=0, select bank0
   587  0133  1303               	bcf	3,6	;RP1=0, select bank0
   588  0134  00A3               	movwf	??_main
   589  0135                     u137:
   590  0135  2936               	nop2
   591  0136  0BA3               	decfsz	??_main,f
   592  0137  2935               	goto	u137
   593  0138  2939               	nop2
   594  0139                     l1252:
   595                           
   596                           ;Slave1.c: 58:     OK = 0;
   597  0139  1283               	bcf	3,5	;RP0=0, select bank0
   598  013A  1303               	bcf	3,6	;RP1=0, select bank0
   599  013B  149F               	bsf	31,1	;volatile
   600  013C  292B               	goto	l1246
   601  013D  120A  118A  280C   	ljmp	start
   602  0140                     __end_of_main:
   603                           
   604                           	psect	text1
   605  016A                     __ptext1:	
   606 ;; *************** function _setup *****************
   607 ;; Defined at:
   608 ;;		line 70 in file "Slave1.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    4
   629 ;; This function calls:
   630 ;;		_spiInit
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _setup
   638  016A                     _setup:
   639  016A                     l1138:	
   640                           ;incstack = 0
   641                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   642                           
   643                           
   644                           ;Slave1.c: 71:     }
   645  016A  1683               	bsf	3,5	;RP0=1, select bank3
   646  016B  1703               	bsf	3,6	;RP1=1, select bank3
   647  016C  0188               	clrf	8	;volatile
   648                           
   649                           ;Slave1.c: 72: 
   650  016D  0189               	clrf	9	;volatile
   651  016E                     l1140:
   652                           
   653                           ;Slave1.c: 73: }
   654  016E  1508               	bsf	8,2	;volatile
   655  016F  1683               	bsf	3,5	;RP0=1, select bank1
   656  0170  1303               	bcf	3,6	;RP1=0, select bank1
   657  0171  0188               	clrf	8	;volatile
   658  0172  0187               	clrf	7	;volatile
   659  0173  0185               	clrf	5	;volatile
   660  0174                     l1142:
   661  0174  1505               	bsf	5,2	;volatile
   662  0175                     l1144:
   663  0175  1685               	bsf	5,5	;volatile
   664  0176                     l1146:
   665  0176  1607               	bsf	7,4	;volatile
   666  0177                     l1148:
   667  0177  1587               	bsf	7,3	;volatile
   668  0178  1283               	bcf	3,5	;RP0=0, select bank0
   669  0179  1303               	bcf	3,6	;RP1=0, select bank0
   670  017A  0188               	clrf	8	;volatile
   671  017B  0187               	clrf	7	;volatile
   672  017C                     l1150:
   673  017C  178B               	bsf	11,7	;volatile
   674  017D                     l1152:
   675  017D  170B               	bsf	11,6	;volatile
   676  017E                     l1154:
   677  017E  118C               	bcf	12,3	;volatile
   678  017F                     l1156:
   679  017F  1683               	bsf	3,5	;RP0=1, select bank1
   680  0180  1303               	bcf	3,6	;RP1=0, select bank1
   681  0181  158C               	bsf	12,3	;volatile
   682  0182  01F8               	clrf	_ADC_finish
   683  0183  01F7               	clrf	_OK
   684  0184                     l1158:
   685  0184  01F4               	clrf	spiInit@sDataSample
   686  0185  01F5               	clrf	spiInit@sClockIdle
   687  0186  01F6               	clrf	spiInit@sTransmitEdge
   688  0187  3024               	movlw	36
   689  0188  120A  118A  218E  120A  118A  	fcall	_spiInit
   690  018D                     l60:
   691  018D  0008               	return
   692  018E                     __end_of_setup:
   693                           
   694                           	psect	text2
   695  018E                     __ptext2:	
   696 ;; *************** function _spiInit *****************
   697 ;; Defined at:
   698 ;;		line 12 in file "SPI.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  sType           1    wreg     enum E1264
   701 ;;  sDataSample     1    4[COMMON] enum E1272
   702 ;;  sClockIdle      1    5[COMMON] enum E1276
   703 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  sType           1    0[BANK0 ] enum E1264
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         3       0       0       0       0
   716 ;;      Locals:         0       1       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         3       1       0       0       0
   719 ;;Total ram usage:        4 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    3
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_setup
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _spiInit
   731  018E                     _spiInit:
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   735                           ;spiInit@sType stored from wreg
   736  018E  1283               	bcf	3,5	;RP0=0, select bank0
   737  018F  1303               	bcf	3,6	;RP1=0, select bank0
   738  0190  00A0               	movwf	spiInit@sType
   739  0191                     l1128:
   740                           
   741                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   742  0191  1683               	bsf	3,5	;RP0=1, select bank1
   743  0192  1303               	bcf	3,6	;RP1=0, select bank1
   744  0193  1287               	bcf	7,5	;volatile
   745                           
   746                           ;SPI.c: 15:     if(sType & 0b00000100)
   747  0194  1283               	bcf	3,5	;RP0=0, select bank0
   748  0195  1303               	bcf	3,6	;RP1=0, select bank0
   749  0196  1D20               	btfss	spiInit@sType,2
   750  0197  2999               	goto	u101
   751  0198  299A               	goto	u100
   752  0199                     u101:
   753  0199  29A0               	goto	l1134
   754  019A                     u100:
   755  019A                     l1130:
   756                           
   757                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   758  019A  0876               	movf	spiInit@sTransmitEdge,w
   759  019B  1683               	bsf	3,5	;RP0=1, select bank1
   760  019C  1303               	bcf	3,6	;RP1=0, select bank1
   761  019D  0094               	movwf	20	;volatile
   762  019E                     l1132:
   763                           
   764                           ;SPI.c: 18:         TRISC3 = 1;
   765  019E  1587               	bsf	7,3	;volatile
   766                           
   767                           ;SPI.c: 19:     }
   768  019F  29A6               	goto	l130
   769  01A0                     l1134:
   770                           
   771                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   772  01A0  0874               	movf	spiInit@sDataSample,w
   773  01A1  0476               	iorwf	spiInit@sTransmitEdge,w
   774  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   775  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   776  01A4  0094               	movwf	20	;volatile
   777  01A5                     l1136:
   778                           
   779                           ;SPI.c: 23:         TRISC3 = 0;
   780  01A5  1187               	bcf	7,3	;volatile
   781  01A6                     l130:	
   782                           ;SPI.c: 24:     }
   783                           
   784                           
   785                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   786  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   787  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   788  01A8  0820               	movf	spiInit@sType,w
   789  01A9  0475               	iorwf	spiInit@sClockIdle,w
   790  01AA  0094               	movwf	20	;volatile
   791  01AB                     l131:
   792  01AB  0008               	return
   793  01AC                     __end_of_spiInit:
   794                           
   795                           	psect	text3
   796  0016                     __ptext3:	
   797 ;; *************** function _ADC_setup *****************
   798 ;; Defined at:
   799 ;;		line 3 in file "ADC.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  ConClock        1    wreg     unsigned char 
   802 ;;  Channel         1    4[COMMON] unsigned char 
   803 ;;  Format          1    5[COMMON] unsigned char 
   804 ;;  Vref            1    6[COMMON] unsigned char 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  ConClock        1    2[BANK0 ] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         3       0       0       0       0
   817 ;;      Locals:         0       1       0       0       0
   818 ;;      Temps:          0       2       0       0       0
   819 ;;      Totals:         3       3       0       0       0
   820 ;;Total ram usage:        6 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    3
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _ADC_setup
   832  0016                     _ADC_setup:
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
   836                           ;ADC_setup@ConClock stored from wreg
   837  0016  1283               	bcf	3,5	;RP0=0, select bank0
   838  0017  1303               	bcf	3,6	;RP1=0, select bank0
   839  0018  00A2               	movwf	ADC_setup@ConClock
   840  0019                     l1160:
   841                           
   842                           ;ADC.c: 4:     switch (ConClock) {
   843  0019  282F               	goto	l1174
   844  001A                     l1162:
   845                           
   846                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
   847  001A  303F               	movlw	-193
   848  001B  059F               	andwf	31,f	;volatile
   849                           
   850                           ;ADC.c: 7:             break;
   851  001C  2894               	goto	l1212
   852  001D                     l1164:
   853                           
   854                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
   855  001D  081F               	movf	31,w	;volatile
   856  001E  393F               	andlw	-193
   857  001F  3840               	iorlw	64
   858  0020  009F               	movwf	31	;volatile
   859                           
   860                           ;ADC.c: 10:             break;
   861  0021  2894               	goto	l1212
   862  0022                     l1166:
   863                           
   864                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
   865  0022  081F               	movf	31,w	;volatile
   866  0023  393F               	andlw	-193
   867  0024  3880               	iorlw	128
   868  0025  009F               	movwf	31	;volatile
   869                           
   870                           ;ADC.c: 13:             break;
   871  0026  2894               	goto	l1212
   872  0027                     l1168:
   873                           
   874                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
   875  0027  30C0               	movlw	192
   876  0028  049F               	iorwf	31,f	;volatile
   877                           
   878                           ;ADC.c: 16:             break;
   879  0029  2894               	goto	l1212
   880  002A                     l1170:
   881                           
   882                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
   883  002A  081F               	movf	31,w	;volatile
   884  002B  393F               	andlw	-193
   885  002C  3880               	iorlw	128
   886  002D  009F               	movwf	31	;volatile
   887                           
   888                           ;ADC.c: 19:             break;
   889  002E  2894               	goto	l1212
   890  002F                     l1174:
   891  002F  0822               	movf	ADC_setup@ConClock,w
   892  0030  00A0               	movwf	??_ADC_setup
   893  0031  01A1               	clrf	??_ADC_setup+1
   894                           
   895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   896                           ; Switch size 1, requested type "simple"
   897                           ; Number of cases is 1, Range of values is 0 to 0
   898                           ; switch strategies available:
   899                           ; Name         Instructions Cycles
   900                           ; simple_byte            4     3 (average)
   901                           ; direct_byte           11     8 (fixed)
   902                           ; jumptable            260     6 (fixed)
   903                           ;	Chosen strategy is simple_byte
   904  0032  0821               	movf	??_ADC_setup+1,w
   905  0033  3A00               	xorlw	0	; case 0
   906  0034  1903               	skipnz
   907  0035  2837               	goto	l1344
   908  0036  282A               	goto	l1170
   909  0037                     l1344:
   910                           
   911                           ; Switch size 1, requested type "simple"
   912                           ; Number of cases is 4, Range of values is 1 to 4
   913                           ; switch strategies available:
   914                           ; Name         Instructions Cycles
   915                           ; simple_byte           13     7 (average)
   916                           ; direct_byte           23    11 (fixed)
   917                           ; jumptable            263     9 (fixed)
   918                           ;	Chosen strategy is simple_byte
   919  0037  0820               	movf	??_ADC_setup,w
   920  0038  3A01               	xorlw	1	; case 1
   921  0039  1903               	skipnz
   922  003A  281A               	goto	l1162
   923  003B  3A03               	xorlw	3	; case 2
   924  003C  1903               	skipnz
   925  003D  281D               	goto	l1164
   926  003E  3A01               	xorlw	1	; case 3
   927  003F  1903               	skipnz
   928  0040  2822               	goto	l1166
   929  0041  3A07               	xorlw	7	; case 4
   930  0042  1903               	skipnz
   931  0043  2827               	goto	l1168
   932  0044  282A               	goto	l1170
   933  0045                     l1176:
   934                           
   935                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
   936  0045  30C3               	movlw	-61
   937  0046  059F               	andwf	31,f	;volatile
   938                           
   939                           ;ADC.c: 24:             break;
   940  0047  28CE               	goto	l1214
   941  0048                     l1178:
   942                           
   943                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
   944  0048  081F               	movf	31,w	;volatile
   945  0049  39C3               	andlw	-61
   946  004A  3804               	iorlw	4
   947  004B  009F               	movwf	31	;volatile
   948                           
   949                           ;ADC.c: 27:             break;
   950  004C  28CE               	goto	l1214
   951  004D                     l1180:
   952                           
   953                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
   954  004D  081F               	movf	31,w	;volatile
   955  004E  39C3               	andlw	-61
   956  004F  3808               	iorlw	8
   957  0050  009F               	movwf	31	;volatile
   958                           
   959                           ;ADC.c: 30:             break;
   960  0051  28CE               	goto	l1214
   961  0052                     l1182:
   962                           
   963                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
   964  0052  081F               	movf	31,w	;volatile
   965  0053  39C3               	andlw	-61
   966  0054  380C               	iorlw	12
   967  0055  009F               	movwf	31	;volatile
   968                           
   969                           ;ADC.c: 33:             break;
   970  0056  28CE               	goto	l1214
   971  0057                     l1184:
   972                           
   973                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
   974  0057  081F               	movf	31,w	;volatile
   975  0058  39C3               	andlw	-61
   976  0059  3810               	iorlw	16
   977  005A  009F               	movwf	31	;volatile
   978                           
   979                           ;ADC.c: 36:             break;
   980  005B  28CE               	goto	l1214
   981  005C                     l1186:
   982                           
   983                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
   984  005C  081F               	movf	31,w	;volatile
   985  005D  39C3               	andlw	-61
   986  005E  3814               	iorlw	20
   987  005F  009F               	movwf	31	;volatile
   988                           
   989                           ;ADC.c: 39:             break;
   990  0060  28CE               	goto	l1214
   991  0061                     l1188:
   992                           
   993                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
   994  0061  081F               	movf	31,w	;volatile
   995  0062  39C3               	andlw	-61
   996  0063  3818               	iorlw	24
   997  0064  009F               	movwf	31	;volatile
   998                           
   999                           ;ADC.c: 42:             break;
  1000  0065  28CE               	goto	l1214
  1001  0066                     l1190:
  1002                           
  1003                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
  1004  0066  081F               	movf	31,w	;volatile
  1005  0067  39C3               	andlw	-61
  1006  0068  381C               	iorlw	28
  1007  0069  009F               	movwf	31	;volatile
  1008                           
  1009                           ;ADC.c: 45:             break;
  1010  006A  28CE               	goto	l1214
  1011  006B                     l1192:
  1012                           
  1013                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
  1014  006B  081F               	movf	31,w	;volatile
  1015  006C  39C3               	andlw	-61
  1016  006D  3820               	iorlw	32
  1017  006E  009F               	movwf	31	;volatile
  1018                           
  1019                           ;ADC.c: 48:             break;
  1020  006F  28CE               	goto	l1214
  1021  0070                     l1194:
  1022                           
  1023                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
  1024  0070  081F               	movf	31,w	;volatile
  1025  0071  39C3               	andlw	-61
  1026  0072  3824               	iorlw	36
  1027  0073  009F               	movwf	31	;volatile
  1028                           
  1029                           ;ADC.c: 51:             break;
  1030  0074  28CE               	goto	l1214
  1031  0075                     l1196:
  1032                           
  1033                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
  1034  0075  081F               	movf	31,w	;volatile
  1035  0076  39C3               	andlw	-61
  1036  0077  3828               	iorlw	40
  1037  0078  009F               	movwf	31	;volatile
  1038                           
  1039                           ;ADC.c: 54:             break;
  1040  0079  28CE               	goto	l1214
  1041  007A                     l1198:
  1042                           
  1043                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
  1044  007A  081F               	movf	31,w	;volatile
  1045  007B  39C3               	andlw	-61
  1046  007C  382C               	iorlw	44
  1047  007D  009F               	movwf	31	;volatile
  1048                           
  1049                           ;ADC.c: 57:             break;
  1050  007E  28CE               	goto	l1214
  1051  007F                     l1200:
  1052                           
  1053                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
  1054  007F  081F               	movf	31,w	;volatile
  1055  0080  39C3               	andlw	-61
  1056  0081  3830               	iorlw	48
  1057  0082  009F               	movwf	31	;volatile
  1058                           
  1059                           ;ADC.c: 60:             break;
  1060  0083  28CE               	goto	l1214
  1061  0084                     l1202:
  1062                           
  1063                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
  1064  0084  081F               	movf	31,w	;volatile
  1065  0085  39C3               	andlw	-61
  1066  0086  3834               	iorlw	52
  1067  0087  009F               	movwf	31	;volatile
  1068                           
  1069                           ;ADC.c: 63:             break;
  1070  0088  28CE               	goto	l1214
  1071  0089                     l1204:
  1072                           
  1073                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
  1074  0089  081F               	movf	31,w	;volatile
  1075  008A  39C3               	andlw	-61
  1076  008B  3838               	iorlw	56
  1077  008C  009F               	movwf	31	;volatile
  1078                           
  1079                           ;ADC.c: 66:             break;
  1080  008D  28CE               	goto	l1214
  1081  008E                     l1206:
  1082                           
  1083                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
  1084  008E  303C               	movlw	60
  1085  008F  049F               	iorwf	31,f	;volatile
  1086                           
  1087                           ;ADC.c: 69:             break;
  1088  0090  28CE               	goto	l1214
  1089  0091                     l1208:
  1090                           
  1091                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
  1092  0091  30C3               	movlw	-61
  1093  0092  059F               	andwf	31,f	;volatile
  1094                           
  1095                           ;ADC.c: 72:             break;
  1096  0093  28CE               	goto	l1214
  1097  0094                     l1212:
  1098  0094  0874               	movf	ADC_setup@Channel,w
  1099  0095  00A0               	movwf	??_ADC_setup
  1100  0096  01A1               	clrf	??_ADC_setup+1
  1101                           
  1102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1103                           ; Switch size 1, requested type "simple"
  1104                           ; Number of cases is 1, Range of values is 0 to 0
  1105                           ; switch strategies available:
  1106                           ; Name         Instructions Cycles
  1107                           ; simple_byte            4     3 (average)
  1108                           ; direct_byte           11     8 (fixed)
  1109                           ; jumptable            260     6 (fixed)
  1110                           ;	Chosen strategy is simple_byte
  1111  0097  0821               	movf	??_ADC_setup+1,w
  1112  0098  3A00               	xorlw	0	; case 0
  1113  0099  1903               	skipnz
  1114  009A  289C               	goto	l1346
  1115  009B  2891               	goto	l1208
  1116  009C                     l1346:
  1117                           
  1118                           ; Switch size 1, requested type "simple"
  1119                           ; Number of cases is 16, Range of values is 0 to 15
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte           49    25 (average)
  1123                           ; direct_byte           56     8 (fixed)
  1124                           ; jumptable            260     6 (fixed)
  1125                           ;	Chosen strategy is simple_byte
  1126  009C  0820               	movf	??_ADC_setup,w
  1127  009D  3A00               	xorlw	0	; case 0
  1128  009E  1903               	skipnz
  1129  009F  2845               	goto	l1176
  1130  00A0  3A01               	xorlw	1	; case 1
  1131  00A1  1903               	skipnz
  1132  00A2  2848               	goto	l1178
  1133  00A3  3A03               	xorlw	3	; case 2
  1134  00A4  1903               	skipnz
  1135  00A5  284D               	goto	l1180
  1136  00A6  3A01               	xorlw	1	; case 3
  1137  00A7  1903               	skipnz
  1138  00A8  2852               	goto	l1182
  1139  00A9  3A07               	xorlw	7	; case 4
  1140  00AA  1903               	skipnz
  1141  00AB  2857               	goto	l1184
  1142  00AC  3A01               	xorlw	1	; case 5
  1143  00AD  1903               	skipnz
  1144  00AE  285C               	goto	l1186
  1145  00AF  3A03               	xorlw	3	; case 6
  1146  00B0  1903               	skipnz
  1147  00B1  2861               	goto	l1188
  1148  00B2  3A01               	xorlw	1	; case 7
  1149  00B3  1903               	skipnz
  1150  00B4  2866               	goto	l1190
  1151  00B5  3A0F               	xorlw	15	; case 8
  1152  00B6  1903               	skipnz
  1153  00B7  286B               	goto	l1192
  1154  00B8  3A01               	xorlw	1	; case 9
  1155  00B9  1903               	skipnz
  1156  00BA  2870               	goto	l1194
  1157  00BB  3A03               	xorlw	3	; case 10
  1158  00BC  1903               	skipnz
  1159  00BD  2875               	goto	l1196
  1160  00BE  3A01               	xorlw	1	; case 11
  1161  00BF  1903               	skipnz
  1162  00C0  287A               	goto	l1198
  1163  00C1  3A07               	xorlw	7	; case 12
  1164  00C2  1903               	skipnz
  1165  00C3  287F               	goto	l1200
  1166  00C4  3A01               	xorlw	1	; case 13
  1167  00C5  1903               	skipnz
  1168  00C6  2884               	goto	l1202
  1169  00C7  3A03               	xorlw	3	; case 14
  1170  00C8  1903               	skipnz
  1171  00C9  2889               	goto	l1204
  1172  00CA  3A01               	xorlw	1	; case 15
  1173  00CB  1903               	skipnz
  1174  00CC  288E               	goto	l1206
  1175  00CD  2891               	goto	l1208
  1176  00CE                     l1214:
  1177                           
  1178                           ;ADC.c: 74:     if (Format == 1) {
  1179  00CE  0375               	decf	ADC_setup@Format,w
  1180  00CF  1D03               	btfss	3,2
  1181  00D0  28D2               	goto	u111
  1182  00D1  28D3               	goto	u110
  1183  00D2                     u111:
  1184  00D2  28D7               	goto	l105
  1185  00D3                     u110:
  1186  00D3                     l1216:
  1187                           
  1188                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
  1189  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1190  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1191  00D5  179F               	bsf	31,7	;volatile
  1192                           
  1193                           ;ADC.c: 76:     } else {
  1194  00D6  28F4               	goto	l1220
  1195  00D7                     l105:
  1196                           
  1197                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
  1198  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1199  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1200  00D9  139F               	bcf	31,7	;volatile
  1201  00DA  28F4               	goto	l1220
  1202  00DB                     l108:	
  1203                           ;ADC.c: 80:         case 1:
  1204                           
  1205                           
  1206                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
  1207  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1208  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1209  00DD  121F               	bcf	31,4	;volatile
  1210                           
  1211                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
  1212  00DE  129F               	bcf	31,5	;volatile
  1213                           
  1214                           ;ADC.c: 83:             break;
  1215  00DF  290C               	goto	l109
  1216  00E0                     l110:	
  1217                           ;ADC.c: 84:         case 2:
  1218                           
  1219                           
  1220                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
  1221  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1222  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1223  00E2  161F               	bsf	31,4	;volatile
  1224                           
  1225                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
  1226  00E3  169F               	bsf	31,5	;volatile
  1227                           
  1228                           ;ADC.c: 87:             break;
  1229  00E4  290C               	goto	l109
  1230  00E5                     l111:	
  1231                           ;ADC.c: 88:         case 3:
  1232                           
  1233                           
  1234                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
  1235  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00E7  121F               	bcf	31,4	;volatile
  1238                           
  1239                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
  1240  00E8  169F               	bsf	31,5	;volatile
  1241                           
  1242                           ;ADC.c: 91:             break;
  1243  00E9  290C               	goto	l109
  1244  00EA                     l112:	
  1245                           ;ADC.c: 92:         case 4:
  1246                           
  1247                           
  1248                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  1249  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1250  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1251  00EC  161F               	bsf	31,4	;volatile
  1252                           
  1253                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  1254  00ED  129F               	bcf	31,5	;volatile
  1255                           
  1256                           ;ADC.c: 95:             break;
  1257  00EE  290C               	goto	l109
  1258  00EF                     l113:	
  1259                           ;ADC.c: 96:         default:
  1260                           
  1261                           
  1262                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1263  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1264  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1265  00F1  121F               	bcf	31,4	;volatile
  1266                           
  1267                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  1268  00F2  129F               	bcf	31,5	;volatile
  1269                           
  1270                           ;ADC.c: 99:             break;
  1271  00F3  290C               	goto	l109
  1272  00F4                     l1220:
  1273  00F4  0876               	movf	ADC_setup@Vref,w
  1274  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1275  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1276  00F7  00A0               	movwf	??_ADC_setup
  1277  00F8  01A1               	clrf	??_ADC_setup+1
  1278                           
  1279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1280                           ; Switch size 1, requested type "simple"
  1281                           ; Number of cases is 1, Range of values is 0 to 0
  1282                           ; switch strategies available:
  1283                           ; Name         Instructions Cycles
  1284                           ; simple_byte            4     3 (average)
  1285                           ; direct_byte           11     8 (fixed)
  1286                           ; jumptable            260     6 (fixed)
  1287                           ;	Chosen strategy is simple_byte
  1288  00F9  0821               	movf	??_ADC_setup+1,w
  1289  00FA  3A00               	xorlw	0	; case 0
  1290  00FB  1903               	skipnz
  1291  00FC  28FE               	goto	l1348
  1292  00FD  28EF               	goto	l113
  1293  00FE                     l1348:
  1294                           
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 4, Range of values is 1 to 4
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           13     7 (average)
  1300                           ; direct_byte           23    11 (fixed)
  1301                           ; jumptable            263     9 (fixed)
  1302                           ;	Chosen strategy is simple_byte
  1303  00FE  0820               	movf	??_ADC_setup,w
  1304  00FF  3A01               	xorlw	1	; case 1
  1305  0100  1903               	skipnz
  1306  0101  28DB               	goto	l108
  1307  0102  3A03               	xorlw	3	; case 2
  1308  0103  1903               	skipnz
  1309  0104  28E0               	goto	l110
  1310  0105  3A01               	xorlw	1	; case 3
  1311  0106  1903               	skipnz
  1312  0107  28E5               	goto	l111
  1313  0108  3A07               	xorlw	7	; case 4
  1314  0109  1903               	skipnz
  1315  010A  28EA               	goto	l112
  1316  010B  28EF               	goto	l113
  1317  010C                     l109:
  1318                           
  1319                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  1320  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1321  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1322  010E  141F               	bsf	31,0	;volatile
  1323                           
  1324                           ;ADC.c: 102:     INTCONbits.GIE=1;
  1325  010F  178B               	bsf	11,7	;volatile
  1326                           
  1327                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  1328  0110  170B               	bsf	11,6	;volatile
  1329                           
  1330                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  1331  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0113  170C               	bsf	12,6	;volatile
  1334  0114                     l114:
  1335  0114  0008               	return
  1336  0115                     __end_of_ADC_setup:
  1337                           
  1338                           	psect	text4
  1339  0140                     __ptext4:	
  1340 ;; *************** function _oli *****************
  1341 ;; Defined at:
  1342 ;;		line 95 in file "Slave1.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          3       0       0       0       0
  1359 ;;      Totals:         3       0       0       0       0
  1360 ;;Total ram usage:        3 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		_spiRead
  1365 ;;		_spiWrite
  1366 ;; This function is called by:
  1367 ;;		Interrupt level 1
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _oli
  1373  0140                     _oli:
  1374  0140                     i1l870:
  1375  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0142  1F0C               	btfss	12,6	;volatile
  1378  0143  2945               	goto	u5_21
  1379  0144  2946               	goto	u5_20
  1380  0145                     u5_21:
  1381  0145  294E               	goto	i1l65
  1382  0146                     u5_20:
  1383  0146                     i1l872:
  1384  0146  130C               	bcf	12,6	;volatile
  1385  0147                     i1l874:
  1386  0147  081E               	movf	30,w	;volatile
  1387  0148  00F1               	movwf	??_oli
  1388  0149  0871               	movf	??_oli,w
  1389  014A  00F9               	movwf	_ADC_value
  1390  014B                     i1l876:
  1391  014B  01F8               	clrf	_ADC_finish
  1392  014C  0AF8               	incf	_ADC_finish,f
  1393  014D  2963               	goto	i1l68
  1394  014E                     i1l65:
  1395  014E  1D8C               	btfss	12,3	;volatile
  1396  014F  2951               	goto	u6_21
  1397  0150  2952               	goto	u6_20
  1398  0151                     u6_21:
  1399  0151  2963               	goto	i1l68
  1400  0152                     u6_20:
  1401  0152                     i1l878:
  1402  0152  120A  118A  21AC  120A  118A  	fcall	_spiRead
  1403  0157  00F1               	movwf	??_oli
  1404  0158  0871               	movf	??_oli,w
  1405  0159  00F7               	movwf	_OK
  1406  015A  0879               	movf	_ADC_value,w
  1407  015B  120A  118A  21BC  120A  118A  	fcall	_spiWrite
  1408  0160                     i1l880:
  1409  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0162  118C               	bcf	12,3	;volatile
  1412  0163                     i1l68:
  1413  0163  0873               	movf	??_oli+2,w
  1414  0164  008A               	movwf	10
  1415  0165  0E72               	swapf	??_oli+1,w
  1416  0166  0083               	movwf	3
  1417  0167  0EFE               	swapf	btemp,f
  1418  0168  0E7E               	swapf	btemp,w
  1419  0169  0009               	retfie
  1420  016A                     __end_of_oli:
  1421                           
  1422                           	psect	intentry
  1423  0004                     __pintentry:	
  1424                           ;incstack = 0
  1425                           ; Regs used in _oli: [wreg+status,2+status,0+pclath+cstack]
  1426                           
  1427  0004                     interrupt_function:
  1428  007E                     saved_w	set	btemp
  1429  0004  00FE               	movwf	btemp
  1430  0005  0E03               	swapf	3,w
  1431  0006  00F2               	movwf	??_oli+1
  1432  0007  080A               	movf	10,w
  1433  0008  00F3               	movwf	??_oli+2
  1434  0009  120A  118A  2940   	ljmp	_oli
  1435                           
  1436                           	psect	text5
  1437  01BC                     __ptext5:	
  1438 ;; *************** function _spiWrite *****************
  1439 ;; Defined at:
  1440 ;;		line 34 in file "SPI.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  dat             1    wreg     unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  dat             1    0[COMMON] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         1       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0
  1457 ;;      Totals:         1       0       0       0       0
  1458 ;;Total ram usage:        1 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_oli
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _spiWrite
  1469  01BC                     _spiWrite:
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _spiWrite: [wreg]
  1473                           ;spiWrite@dat stored from wreg
  1474  01BC  00F0               	movwf	spiWrite@dat
  1475  01BD                     i1l854:
  1476                           
  1477                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1478  01BD  0870               	movf	spiWrite@dat,w
  1479  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1480  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1481  01C0  0093               	movwf	19	;volatile
  1482  01C1                     i1l140:
  1483  01C1  0008               	return
  1484  01C2                     __end_of_spiWrite:
  1485                           
  1486                           	psect	text6
  1487  01AC                     __ptext6:	
  1488 ;; *************** function _spiRead *****************
  1489 ;; Defined at:
  1490 ;;		line 47 in file "SPI.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    1
  1511 ;; This function calls:
  1512 ;;		_spiReceiveWait
  1513 ;; This function is called by:
  1514 ;;		_oli
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _spiRead
  1520  01AC                     _spiRead:
  1521  01AC                     i1l848:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1524                           
  1525                           
  1526                           ;SPI.c: 49:     spiReceiveWait();
  1527  01AC  120A  118A  21B5  120A  118A  	fcall	_spiReceiveWait
  1528  01B1                     i1l850:
  1529                           
  1530                           ;SPI.c: 50:     return(SSPBUF);
  1531  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1532  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1533  01B3  0813               	movf	19,w	;volatile
  1534  01B4                     i1l148:
  1535  01B4  0008               	return
  1536  01B5                     __end_of_spiRead:
  1537                           
  1538                           	psect	text7
  1539  01B5                     __ptext7:	
  1540 ;; *************** function _spiReceiveWait *****************
  1541 ;; Defined at:
  1542 ;;		line 29 in file "SPI.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		None
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_spiRead
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _spiReceiveWait
  1571  01B5                     _spiReceiveWait:
  1572  01B5                     i1l750:	
  1573                           ;incstack = 0
  1574                           ; Regs used in _spiReceiveWait: []
  1575                           
  1576  01B5                     i1l134:	
  1577                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1578                           
  1579  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1580  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1581  01B7  1C14               	btfss	20,0	;volatile
  1582  01B8  29BA               	goto	u2_21
  1583  01B9  29BB               	goto	u2_20
  1584  01BA                     u2_21:
  1585  01BA  29B5               	goto	i1l134
  1586  01BB                     u2_20:
  1587  01BB                     i1l137:
  1588  01BB  0008               	return
  1589  01BC                     __end_of_spiReceiveWait:
  1590  007E                     btemp	set	126	;btemp
  1591  007E                     wtemp0	set	126
  1592                           
  1593                           	psect	config
  1594                           
  1595                           ;Config register CONFIG1 @ 0x2007
  1596                           ;	Oscillator Selection bits
  1597                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1598                           ;	Watchdog Timer Enable bit
  1599                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1600                           ;	Power-up Timer Enable bit
  1601                           ;	PWRTE = OFF, PWRT disabled
  1602                           ;	RE3/MCLR pin function select bit
  1603                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1604                           ;	Code Protection bit
  1605                           ;	CP = OFF, Program memory code protection is disabled
  1606                           ;	Data Code Protection bit
  1607                           ;	CPD = OFF, Data memory code protection is disabled
  1608                           ;	Brown Out Reset Selection bits
  1609                           ;	BOREN = OFF, BOR disabled
  1610                           ;	Internal External Switchover bit
  1611                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1612                           ;	Fail-Safe Clock Monitor Enabled bit
  1613                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1614                           ;	Low Voltage Programming Enable bit
  1615                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1616                           ;	In-Circuit Debugger Mode bit
  1617                           ;	DEBUG = 0x1, unprogrammed default
  1618  2007                     	org	8199
  1619  2007  20F1               	dw	8433
  1620                           
  1621                           ;Config register CONFIG2 @ 0x2008
  1622                           ;	Brown-out Reset Selection bit
  1623                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1624                           ;	Flash Program Memory Self Write Enable bits
  1625                           ;	WRT = OFF, Write protection off
  1626  2008                     	org	8200
  1627  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_setup
    _setup->_spiInit

Critical Paths under _oli in COMMON

    _oli->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC_setup
    _setup->_spiInit

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     850
                                              3 BANK0      1     1      0
                          _ADC_setup
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     394
                                              4 COMMON     3     0      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _oli                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _setup
     _spiInit

 _oli (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:49:00 2021

            _SSPSTATbits 0094                       l60 018D                       _OK 0077  
                    l110 00E0                      l111 00E5                      l112 00EA  
                    l113 00EF                      l105 00D7                      l114 0114  
                    l130 01A6                      l131 01AB                      l108 00DB  
                    l109 010C       __size_of_ADC_setup 00FF                      u100 019A  
                    u101 0199                      u110 00D3                      u111 00D2  
                    u120 0130                      u121 012F                      u137 0135  
                    _oli 0140                     l1200 007F                     l1202 0084  
                   l1130 019A                     l1220 00F4                     l1204 0089  
                   l1212 0094                     l1132 019E                     l1140 016E  
                   l1206 008E                     l1214 00CE                     l1134 01A0  
                   l1150 017C                     l1142 0174                     l1216 00D3  
                   l1208 0091                     l1160 0019                     l1136 01A5  
                   l1128 0191                     l1152 017D                     l1144 0175  
                   l1240 0115                     l1170 002A                     l1162 001A  
                   l1154 017E                     l1146 0176                     l1138 016A  
                   l1250 0131                     l1242 011A                     l1180 004D  
                   l1164 001D                     l1156 017F                     l1148 0177  
                   l1252 0139                     l1244 0128                     l1190 0066  
                   l1182 0052                     l1166 0022                     l1174 002F  
                   l1158 0184                     l1246 012B                     l1192 006B  
                   l1184 0057                     l1176 0045                     l1344 0037  
                   l1168 0027                     l1248 0130                     l1346 009C  
                   l1194 0070                     l1186 005C                     l1178 0048  
                   l1348 00FE                     l1196 0075                     l1188 0061  
                   l1198 007A                     ?_oli 0070                     i1l65 014E  
                   i1l68 0163                     u2_20 01BB                     u2_21 01BA  
                   u5_20 0146                     u5_21 0145                     u6_20 0152  
                   u6_21 0151                     _main 0115                     btemp 007E  
                   start 000C                    ??_oli 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l140 01C1                    i1l134 01B5  
                  i1l137 01BB                    i1l148 01B4                    i1l750 01B5  
                  i1l850 01B1                    i1l854 01BD                    i1l870 0140  
                  i1l848 01AC                    i1l880 0160                    i1l872 0146  
                  i1l874 0147                    i1l876 014B                    i1l878 0152  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _setup 016A  
                  pclath 000A          __end_of_spiInit 01AC          __end_of_spiRead 01B5  
                  status 0003                    wtemp0 007E        __end_of_ADC_setup 0115  
        __initialization 000F             __end_of_main 0140                   ??_main 0023  
          ADC_setup@Vref 0076                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         ADC_setup@Channel 0074  
                 saved_w 007E         __end_of_spiWrite 01C2                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 018E                  ??_setup 0077               __pmaintext 0115  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              _ADC_value 0079                _ADC_setup 0016                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 016A                  __ptext2 018E  
                __ptext3 0016                  __ptext4 0140                  __ptext5 01BC  
                __ptext6 01AC                  __ptext7 01B5             __size_of_oli 002A  
      ADC_setup@ConClock 0022                  _spiInit 018E                  _spiRead 01AC  
   end_of_initialization 0012               ?_ADC_setup 0074               ??_spiWrite 0070  
              _TRISAbits 0085                _TRISCbits 0087              spiWrite@dat 0070  
         _spiReceiveWait 01B5      start_initialization 000F              __end_of_oli 016A  
 __end_of_spiReceiveWait 01BC              ??_ADC_setup 0020          ADC_setup@Format 0075  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0024     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             _ADC_finish 0078         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 002B                 _spiWrite 01BC             spiInit@sType 0020  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
