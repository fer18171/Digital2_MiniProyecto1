

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:49:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  001E                     _ADRESH	set	30
   370  000C                     _PIR1bits	set	12
   371  000B                     _INTCONbits	set	11
   372  0006                     _PORTB	set	6
   373  0007                     _PORTC	set	7
   374  0008                     _PORTD	set	8
   375  001F                     _ADCON0bits	set	31
   376  0040                     _RD0	set	64
   377  0041                     _RD1	set	65
   378  0042                     _RD2	set	66
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008C                     _PIE1bits	set	140
   382  009F                     _ADCON1bits	set	159
   383  0087                     _TRISCbits	set	135
   384  0085                     _TRISAbits	set	133
   385  0086                     _TRISB	set	134
   386  0085                     _TRISA	set	133
   387  0087                     _TRISC	set	135
   388  0088                     _TRISD	set	136
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0188                     _ANSELbits	set	392
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   403  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   405  0012                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0012                     __end_of__initialization:
   409  0012  0183               	clrf	3
   410  0013  120A  118A  2915   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0077                     __pbssCOMMON:
   414  0077                     _OK:
   415  0077                     	ds	1
   416  0078                     _ADC_finish:
   417  0078                     	ds	1
   418  0079                     _ADC_value:
   419  0079                     	ds	1
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_setup:
   424  0070                     ?_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiRead:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_oli:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_spiReceiveWait:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?i1_spiWrite:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??i1_spiWrite:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     i1spiWrite@dat:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456  0070                     	ds	1
   457  0071                     ??_oli:
   458                           
   459                           ; 1 bytes @ 0x1
   460  0071                     	ds	3
   461  0074                     ?_ADC_setup:
   462  0074                     ??_spiWrite:	
   463                           ; 1 bytes @ 0x4
   464                           
   465  0074                     ?_spiInit:	
   466                           ; 1 bytes @ 0x4
   467                           
   468  0074                     ADC_setup@Channel:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     spiInit@sDataSample:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     spiWrite@dat:	
   475                           ; 1 bytes @ 0x4
   476                           
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ADC_setup@Format:
   481  0075                     spiInit@sClockIdle:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486  0075                     	ds	1
   487  0076                     ADC_setup@Vref:
   488  0076                     spiInit@sTransmitEdge:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	1
   494  0077                     ??_setup:
   495  0077                     ??_spiInit:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  0020                     ??_ADC_setup:
   504  0020                     spiInit@sType:	
   505                           ; 1 bytes @ 0x0
   506                           
   507                           
   508                           ; 1 bytes @ 0x0
   509  0020                     	ds	2
   510  0022                     ADC_setup@ConClock:
   511                           
   512                           ; 1 bytes @ 0x2
   513  0022                     	ds	1
   514  0023                     ??_main:
   515                           
   516                           ; 1 bytes @ 0x3
   517  0023                     	ds	1
   518                           
   519                           	psect	maintext
   520  0115                     __pmaintext:	
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 52 in file "Slave3.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : B00/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       1       0       0       0
   543 ;;      Totals:         0       1       0       0       0
   544 ;;Total ram usage:        1 bytes
   545 ;; Hardware stack levels required when called:    5
   546 ;; This function calls:
   547 ;;		_ADC_setup
   548 ;;		_setup
   549 ;;		_spiWrite
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _main
   557  0115                     _main:
   558  0115                     l1280:	
   559                           ;incstack = 0
   560                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   561                           
   562                           
   563                           ;Slave3.c: 53: 
   564  0115  120A  118A  2193  120A  118A  	fcall	_setup
   565  011A                     l1282:
   566                           
   567                           ;Slave3.c: 54: 
   568  011A  3002               	movlw	2
   569  011B  1283               	bcf	3,5	;RP0=0, select bank0
   570  011C  1303               	bcf	3,6	;RP1=0, select bank0
   571  011D  00A3               	movwf	??_main
   572  011E  0823               	movf	??_main,w
   573  011F  00F4               	movwf	ADC_setup@Channel
   574  0120  01F5               	clrf	ADC_setup@Format
   575  0121  01F6               	clrf	ADC_setup@Vref
   576  0122  3003               	movlw	3
   577  0123  120A  118A  2016  120A  118A  	fcall	_ADC_setup
   578  0128                     l1284:
   579                           
   580                           ;Slave3.c: 55: void setup(void) {
   581  0128  1283               	bcf	3,5	;RP0=0, select bank0
   582  0129  1303               	bcf	3,6	;RP1=0, select bank0
   583  012A  149F               	bsf	31,1	;volatile
   584  012B                     l1286:
   585                           
   586                           ;Slave3.c: 57:     ANSELH = 0;
   587  012B  0378               	decf	_ADC_finish,w
   588  012C  1D03               	btfss	3,2
   589  012D  292F               	goto	u201
   590  012E  2930               	goto	u200
   591  012F                     u201:
   592  012F  293C               	goto	l1294
   593  0130                     u200:
   594  0130                     l1288:
   595                           
   596                           ;Slave3.c: 58:     ANSELbits.ANS2 = 1;
   597  0130  01F8               	clrf	_ADC_finish
   598  0131                     l1290:
   599                           
   600                           ;Slave3.c: 59:     TRISD = 0;
   601  0131  309F               	movlw	159
   602  0132  1283               	bcf	3,5	;RP0=0, select bank0
   603  0133  1303               	bcf	3,6	;RP1=0, select bank0
   604  0134  00A3               	movwf	??_main
   605  0135                     u247:
   606  0135  2936               	nop2
   607  0136  0BA3               	decfsz	??_main,f
   608  0137  2935               	goto	u247
   609  0138  2939               	nop2
   610  0139                     l1292:
   611                           
   612                           ;Slave3.c: 60:     TRISC = 0;
   613  0139  1283               	bcf	3,5	;RP0=0, select bank0
   614  013A  1303               	bcf	3,6	;RP1=0, select bank0
   615  013B  149F               	bsf	31,1	;volatile
   616  013C                     l1294:
   617                           
   618                           ;Slave3.c: 65:     TRISCbits.TRISC4 = 1;
   619  013C  300D               	movlw	13
   620  013D  0279               	subwf	_ADC_value,w
   621  013E  1803               	skipnc
   622  013F  2941               	goto	u211
   623  0140  2942               	goto	u210
   624  0141                     u211:
   625  0141  2948               	goto	l1298
   626  0142                     u210:
   627  0142                     l1296:
   628                           
   629                           ;Slave3.c: 66:     TRISCbits.TRISC3 = 1;
   630  0142  1283               	bcf	3,5	;RP0=0, select bank0
   631  0143  1303               	bcf	3,6	;RP1=0, select bank0
   632  0144  1508               	bsf	8,2	;volatile
   633                           
   634                           ;Slave3.c: 67:     PORTD = 0;
   635  0145  1088               	bcf	8,1	;volatile
   636                           
   637                           ;Slave3.c: 68:     PORTC = 0;
   638  0146  1008               	bcf	8,0	;volatile
   639                           
   640                           ;Slave3.c: 69:     PORTB = 0;
   641  0147  295F               	goto	l1304
   642  0148                     l1298:
   643  0148  300D               	movlw	13
   644  0149  0279               	subwf	_ADC_value,w
   645  014A  1C03               	skipc
   646  014B  294D               	goto	u221
   647  014C  294E               	goto	u220
   648  014D                     u221:
   649  014D  295A               	goto	l65
   650  014E                     u220:
   651  014E                     l1300:
   652  014E  3013               	movlw	19
   653  014F  0279               	subwf	_ADC_value,w
   654  0150  1803               	skipnc
   655  0151  2953               	goto	u231
   656  0152  2954               	goto	u230
   657  0153                     u231:
   658  0153  295A               	goto	l65
   659  0154                     u230:
   660  0154                     l1302:
   661                           
   662                           ;Slave3.c: 70:     INTCONbits.GIE = 1;
   663  0154  1283               	bcf	3,5	;RP0=0, select bank0
   664  0155  1303               	bcf	3,6	;RP1=0, select bank0
   665  0156  1108               	bcf	8,2	;volatile
   666                           
   667                           ;Slave3.c: 71:     INTCONbits.PEIE = 1;
   668  0157  1488               	bsf	8,1	;volatile
   669                           
   670                           ;Slave3.c: 72:     ADC_finish = 0;
   671  0158  1008               	bcf	8,0	;volatile
   672                           
   673                           ;Slave3.c: 73:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   674  0159  295F               	goto	l1304
   675  015A                     l65:
   676                           
   677                           ;Slave3.c: 74: }
   678  015A  1283               	bcf	3,5	;RP0=0, select bank0
   679  015B  1303               	bcf	3,6	;RP1=0, select bank0
   680  015C  1108               	bcf	8,2	;volatile
   681                           
   682                           ;Slave3.c: 75: 
   683  015D  1088               	bcf	8,1	;volatile
   684                           
   685                           ;Slave3.c: 76: void __attribute__((picinterrupt(("")))) oli(void) {
   686  015E  1408               	bsf	8,0	;volatile
   687  015F                     l1304:
   688                           
   689                           ;Slave3.c: 78:         PIR1bits.ADIF = 0;
   690  015F  0879               	movf	_ADC_value,w
   691  0160  120A  118A  21E2  120A  118A  	fcall	_spiWrite
   692  0165  292B               	goto	l1286
   693  0166  120A  118A  280C   	ljmp	start
   694  0169                     __end_of_main:
   695                           
   696                           	psect	text1
   697  01E2                     __ptext1:	
   698 ;; *************** function _spiWrite *****************
   699 ;; Defined at:
   700 ;;		line 34 in file "SPI.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  dat             1    wreg     unsigned char 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  dat             1    4[COMMON] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0
   717 ;;      Totals:         1       0       0       0       0
   718 ;;Total ram usage:        1 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    3
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _spiWrite
   730  01E2                     _spiWrite:
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _spiWrite: [wreg]
   734                           ;spiWrite@dat stored from wreg
   735  01E2  00F4               	movwf	spiWrite@dat
   736  01E3                     l856:
   737                           
   738                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   739  01E3  0874               	movf	spiWrite@dat,w
   740  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   741  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   742  01E6  0093               	movwf	19	;volatile
   743  01E7                     l152:
   744  01E7  0008               	return
   745  01E8                     __end_of_spiWrite:
   746                           
   747                           	psect	text2
   748  0193                     __ptext2:	
   749 ;; *************** function _setup *****************
   750 ;; Defined at:
   751 ;;		line 88 in file "Slave3.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    4
   772 ;; This function calls:
   773 ;;		_spiInit
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _setup
   781  0193                     _setup:
   782  0193                     l1182:	
   783                           ;incstack = 0
   784                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   785                           
   786  0193  1683               	bsf	3,5	;RP0=1, select bank3
   787  0194  1703               	bsf	3,6	;RP1=1, select bank3
   788  0195  0188               	clrf	8	;volatile
   789  0196  0189               	clrf	9	;volatile
   790  0197                     l1184:
   791  0197  1508               	bsf	8,2	;volatile
   792  0198  1683               	bsf	3,5	;RP0=1, select bank1
   793  0199  1303               	bcf	3,6	;RP1=0, select bank1
   794  019A  0188               	clrf	8	;volatile
   795  019B  0187               	clrf	7	;volatile
   796  019C  0185               	clrf	5	;volatile
   797  019D  0186               	clrf	6	;volatile
   798  019E                     l1186:
   799  019E  1505               	bsf	5,2	;volatile
   800  019F                     l1188:
   801  019F  1685               	bsf	5,5	;volatile
   802  01A0                     l1190:
   803  01A0  1607               	bsf	7,4	;volatile
   804  01A1                     l1192:
   805  01A1  1587               	bsf	7,3	;volatile
   806  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   807  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   808  01A4  0188               	clrf	8	;volatile
   809  01A5  0187               	clrf	7	;volatile
   810  01A6  0186               	clrf	6	;volatile
   811  01A7                     l1194:
   812  01A7  178B               	bsf	11,7	;volatile
   813  01A8                     l1196:
   814  01A8  170B               	bsf	11,6	;volatile
   815  01A9  01F8               	clrf	_ADC_finish
   816  01AA                     l1198:
   817  01AA  01F4               	clrf	spiInit@sDataSample
   818  01AB  01F5               	clrf	spiInit@sClockIdle
   819  01AC  01F6               	clrf	spiInit@sTransmitEdge
   820  01AD  3024               	movlw	36
   821  01AE  120A  118A  21B4  120A  118A  	fcall	_spiInit
   822  01B3                     l72:
   823  01B3  0008               	return
   824  01B4                     __end_of_setup:
   825                           
   826                           	psect	text3
   827  01B4                     __ptext3:	
   828 ;; *************** function _spiInit *****************
   829 ;; Defined at:
   830 ;;		line 12 in file "SPI.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  sType           1    wreg     enum E1264
   833 ;;  sDataSample     1    4[COMMON] enum E1272
   834 ;;  sClockIdle      1    5[COMMON] enum E1276
   835 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  sType           1    0[BANK0 ] enum E1264
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   847 ;;      Params:         3       0       0       0       0
   848 ;;      Locals:         0       1       0       0       0
   849 ;;      Temps:          0       0       0       0       0
   850 ;;      Totals:         3       1       0       0       0
   851 ;;Total ram usage:        4 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    3
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_setup
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _spiInit
   863  01B4                     _spiInit:
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   867                           ;spiInit@sType stored from wreg
   868  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   869  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   870  01B6  00A0               	movwf	spiInit@sType
   871  01B7                     l1172:
   872                           
   873                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   874  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   875  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   876  01B9  1287               	bcf	7,5	;volatile
   877                           
   878                           ;SPI.c: 15:     if(sType & 0b00000100)
   879  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   880  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   881  01BC  1D20               	btfss	spiInit@sType,2
   882  01BD  29BF               	goto	u181
   883  01BE  29C0               	goto	u180
   884  01BF                     u181:
   885  01BF  29C6               	goto	l1178
   886  01C0                     u180:
   887  01C0                     l1174:
   888                           
   889                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   890  01C0  0876               	movf	spiInit@sTransmitEdge,w
   891  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   892  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   893  01C3  0094               	movwf	20	;volatile
   894  01C4                     l1176:
   895                           
   896                           ;SPI.c: 18:         TRISC3 = 1;
   897  01C4  1587               	bsf	7,3	;volatile
   898                           
   899                           ;SPI.c: 19:     }
   900  01C5  29CC               	goto	l142
   901  01C6                     l1178:
   902                           
   903                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   904  01C6  0874               	movf	spiInit@sDataSample,w
   905  01C7  0476               	iorwf	spiInit@sTransmitEdge,w
   906  01C8  1683               	bsf	3,5	;RP0=1, select bank1
   907  01C9  1303               	bcf	3,6	;RP1=0, select bank1
   908  01CA  0094               	movwf	20	;volatile
   909  01CB                     l1180:
   910                           
   911                           ;SPI.c: 23:         TRISC3 = 0;
   912  01CB  1187               	bcf	7,3	;volatile
   913  01CC                     l142:	
   914                           ;SPI.c: 24:     }
   915                           
   916                           
   917                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   918  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   919  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   920  01CE  0820               	movf	spiInit@sType,w
   921  01CF  0475               	iorwf	spiInit@sClockIdle,w
   922  01D0  0094               	movwf	20	;volatile
   923  01D1                     l143:
   924  01D1  0008               	return
   925  01D2                     __end_of_spiInit:
   926                           
   927                           	psect	text4
   928  0016                     __ptext4:	
   929 ;; *************** function _ADC_setup *****************
   930 ;; Defined at:
   931 ;;		line 3 in file "ADC.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  ConClock        1    wreg     unsigned char 
   934 ;;  Channel         1    4[COMMON] unsigned char 
   935 ;;  Format          1    5[COMMON] unsigned char 
   936 ;;  Vref            1    6[COMMON] unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  ConClock        1    2[BANK0 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         3       0       0       0       0
   949 ;;      Locals:         0       1       0       0       0
   950 ;;      Temps:          0       2       0       0       0
   951 ;;      Totals:         3       3       0       0       0
   952 ;;Total ram usage:        6 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    3
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _ADC_setup
   964  0016                     _ADC_setup:
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
   968                           ;ADC_setup@ConClock stored from wreg
   969  0016  1283               	bcf	3,5	;RP0=0, select bank0
   970  0017  1303               	bcf	3,6	;RP1=0, select bank0
   971  0018  00A2               	movwf	ADC_setup@ConClock
   972  0019                     l1200:
   973                           
   974                           ;ADC.c: 4:     switch (ConClock) {
   975  0019  282F               	goto	l1214
   976  001A                     l1202:
   977                           
   978                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
   979  001A  303F               	movlw	-193
   980  001B  059F               	andwf	31,f	;volatile
   981                           
   982                           ;ADC.c: 7:             break;
   983  001C  2894               	goto	l1252
   984  001D                     l1204:
   985                           
   986                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
   987  001D  081F               	movf	31,w	;volatile
   988  001E  393F               	andlw	-193
   989  001F  3840               	iorlw	64
   990  0020  009F               	movwf	31	;volatile
   991                           
   992                           ;ADC.c: 10:             break;
   993  0021  2894               	goto	l1252
   994  0022                     l1206:
   995                           
   996                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
   997  0022  081F               	movf	31,w	;volatile
   998  0023  393F               	andlw	-193
   999  0024  3880               	iorlw	128
  1000  0025  009F               	movwf	31	;volatile
  1001                           
  1002                           ;ADC.c: 13:             break;
  1003  0026  2894               	goto	l1252
  1004  0027                     l1208:
  1005                           
  1006                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
  1007  0027  30C0               	movlw	192
  1008  0028  049F               	iorwf	31,f	;volatile
  1009                           
  1010                           ;ADC.c: 16:             break;
  1011  0029  2894               	goto	l1252
  1012  002A                     l1210:
  1013                           
  1014                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
  1015  002A  081F               	movf	31,w	;volatile
  1016  002B  393F               	andlw	-193
  1017  002C  3880               	iorlw	128
  1018  002D  009F               	movwf	31	;volatile
  1019                           
  1020                           ;ADC.c: 19:             break;
  1021  002E  2894               	goto	l1252
  1022  002F                     l1214:
  1023  002F  0822               	movf	ADC_setup@ConClock,w
  1024  0030  00A0               	movwf	??_ADC_setup
  1025  0031  01A1               	clrf	??_ADC_setup+1
  1026                           
  1027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1028                           ; Switch size 1, requested type "simple"
  1029                           ; Number of cases is 1, Range of values is 0 to 0
  1030                           ; switch strategies available:
  1031                           ; Name         Instructions Cycles
  1032                           ; simple_byte            4     3 (average)
  1033                           ; direct_byte           11     8 (fixed)
  1034                           ; jumptable            260     6 (fixed)
  1035                           ;	Chosen strategy is simple_byte
  1036  0032  0821               	movf	??_ADC_setup+1,w
  1037  0033  3A00               	xorlw	0	; case 0
  1038  0034  1903               	skipnz
  1039  0035  2837               	goto	l1396
  1040  0036  282A               	goto	l1210
  1041  0037                     l1396:
  1042                           
  1043                           ; Switch size 1, requested type "simple"
  1044                           ; Number of cases is 4, Range of values is 1 to 4
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte           13     7 (average)
  1048                           ; direct_byte           23    11 (fixed)
  1049                           ; jumptable            263     9 (fixed)
  1050                           ;	Chosen strategy is simple_byte
  1051  0037  0820               	movf	??_ADC_setup,w
  1052  0038  3A01               	xorlw	1	; case 1
  1053  0039  1903               	skipnz
  1054  003A  281A               	goto	l1202
  1055  003B  3A03               	xorlw	3	; case 2
  1056  003C  1903               	skipnz
  1057  003D  281D               	goto	l1204
  1058  003E  3A01               	xorlw	1	; case 3
  1059  003F  1903               	skipnz
  1060  0040  2822               	goto	l1206
  1061  0041  3A07               	xorlw	7	; case 4
  1062  0042  1903               	skipnz
  1063  0043  2827               	goto	l1208
  1064  0044  282A               	goto	l1210
  1065  0045                     l1216:
  1066                           
  1067                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
  1068  0045  30C3               	movlw	-61
  1069  0046  059F               	andwf	31,f	;volatile
  1070                           
  1071                           ;ADC.c: 24:             break;
  1072  0047  28CE               	goto	l1254
  1073  0048                     l1218:
  1074                           
  1075                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
  1076  0048  081F               	movf	31,w	;volatile
  1077  0049  39C3               	andlw	-61
  1078  004A  3804               	iorlw	4
  1079  004B  009F               	movwf	31	;volatile
  1080                           
  1081                           ;ADC.c: 27:             break;
  1082  004C  28CE               	goto	l1254
  1083  004D                     l1220:
  1084                           
  1085                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
  1086  004D  081F               	movf	31,w	;volatile
  1087  004E  39C3               	andlw	-61
  1088  004F  3808               	iorlw	8
  1089  0050  009F               	movwf	31	;volatile
  1090                           
  1091                           ;ADC.c: 30:             break;
  1092  0051  28CE               	goto	l1254
  1093  0052                     l1222:
  1094                           
  1095                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
  1096  0052  081F               	movf	31,w	;volatile
  1097  0053  39C3               	andlw	-61
  1098  0054  380C               	iorlw	12
  1099  0055  009F               	movwf	31	;volatile
  1100                           
  1101                           ;ADC.c: 33:             break;
  1102  0056  28CE               	goto	l1254
  1103  0057                     l1224:
  1104                           
  1105                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
  1106  0057  081F               	movf	31,w	;volatile
  1107  0058  39C3               	andlw	-61
  1108  0059  3810               	iorlw	16
  1109  005A  009F               	movwf	31	;volatile
  1110                           
  1111                           ;ADC.c: 36:             break;
  1112  005B  28CE               	goto	l1254
  1113  005C                     l1226:
  1114                           
  1115                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
  1116  005C  081F               	movf	31,w	;volatile
  1117  005D  39C3               	andlw	-61
  1118  005E  3814               	iorlw	20
  1119  005F  009F               	movwf	31	;volatile
  1120                           
  1121                           ;ADC.c: 39:             break;
  1122  0060  28CE               	goto	l1254
  1123  0061                     l1228:
  1124                           
  1125                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
  1126  0061  081F               	movf	31,w	;volatile
  1127  0062  39C3               	andlw	-61
  1128  0063  3818               	iorlw	24
  1129  0064  009F               	movwf	31	;volatile
  1130                           
  1131                           ;ADC.c: 42:             break;
  1132  0065  28CE               	goto	l1254
  1133  0066                     l1230:
  1134                           
  1135                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
  1136  0066  081F               	movf	31,w	;volatile
  1137  0067  39C3               	andlw	-61
  1138  0068  381C               	iorlw	28
  1139  0069  009F               	movwf	31	;volatile
  1140                           
  1141                           ;ADC.c: 45:             break;
  1142  006A  28CE               	goto	l1254
  1143  006B                     l1232:
  1144                           
  1145                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
  1146  006B  081F               	movf	31,w	;volatile
  1147  006C  39C3               	andlw	-61
  1148  006D  3820               	iorlw	32
  1149  006E  009F               	movwf	31	;volatile
  1150                           
  1151                           ;ADC.c: 48:             break;
  1152  006F  28CE               	goto	l1254
  1153  0070                     l1234:
  1154                           
  1155                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
  1156  0070  081F               	movf	31,w	;volatile
  1157  0071  39C3               	andlw	-61
  1158  0072  3824               	iorlw	36
  1159  0073  009F               	movwf	31	;volatile
  1160                           
  1161                           ;ADC.c: 51:             break;
  1162  0074  28CE               	goto	l1254
  1163  0075                     l1236:
  1164                           
  1165                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
  1166  0075  081F               	movf	31,w	;volatile
  1167  0076  39C3               	andlw	-61
  1168  0077  3828               	iorlw	40
  1169  0078  009F               	movwf	31	;volatile
  1170                           
  1171                           ;ADC.c: 54:             break;
  1172  0079  28CE               	goto	l1254
  1173  007A                     l1238:
  1174                           
  1175                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
  1176  007A  081F               	movf	31,w	;volatile
  1177  007B  39C3               	andlw	-61
  1178  007C  382C               	iorlw	44
  1179  007D  009F               	movwf	31	;volatile
  1180                           
  1181                           ;ADC.c: 57:             break;
  1182  007E  28CE               	goto	l1254
  1183  007F                     l1240:
  1184                           
  1185                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
  1186  007F  081F               	movf	31,w	;volatile
  1187  0080  39C3               	andlw	-61
  1188  0081  3830               	iorlw	48
  1189  0082  009F               	movwf	31	;volatile
  1190                           
  1191                           ;ADC.c: 60:             break;
  1192  0083  28CE               	goto	l1254
  1193  0084                     l1242:
  1194                           
  1195                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
  1196  0084  081F               	movf	31,w	;volatile
  1197  0085  39C3               	andlw	-61
  1198  0086  3834               	iorlw	52
  1199  0087  009F               	movwf	31	;volatile
  1200                           
  1201                           ;ADC.c: 63:             break;
  1202  0088  28CE               	goto	l1254
  1203  0089                     l1244:
  1204                           
  1205                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
  1206  0089  081F               	movf	31,w	;volatile
  1207  008A  39C3               	andlw	-61
  1208  008B  3838               	iorlw	56
  1209  008C  009F               	movwf	31	;volatile
  1210                           
  1211                           ;ADC.c: 66:             break;
  1212  008D  28CE               	goto	l1254
  1213  008E                     l1246:
  1214                           
  1215                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
  1216  008E  303C               	movlw	60
  1217  008F  049F               	iorwf	31,f	;volatile
  1218                           
  1219                           ;ADC.c: 69:             break;
  1220  0090  28CE               	goto	l1254
  1221  0091                     l1248:
  1222                           
  1223                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
  1224  0091  30C3               	movlw	-61
  1225  0092  059F               	andwf	31,f	;volatile
  1226                           
  1227                           ;ADC.c: 72:             break;
  1228  0093  28CE               	goto	l1254
  1229  0094                     l1252:
  1230  0094  0874               	movf	ADC_setup@Channel,w
  1231  0095  00A0               	movwf	??_ADC_setup
  1232  0096  01A1               	clrf	??_ADC_setup+1
  1233                           
  1234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 1, Range of values is 0 to 0
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            4     3 (average)
  1240                           ; direct_byte           11     8 (fixed)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243  0097  0821               	movf	??_ADC_setup+1,w
  1244  0098  3A00               	xorlw	0	; case 0
  1245  0099  1903               	skipnz
  1246  009A  289C               	goto	l1398
  1247  009B  2891               	goto	l1248
  1248  009C                     l1398:
  1249                           
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 16, Range of values is 0 to 15
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte           49    25 (average)
  1255                           ; direct_byte           56     8 (fixed)
  1256                           ; jumptable            260     6 (fixed)
  1257                           ;	Chosen strategy is simple_byte
  1258  009C  0820               	movf	??_ADC_setup,w
  1259  009D  3A00               	xorlw	0	; case 0
  1260  009E  1903               	skipnz
  1261  009F  2845               	goto	l1216
  1262  00A0  3A01               	xorlw	1	; case 1
  1263  00A1  1903               	skipnz
  1264  00A2  2848               	goto	l1218
  1265  00A3  3A03               	xorlw	3	; case 2
  1266  00A4  1903               	skipnz
  1267  00A5  284D               	goto	l1220
  1268  00A6  3A01               	xorlw	1	; case 3
  1269  00A7  1903               	skipnz
  1270  00A8  2852               	goto	l1222
  1271  00A9  3A07               	xorlw	7	; case 4
  1272  00AA  1903               	skipnz
  1273  00AB  2857               	goto	l1224
  1274  00AC  3A01               	xorlw	1	; case 5
  1275  00AD  1903               	skipnz
  1276  00AE  285C               	goto	l1226
  1277  00AF  3A03               	xorlw	3	; case 6
  1278  00B0  1903               	skipnz
  1279  00B1  2861               	goto	l1228
  1280  00B2  3A01               	xorlw	1	; case 7
  1281  00B3  1903               	skipnz
  1282  00B4  2866               	goto	l1230
  1283  00B5  3A0F               	xorlw	15	; case 8
  1284  00B6  1903               	skipnz
  1285  00B7  286B               	goto	l1232
  1286  00B8  3A01               	xorlw	1	; case 9
  1287  00B9  1903               	skipnz
  1288  00BA  2870               	goto	l1234
  1289  00BB  3A03               	xorlw	3	; case 10
  1290  00BC  1903               	skipnz
  1291  00BD  2875               	goto	l1236
  1292  00BE  3A01               	xorlw	1	; case 11
  1293  00BF  1903               	skipnz
  1294  00C0  287A               	goto	l1238
  1295  00C1  3A07               	xorlw	7	; case 12
  1296  00C2  1903               	skipnz
  1297  00C3  287F               	goto	l1240
  1298  00C4  3A01               	xorlw	1	; case 13
  1299  00C5  1903               	skipnz
  1300  00C6  2884               	goto	l1242
  1301  00C7  3A03               	xorlw	3	; case 14
  1302  00C8  1903               	skipnz
  1303  00C9  2889               	goto	l1244
  1304  00CA  3A01               	xorlw	1	; case 15
  1305  00CB  1903               	skipnz
  1306  00CC  288E               	goto	l1246
  1307  00CD  2891               	goto	l1248
  1308  00CE                     l1254:
  1309                           
  1310                           ;ADC.c: 74:     if (Format == 1) {
  1311  00CE  0375               	decf	ADC_setup@Format,w
  1312  00CF  1D03               	btfss	3,2
  1313  00D0  28D2               	goto	u191
  1314  00D1  28D3               	goto	u190
  1315  00D2                     u191:
  1316  00D2  28D7               	goto	l117
  1317  00D3                     u190:
  1318  00D3                     l1256:
  1319                           
  1320                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
  1321  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1322  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1323  00D5  179F               	bsf	31,7	;volatile
  1324                           
  1325                           ;ADC.c: 76:     } else {
  1326  00D6  28F4               	goto	l1260
  1327  00D7                     l117:
  1328                           
  1329                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
  1330  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1331  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1332  00D9  139F               	bcf	31,7	;volatile
  1333  00DA  28F4               	goto	l1260
  1334  00DB                     l120:	
  1335                           ;ADC.c: 80:         case 1:
  1336                           
  1337                           
  1338                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
  1339  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1340  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1341  00DD  121F               	bcf	31,4	;volatile
  1342                           
  1343                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
  1344  00DE  129F               	bcf	31,5	;volatile
  1345                           
  1346                           ;ADC.c: 83:             break;
  1347  00DF  290C               	goto	l121
  1348  00E0                     l122:	
  1349                           ;ADC.c: 84:         case 2:
  1350                           
  1351                           
  1352                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
  1353  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1354  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1355  00E2  161F               	bsf	31,4	;volatile
  1356                           
  1357                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
  1358  00E3  169F               	bsf	31,5	;volatile
  1359                           
  1360                           ;ADC.c: 87:             break;
  1361  00E4  290C               	goto	l121
  1362  00E5                     l123:	
  1363                           ;ADC.c: 88:         case 3:
  1364                           
  1365                           
  1366                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
  1367  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1368  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1369  00E7  121F               	bcf	31,4	;volatile
  1370                           
  1371                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
  1372  00E8  169F               	bsf	31,5	;volatile
  1373                           
  1374                           ;ADC.c: 91:             break;
  1375  00E9  290C               	goto	l121
  1376  00EA                     l124:	
  1377                           ;ADC.c: 92:         case 4:
  1378                           
  1379                           
  1380                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  1381  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1382  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1383  00EC  161F               	bsf	31,4	;volatile
  1384                           
  1385                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  1386  00ED  129F               	bcf	31,5	;volatile
  1387                           
  1388                           ;ADC.c: 95:             break;
  1389  00EE  290C               	goto	l121
  1390  00EF                     l125:	
  1391                           ;ADC.c: 96:         default:
  1392                           
  1393                           
  1394                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1395  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1396  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1397  00F1  121F               	bcf	31,4	;volatile
  1398                           
  1399                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  1400  00F2  129F               	bcf	31,5	;volatile
  1401                           
  1402                           ;ADC.c: 99:             break;
  1403  00F3  290C               	goto	l121
  1404  00F4                     l1260:
  1405  00F4  0876               	movf	ADC_setup@Vref,w
  1406  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1407  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1408  00F7  00A0               	movwf	??_ADC_setup
  1409  00F8  01A1               	clrf	??_ADC_setup+1
  1410                           
  1411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 1, Range of values is 0 to 0
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte            4     3 (average)
  1417                           ; direct_byte           11     8 (fixed)
  1418                           ; jumptable            260     6 (fixed)
  1419                           ;	Chosen strategy is simple_byte
  1420  00F9  0821               	movf	??_ADC_setup+1,w
  1421  00FA  3A00               	xorlw	0	; case 0
  1422  00FB  1903               	skipnz
  1423  00FC  28FE               	goto	l1400
  1424  00FD  28EF               	goto	l125
  1425  00FE                     l1400:
  1426                           
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 4, Range of values is 1 to 4
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           13     7 (average)
  1432                           ; direct_byte           23    11 (fixed)
  1433                           ; jumptable            263     9 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  00FE  0820               	movf	??_ADC_setup,w
  1436  00FF  3A01               	xorlw	1	; case 1
  1437  0100  1903               	skipnz
  1438  0101  28DB               	goto	l120
  1439  0102  3A03               	xorlw	3	; case 2
  1440  0103  1903               	skipnz
  1441  0104  28E0               	goto	l122
  1442  0105  3A01               	xorlw	1	; case 3
  1443  0106  1903               	skipnz
  1444  0107  28E5               	goto	l123
  1445  0108  3A07               	xorlw	7	; case 4
  1446  0109  1903               	skipnz
  1447  010A  28EA               	goto	l124
  1448  010B  28EF               	goto	l125
  1449  010C                     l121:
  1450                           
  1451                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  1452  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1453  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1454  010E  141F               	bsf	31,0	;volatile
  1455                           
  1456                           ;ADC.c: 102:     INTCONbits.GIE=1;
  1457  010F  178B               	bsf	11,7	;volatile
  1458                           
  1459                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  1460  0110  170B               	bsf	11,6	;volatile
  1461                           
  1462                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  1463  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1464  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1465  0113  170C               	bsf	12,6	;volatile
  1466  0114                     l126:
  1467  0114  0008               	return
  1468  0115                     __end_of_ADC_setup:
  1469                           
  1470                           	psect	text5
  1471  0169                     __ptext5:	
  1472 ;; *************** function _oli *****************
  1473 ;; Defined at:
  1474 ;;		line 109 in file "Slave3.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          3       0       0       0       0
  1491 ;;      Totals:         3       0       0       0       0
  1492 ;;Total ram usage:        3 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    2
  1495 ;; This function calls:
  1496 ;;		_spiRead
  1497 ;;		i1_spiWrite
  1498 ;; This function is called by:
  1499 ;;		Interrupt level 1
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _oli
  1505  0169                     _oli:
  1506  0169                     i1l1100:
  1507  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1508  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1509  016B  1F0C               	btfss	12,6	;volatile
  1510  016C  296E               	goto	u16_21
  1511  016D  296F               	goto	u16_20
  1512  016E                     u16_21:
  1513  016E  2977               	goto	i1l77
  1514  016F                     u16_20:
  1515  016F                     i1l1102:
  1516  016F  130C               	bcf	12,6	;volatile
  1517  0170                     i1l1104:
  1518  0170  081E               	movf	30,w	;volatile
  1519  0171  00F1               	movwf	??_oli
  1520  0172  0871               	movf	??_oli,w
  1521  0173  00F9               	movwf	_ADC_value
  1522  0174                     i1l1106:
  1523  0174  01F8               	clrf	_ADC_finish
  1524  0175  0AF8               	incf	_ADC_finish,f
  1525  0176  298C               	goto	i1l80
  1526  0177                     i1l77:
  1527  0177  1D8C               	btfss	12,3	;volatile
  1528  0178  297A               	goto	u17_21
  1529  0179  297B               	goto	u17_20
  1530  017A                     u17_21:
  1531  017A  298C               	goto	i1l80
  1532  017B                     u17_20:
  1533  017B                     i1l1108:
  1534  017B  120A  118A  21D2  120A  118A  	fcall	_spiRead
  1535  0180  00F1               	movwf	??_oli
  1536  0181  0871               	movf	??_oli,w
  1537  0182  00F7               	movwf	_OK
  1538  0183  0879               	movf	_ADC_value,w
  1539  0184  120A  118A  21E8  120A  118A  	fcall	i1_spiWrite
  1540  0189                     i1l1110:
  1541  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1542  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1543  018B  118C               	bcf	12,3	;volatile
  1544  018C                     i1l80:
  1545  018C  0873               	movf	??_oli+2,w
  1546  018D  008A               	movwf	10
  1547  018E  0E72               	swapf	??_oli+1,w
  1548  018F  0083               	movwf	3
  1549  0190  0EFE               	swapf	btemp,f
  1550  0191  0E7E               	swapf	btemp,w
  1551  0192  0009               	retfie
  1552  0193                     __end_of_oli:
  1553                           
  1554                           	psect	intentry
  1555  0004                     __pintentry:	
  1556                           ;incstack = 0
  1557                           ; Regs used in _oli: [wreg+status,2+status,0+pclath+cstack]
  1558                           
  1559  0004                     interrupt_function:
  1560  007E                     saved_w	set	btemp
  1561  0004  00FE               	movwf	btemp
  1562  0005  0E03               	swapf	3,w
  1563  0006  00F2               	movwf	??_oli+1
  1564  0007  080A               	movf	10,w
  1565  0008  00F3               	movwf	??_oli+2
  1566  0009  120A  118A  2969   	ljmp	_oli
  1567                           
  1568                           	psect	text6
  1569  01E8                     __ptext6:	
  1570 ;; *************** function i1_spiWrite *****************
  1571 ;; Defined at:
  1572 ;;		line 34 in file "SPI.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  dat             1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  dat             1    0[COMMON] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_oli
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function i1_spiWrite
  1601  01E8                     i1_spiWrite:
  1602                           
  1603                           ;incstack = 0
  1604                           ; Regs used in i1_spiWrite: [wreg]
  1605                           ;i1spiWrite@dat stored from wreg
  1606  01E8  00F0               	movwf	i1spiWrite@dat
  1607  01E9                     i1l1072:
  1608                           
  1609                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1610  01E9  0870               	movf	i1spiWrite@dat,w
  1611  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1612  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1613  01EC  0093               	movwf	19	;volatile
  1614  01ED                     i1l152:
  1615  01ED  0008               	return
  1616  01EE                     __end_ofi1_spiWrite:
  1617                           
  1618                           	psect	text7
  1619  01D2                     __ptext7:	
  1620 ;; *************** function _spiRead *****************
  1621 ;; Defined at:
  1622 ;;		line 47 in file "SPI.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		_spiReceiveWait
  1645 ;; This function is called by:
  1646 ;;		_oli
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _spiRead
  1652  01D2                     _spiRead:
  1653  01D2                     i1l858:	
  1654                           ;incstack = 0
  1655                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1656                           
  1657                           
  1658                           ;SPI.c: 49:     spiReceiveWait();
  1659  01D2  120A  118A  21DB  120A  118A  	fcall	_spiReceiveWait
  1660  01D7                     i1l860:
  1661                           
  1662                           ;SPI.c: 50:     return(SSPBUF);
  1663  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1664  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1665  01D9  0813               	movf	19,w	;volatile
  1666  01DA                     i1l160:
  1667  01DA  0008               	return
  1668  01DB                     __end_of_spiRead:
  1669                           
  1670                           	psect	text8
  1671  01DB                     __ptext8:	
  1672 ;; *************** function _spiReceiveWait *****************
  1673 ;; Defined at:
  1674 ;;		line 29 in file "SPI.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		None
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0
  1691 ;;      Totals:         0       0       0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_spiRead
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _spiReceiveWait
  1703  01DB                     _spiReceiveWait:
  1704  01DB                     i1l762:	
  1705                           ;incstack = 0
  1706                           ; Regs used in _spiReceiveWait: []
  1707                           
  1708  01DB                     i1l146:	
  1709                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1710                           
  1711  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1712  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1713  01DD  1C14               	btfss	20,0	;volatile
  1714  01DE  29E0               	goto	u2_21
  1715  01DF  29E1               	goto	u2_20
  1716  01E0                     u2_21:
  1717  01E0  29DB               	goto	i1l146
  1718  01E1                     u2_20:
  1719  01E1                     i1l149:
  1720  01E1  0008               	return
  1721  01E2                     __end_of_spiReceiveWait:
  1722  007E                     btemp	set	126	;btemp
  1723  007E                     wtemp0	set	126
  1724                           
  1725                           	psect	config
  1726                           
  1727                           ;Config register CONFIG1 @ 0x2007
  1728                           ;	Oscillator Selection bits
  1729                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1730                           ;	Watchdog Timer Enable bit
  1731                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1732                           ;	Power-up Timer Enable bit
  1733                           ;	PWRTE = OFF, PWRT disabled
  1734                           ;	RE3/MCLR pin function select bit
  1735                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1736                           ;	Code Protection bit
  1737                           ;	CP = OFF, Program memory code protection is disabled
  1738                           ;	Data Code Protection bit
  1739                           ;	CPD = OFF, Data memory code protection is disabled
  1740                           ;	Brown Out Reset Selection bits
  1741                           ;	BOREN = OFF, BOR disabled
  1742                           ;	Internal External Switchover bit
  1743                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1744                           ;	Fail-Safe Clock Monitor Enabled bit
  1745                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1746                           ;	Low Voltage Programming Enable bit
  1747                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1748                           ;	In-Circuit Debugger Mode bit
  1749                           ;	DEBUG = 0x1, unprogrammed default
  1750  2007                     	org	8199
  1751  2007  20F1               	dw	8433
  1752                           
  1753                           ;Config register CONFIG2 @ 0x2008
  1754                           ;	Brown-out Reset Selection bit
  1755                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1756                           ;	Flash Program Memory Self Write Enable bits
  1757                           ;	WRT = OFF, Write protection off
  1758  2008                     	org	8200
  1759  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_setup
    _setup->_spiInit

Critical Paths under _oli in COMMON

    _oli->i1_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC_setup
    _setup->_spiInit

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     865
                                              3 BANK0      1     1      0
                          _ADC_setup
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     394
                                              4 COMMON     3     0      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _oli                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                         i1_spiWrite
 ---------------------------------------------------------------------------------
 (4) i1_spiWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _setup
     _spiInit
   _spiWrite

 _oli (ROOT)
   _spiRead
     _spiReceiveWait
   i1_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:49:13 2021

            _SSPSTATbits 0094                       l72 01B3                       l65 015A  
                     _OK 0077                      l120 00DB                      l121 010C  
                    l122 00E0                      l123 00E5                      l124 00EA  
                    l125 00EF                      l117 00D7                      l126 0114  
                    l142 01CC                      l143 01D1                      l152 01E7  
     __size_of_ADC_setup 00FF                      l856 01E3                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u200 0130  
                    u201 012F                      u210 0142                      u211 0141  
                    u220 014E                      u221 014D                      u230 0154  
                    u231 0153                      u180 01C0                      u181 01BF  
                    u190 00D3                      u191 00D2                      u247 0135  
                    _oli 0169                     l1200 0019                     l1210 002A  
                   l1202 001A                     l1220 004D                     l1204 001D  
                   l1300 014E                     l1230 0066                     l1222 0052  
                   l1206 0022                     l1214 002F                     l1302 0154  
                   l1400 00FE                     l1240 007F                     l1232 006B  
                   l1224 0057                     l1216 0045                     l1208 0027  
                   l1304 015F                     l1242 0084                     l1234 0070  
                   l1226 005C                     l1218 0048                     l1260 00F4  
                   l1244 0089                     l1236 0075                     l1228 0061  
                   l1252 0094                     l1180 01CB                     l1172 01B7  
                   l1246 008E                     l1238 007A                     l1254 00CE  
                   l1174 01C0                     l1190 01A0                     l1182 0193  
                   l1256 00D3                     l1248 0091                     l1176 01C4  
                   l1192 01A1                     l1184 0197                     l1280 0115  
                   l1178 01C6                     l1194 01A7                     l1186 019E  
                   l1290 0131                     l1282 011A                     l1196 01A8  
                   l1188 019F                     l1292 0139                     l1284 0128  
                   l1198 01AA                     l1294 013C                     l1286 012B  
                   l1296 0142                     l1288 0130                     l1298 0148  
                   l1396 0037                     l1398 009C                     ?_oli 0070  
          i1spiWrite@dat 0070                     i1l80 018C                     i1l77 0177  
                   u2_20 01E1                     u2_21 01E0                     _main 0115  
                   btemp 007E                     start 000C               i1_spiWrite 01E8  
                  ??_oli 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l160 01DA                    i1l152 01ED                    i1l146 01DB  
                  i1l149 01E1                    i1l762 01DB                    i1l860 01D7  
                  i1l858 01D2                    u16_20 016F                    u16_21 016E  
                  u17_20 017B                    u17_21 017A                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 0193                    pclath 000A          __end_of_spiInit 01D2  
        __end_of_spiRead 01DB                    status 0003                    wtemp0 007E  
      __end_of_ADC_setup 0115          __initialization 000F             __end_of_main 0169  
                 ??_main 0023            ADC_setup@Vref 0076                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1100 0169  
                 i1l1110 0189                   i1l1102 016F                   i1l1104 0170  
                 i1l1106 0174                   i1l1108 017B                   i1l1072 01E9  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013              ?i1_spiWrite 0070         ADC_setup@Channel 0074  
                 saved_w 007E         __end_of_spiWrite 01E8                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 01B4      __size_ofi1_spiWrite 0006                  ??_setup 0077  
             __pmaintext 0115               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                _ADC_value 0079                _ADC_setup 0016  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 01E2  
                __ptext2 0193                  __ptext3 01B4                  __ptext4 0016  
                __ptext5 0169                  __ptext6 01E8                  __ptext7 01D2  
                __ptext8 01DB             __size_of_oli 002A        ADC_setup@ConClock 0022  
                _spiInit 01B4                  _spiRead 01D2     end_of_initialization 0012  
           ??i1_spiWrite 0070               ?_ADC_setup 0074               ??_spiWrite 0074  
              _TRISAbits 0085                _TRISCbits 0087       __end_ofi1_spiWrite 01EE  
            spiWrite@dat 0074           _spiReceiveWait 01DB      start_initialization 000F  
            __end_of_oli 0193   __end_of_spiReceiveWait 01E2              ??_ADC_setup 0020  
        ADC_setup@Format 0075              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 0021  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F               _ADC_finish 0078         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 0054                 _spiWrite 01E2  
           spiInit@sType 0020        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070  
