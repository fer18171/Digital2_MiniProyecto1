

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 15:03:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  001A                     _RCREG	set	26
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  000C                     _PIR1bits	set	12
   466  000B                     _INTCONbits	set	11
   467  0006                     _PORTB	set	6
   468  0005                     _PORTAbits	set	5
   469  002D                     _RA5	set	45
   470  002C                     _RA4	set	44
   471  0094                     _SSPSTATbits	set	148
   472  0094                     _SSPSTAT	set	148
   473  009A                     _SPBRGH	set	154
   474  0099                     _SPBRG	set	153
   475  008C                     _PIE1bits	set	140
   476  0098                     _TXSTAbits	set	152
   477  0086                     _TRISB	set	134
   478  0085                     _TRISA	set	133
   479  0088                     _TRISD	set	136
   480  0087                     _TRISCbits	set	135
   481  0087                     _TRISC	set	135
   482  043B                     _TRISC3	set	1083
   483  043D                     _TRISC5	set	1085
   484  0187                     _BAUDCTLbits	set	391
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487                           
   488                           	psect	strings
   489  0800                     __pstrings:
   490  0800                     stringtab:
   491  0800                     __stringtab:
   492  0800                     stringcode:	
   493                           ;	String table - string pointers are 1 byte each
   494                           
   495  0800                     stringdir:
   496  0800  3008               	movlw	high stringdir
   497  0801  008A               	movwf	10
   498  0802  0804               	movf	4,w
   499  0803  0A84               	incf	4,f
   500  0804  0782               	addwf	2,f
   501  0805                     __stringbase:
   502  0805  3400               	retlw	0
   503  0806                     __end_of__stringtab:
   504  0806                     STR_1:
   505  0806  3420               	retlw	32	;' '
   506  0807  3453               	retlw	83	;'S'
   507  0808  3431               	retlw	49	;'1'
   508  0809  343A               	retlw	58	;':'
   509  080A  3420               	retlw	32	;' '
   510  080B  3420               	retlw	32	;' '
   511  080C  3420               	retlw	32	;' '
   512  080D  3453               	retlw	83	;'S'
   513  080E  3432               	retlw	50	;'2'
   514  080F  343A               	retlw	58	;':'
   515  0810  3420               	retlw	32	;' '
   516  0811  3420               	retlw	32	;' '
   517  0812  3420               	retlw	32	;' '
   518  0813  3453               	retlw	83	;'S'
   519  0814  3433               	retlw	51	;'3'
   520  0815  343A               	retlw	58	;':'
   521  0816  3400               	retlw	0
   522  0817                     STR_3:
   523  0817  3420               	retlw	32	;' '
   524  0818  3400               	retlw	0
   525  0819                     STR_2:
   526  0819  342D               	retlw	45	;'-'
   527  081A  3400               	retlw	0
   528  081B                     STR_4:
   529  081B  342E               	retlw	46	;'.'
   530  081C  3400               	retlw	0
   531  081D                     STR_5:
   532  081D  3456               	retlw	86	;'V'
   533  081E  3400               	retlw	0
   534                           
   535                           	psect	cinit
   536  000F                     start_initialization:	
   537                           ; #config settings
   538                           
   539  000F                     __initialization:
   540                           
   541                           ; Clear objects allocated to COMMON
   542  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   543  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   544  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   545                           
   546                           ; Clear objects allocated to BANK0
   547  0012  1283               	bcf	3,5	;RP0=0, select bank0
   548  0013  1303               	bcf	3,6	;RP1=0, select bank0
   549  0014  01E0               	clrf	__pbssBANK0& (0+127)
   550  0015  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   551  0016                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  0016                     __end_of__initialization:
   555  0016  0183               	clrf	3
   556  0017  120A  118A  2D8E   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssCOMMON
   559  0078                     __pbssCOMMON:
   560  0078                     _Sensor3:
   561  0078                     	ds	1
   562  0079                     _Sensor2:
   563  0079                     	ds	1
   564  007A                     _Sensor1:
   565  007A                     	ds	1
   566                           
   567                           	psect	bssBANK0
   568  0060                     __pbssBANK0:
   569  0060                     _comando:
   570  0060                     	ds	1
   571  0061                     _a:
   572  0061                     	ds	1
   573                           
   574                           	psect	cstackCOMMON
   575  0070                     __pcstackCOMMON:
   576  0070                     ?_setup:
   577  0070                     ?_Lcd_Init:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Lcd_Clear:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_spiWrite:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_spiRead:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_Lcd_Write_String:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_Receive:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_Receive:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Write_Char:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_main:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_oli:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ??_oli:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Lcd_Port:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_Lcd_Cmd:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_spiReceiveWait:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0070                     	ds	3
   622  0073                     ??_spiWrite:
   623  0073                     ??_spiRead:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ?_spiInit:	
   627                           ; 1 bytes @ 0x3
   628                           
   629  0073                     ??_Lcd_Port:	
   630                           ; 1 bytes @ 0x3
   631                           
   632  0073                     ??_spiReceiveWait:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  0073                     ?__Umul8_16:	
   636                           ; 1 bytes @ 0x3
   637                           
   638  0073                     ?___wmul:	
   639                           ; 2 bytes @ 0x3
   640                           
   641  0073                     ?___lwdiv:	
   642                           ; 2 bytes @ 0x3
   643                           
   644  0073                     ?___xxtofl:	
   645                           ; 2 bytes @ 0x3
   646                           
   647  0073                     Lcd_Port@a:	
   648                           ; 4 bytes @ 0x3
   649                           
   650  0073                     spiInit@sDataSample:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     spiWrite@dat:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     __Umul8_16@multiplicand:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ___wmul@multiplier:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     ___lwdiv@divisor:	
   663                           ; 2 bytes @ 0x3
   664                           
   665  0073                     ___xxtofl@val:	
   666                           ; 2 bytes @ 0x3
   667                           
   668                           
   669                           ; 4 bytes @ 0x3
   670  0073                     	ds	1
   671  0074                     ??_Lcd_Write_Char:
   672  0074                     ??_Lcd_Cmd:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     spiInit@sClockIdle:	
   676                           ; 1 bytes @ 0x4
   677                           
   678                           
   679                           ; 1 bytes @ 0x4
   680  0074                     	ds	1
   681  0075                     ??__Umul8_16:
   682  0075                     Lcd_Write_Char@a:	
   683                           ; 1 bytes @ 0x5
   684                           
   685  0075                     spiInit@sTransmitEdge:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ___wmul@multiplicand:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ___lwdiv@dividend:	
   692                           ; 2 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	1
   697  0076                     ??_Lcd_Write_String:
   698  0076                     ??_spiInit:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     Lcd_Cmd@a:	
   702                           ; 1 bytes @ 0x6
   703                           
   704  0076                     spiInit@sType:	
   705                           ; 1 bytes @ 0x6
   706                           
   707                           
   708                           ; 1 bytes @ 0x6
   709  0076                     	ds	1
   710  0077                     ??_setup:
   711  0077                     ??_Lcd_Clear:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ?_Lcd_Set_Cursor:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     ??___wmul:	
   718                           ; 1 bytes @ 0x7
   719                           
   720  0077                     ??___lwdiv:	
   721                           ; 1 bytes @ 0x7
   722                           
   723  0077                     Lcd_Set_Cursor@b:	
   724                           ; 1 bytes @ 0x7
   725                           
   726                           
   727                           ; 1 bytes @ 0x7
   728  0077                     	ds	1
   729  0078                     ??_Lcd_Set_Cursor:
   730                           
   731                           	psect	cstackBANK0
   732  0020                     __pcstackBANK0:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0020                     ??_Lcd_Init:
   736  0020                     ??___xxtofl:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     Lcd_Set_Cursor@a:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ___lwdiv@counter:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0020                     Lcd_Write_String@i:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ___wmul@product:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0020                     __Umul8_16@product:	
   752                           ; 2 bytes @ 0x0
   753                           
   754                           
   755                           ; 2 bytes @ 0x0
   756  0020                     	ds	1
   757  0021                     ___lwdiv@quotient:
   758                           
   759                           ; 2 bytes @ 0x1
   760  0021                     	ds	1
   761  0022                     Lcd_Write_String@a:
   762  0022                     __Umul8_16@word_mpld:	
   763                           ; 1 bytes @ 0x2
   764                           
   765                           
   766                           ; 2 bytes @ 0x2
   767  0022                     	ds	2
   768  0024                     __Umul8_16@multiplier:
   769  0024                     ___xxtofl@sign:	
   770                           ; 1 bytes @ 0x4
   771                           
   772                           
   773                           ; 1 bytes @ 0x4
   774  0024                     	ds	1
   775  0025                     ___xxtofl@exp:
   776                           
   777                           ; 1 bytes @ 0x5
   778  0025                     	ds	1
   779  0026                     ___xxtofl@arg:
   780                           
   781                           ; 4 bytes @ 0x6
   782  0026                     	ds	4
   783  002A                     ?___flmul:
   784  002A                     ___flmul@b:	
   785                           ; 4 bytes @ 0xA
   786                           
   787                           
   788                           ; 4 bytes @ 0xA
   789  002A                     	ds	4
   790  002E                     ___flmul@a:
   791                           
   792                           ; 4 bytes @ 0xE
   793  002E                     	ds	4
   794  0032                     ??___flmul:
   795                           
   796                           ; 1 bytes @ 0x12
   797  0032                     	ds	5
   798  0037                     ___flmul@sign:
   799                           
   800                           ; 1 bytes @ 0x17
   801  0037                     	ds	1
   802  0038                     ___flmul@grs:
   803                           
   804                           ; 4 bytes @ 0x18
   805  0038                     	ds	4
   806  003C                     ___flmul@aexp:
   807                           
   808                           ; 1 bytes @ 0x1C
   809  003C                     	ds	1
   810  003D                     ___flmul@bexp:
   811                           
   812                           ; 1 bytes @ 0x1D
   813  003D                     	ds	1
   814  003E                     ___flmul@prod:
   815                           
   816                           ; 4 bytes @ 0x1E
   817  003E                     	ds	4
   818  0042                     ___flmul@temp:
   819                           
   820                           ; 2 bytes @ 0x22
   821  0042                     	ds	2
   822  0044                     ?___fltol:
   823  0044                     ___fltol@f1:	
   824                           ; 4 bytes @ 0x24
   825                           
   826                           
   827                           ; 4 bytes @ 0x24
   828  0044                     	ds	4
   829  0048                     ??___fltol:
   830                           
   831                           ; 1 bytes @ 0x28
   832  0048                     	ds	5
   833  004D                     ___fltol@sign1:
   834                           
   835                           ; 1 bytes @ 0x2D
   836  004D                     	ds	1
   837  004E                     ___fltol@exp1:
   838                           
   839                           ; 1 bytes @ 0x2E
   840  004E                     	ds	1
   841  004F                     ?_WriteNumber:
   842  004F                     WriteNumber@columna:	
   843                           ; 1 bytes @ 0x2F
   844                           
   845                           
   846                           ; 1 bytes @ 0x2F
   847  004F                     	ds	1
   848  0050                     WriteNumber@valor:
   849                           
   850                           ; 1 bytes @ 0x30
   851  0050                     	ds	1
   852  0051                     WriteNumber@formato:
   853                           
   854                           ; 1 bytes @ 0x31
   855  0051                     	ds	1
   856  0052                     ??_WriteNumber:
   857                           
   858                           ; 1 bytes @ 0x32
   859  0052                     	ds	4
   860  0056                     WriteNumber@cent:
   861                           
   862                           ; 1 bytes @ 0x36
   863  0056                     	ds	1
   864  0057                     WriteNumber@cor:
   865                           
   866                           ; 1 bytes @ 0x37
   867  0057                     	ds	1
   868  0058                     WriteNumber@unidad:
   869                           
   870                           ; 1 bytes @ 0x38
   871  0058                     	ds	1
   872  0059                     WriteNumber@dec:
   873                           
   874                           ; 1 bytes @ 0x39
   875  0059                     	ds	1
   876  005A                     WriteNumber@temp:
   877                           
   878                           ; 2 bytes @ 0x3A
   879  005A                     	ds	2
   880  005C                     WriteNumber@fila:
   881                           
   882                           ; 1 bytes @ 0x3C
   883  005C                     	ds	1
   884  005D                     ??_main:
   885                           
   886                           ; 1 bytes @ 0x3D
   887  005D                     	ds	3
   888                           
   889                           	psect	maintext
   890  058E                     __pmaintext:	
   891 ;;
   892 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   893 ;;
   894 ;; *************** function _main *****************
   895 ;; Defined at:
   896 ;;		line 55 in file "Master.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : B00/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       3       0       0       0
   913 ;;      Totals:         0       3       0       0       0
   914 ;;Total ram usage:        3 bytes
   915 ;; Hardware stack levels required when called:    6
   916 ;; This function calls:
   917 ;;		_Lcd_Clear
   918 ;;		_Lcd_Init
   919 ;;		_Lcd_Set_Cursor
   920 ;;		_Lcd_Write_String
   921 ;;		_WriteNumber
   922 ;;		_setup
   923 ;;		_spiRead
   924 ;;		_spiWrite
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _main
   932  058E                     _main:
   933  058E                     l2050:	
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936                           
   937                           
   938                           ;Master.c: 56:     }
   939  058E  120A  158A  26E3  120A  118A  	fcall	_setup
   940                           
   941                           ;Master.c: 57: }
   942  0593  120A  118A  2798  120A  118A  	fcall	_Lcd_Init
   943                           
   944                           ;Master.c: 59: 
   945  0598  120A  158A  2682  120A  118A  	fcall	_Lcd_Clear
   946  059D                     l2052:
   947                           
   948                           ;Master.c: 62: 
   949  059D  1283               	bcf	3,5	;RP0=0, select bank0
   950  059E  1303               	bcf	3,6	;RP1=0, select bank0
   951  059F  1585               	bsf	5,3	;volatile
   952  05A0                     l2054:
   953                           
   954                           ;Master.c: 63: 
   955  05A0  1085               	bcf	5,1	;volatile
   956  05A1                     l2056:
   957                           
   958                           ;Master.c: 65: 
   959  05A1  3003               	movlw	3
   960  05A2  1283               	bcf	3,5	;RP0=0, select bank0
   961  05A3  1303               	bcf	3,6	;RP1=0, select bank0
   962  05A4  00DE               	movwf	??_main+1
   963  05A5  3097               	movlw	151
   964  05A6  00DD               	movwf	??_main
   965  05A7                     u2427:
   966  05A7  0BDD               	decfsz	??_main,f
   967  05A8  2DA7               	goto	u2427
   968  05A9  0BDE               	decfsz	??_main+1,f
   969  05AA  2DA7               	goto	u2427
   970  05AB                     l2058:
   971                           
   972                           ;Master.c: 66:     TRISC = 0;
   973  05AB  3001               	movlw	1
   974  05AC  120A  158A  2675  120A  118A  	fcall	_spiWrite
   975  05B1                     l2060:
   976                           
   977                           ;Master.c: 67:     TRISCbits.TRISC4 = 1;
   978  05B1  120A  118A  27F5  120A  118A  	fcall	_spiRead
   979  05B6  1283               	bcf	3,5	;RP0=0, select bank0
   980  05B7  1303               	bcf	3,6	;RP1=0, select bank0
   981  05B8  00DD               	movwf	??_main
   982  05B9  085D               	movf	??_main,w
   983  05BA  00FA               	movwf	_Sensor1
   984  05BB                     l2062:
   985                           
   986                           ;Master.c: 68:     TRISCbits.TRISC7 = 1;
   987  05BB  3003               	movlw	3
   988  05BC  1283               	bcf	3,5	;RP0=0, select bank0
   989  05BD  1303               	bcf	3,6	;RP1=0, select bank0
   990  05BE  00DE               	movwf	??_main+1
   991  05BF  3097               	movlw	151
   992  05C0  00DD               	movwf	??_main
   993  05C1                     u2437:
   994  05C1  0BDD               	decfsz	??_main,f
   995  05C2  2DC1               	goto	u2437
   996  05C3  0BDE               	decfsz	??_main+1,f
   997  05C4  2DC1               	goto	u2437
   998  05C5                     l2064:
   999                           
  1000                           ;Master.c: 70:     ANSEL = 0;
  1001  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1002  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1003  05C7  1485               	bsf	5,1	;volatile
  1004  05C8                     l2066:
  1005                           
  1006                           ;Master.c: 71:     ANSELH = 0;
  1007  05C8  1105               	bcf	5,2	;volatile
  1008  05C9                     l2068:
  1009                           
  1010                           ;Master.c: 73:     TRISB = 0;
  1011  05C9  3003               	movlw	3
  1012  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1013  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1014  05CC  00DE               	movwf	??_main+1
  1015  05CD  3097               	movlw	151
  1016  05CE  00DD               	movwf	??_main
  1017  05CF                     u2447:
  1018  05CF  0BDD               	decfsz	??_main,f
  1019  05D0  2DCF               	goto	u2447
  1020  05D1  0BDE               	decfsz	??_main+1,f
  1021  05D2  2DCF               	goto	u2447
  1022  05D3                     l2070:
  1023                           
  1024                           ;Master.c: 74:     Sensor1 = 0;
  1025  05D3  3002               	movlw	2
  1026  05D4  120A  158A  2675  120A  118A  	fcall	_spiWrite
  1027  05D9                     l2072:
  1028                           
  1029                           ;Master.c: 75:     Sensor2 = 0;
  1030  05D9  120A  118A  27F5  120A  118A  	fcall	_spiRead
  1031  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1032  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1033  05E0  00DD               	movwf	??_main
  1034  05E1  085D               	movf	??_main,w
  1035  05E2  00F9               	movwf	_Sensor2
  1036  05E3                     l2074:
  1037                           
  1038                           ;Master.c: 76:     Sensor3 = 0;
  1039  05E3  3003               	movlw	3
  1040  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1041  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1042  05E6  00DE               	movwf	??_main+1
  1043  05E7  3097               	movlw	151
  1044  05E8  00DD               	movwf	??_main
  1045  05E9                     u2457:
  1046  05E9  0BDD               	decfsz	??_main,f
  1047  05EA  2DE9               	goto	u2457
  1048  05EB  0BDE               	decfsz	??_main+1,f
  1049  05EC  2DE9               	goto	u2457
  1050  05ED                     l2076:
  1051                           
  1052                           ;Master.c: 78:     INTCONbits.GIE = 1;
  1053  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1054  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1055  05EF  1505               	bsf	5,2	;volatile
  1056  05F0                     l2078:
  1057                           
  1058                           ;Master.c: 79:     INTCONbits.PEIE = 1;
  1059  05F0  1185               	bcf	5,3	;volatile
  1060  05F1                     l2080:
  1061                           
  1062                           ;Master.c: 81: }
  1063  05F1  3003               	movlw	3
  1064  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1065  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1066  05F4  00DE               	movwf	??_main+1
  1067  05F5  3097               	movlw	151
  1068  05F6  00DD               	movwf	??_main
  1069  05F7                     u2467:
  1070  05F7  0BDD               	decfsz	??_main,f
  1071  05F8  2DF7               	goto	u2467
  1072  05F9  0BDE               	decfsz	??_main+1,f
  1073  05FA  2DF7               	goto	u2467
  1074  05FB                     l2082:
  1075                           
  1076                           ;Master.c: 82: 
  1077  05FB  3002               	movlw	2
  1078  05FC  120A  158A  2675  120A  118A  	fcall	_spiWrite
  1079  0601                     l2084:
  1080                           
  1081                           ;Master.c: 83: 
  1082  0601  120A  118A  27F5  120A  118A  	fcall	_spiRead
  1083  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0608  00DD               	movwf	??_main
  1086  0609  085D               	movf	??_main,w
  1087  060A  00F8               	movwf	_Sensor3
  1088  060B                     l2086:
  1089                           
  1090                           ;Master.c: 84: 
  1091  060B  3003               	movlw	3
  1092  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1093  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1094  060E  00DE               	movwf	??_main+1
  1095  060F  3097               	movlw	151
  1096  0610  00DD               	movwf	??_main
  1097  0611                     u2477:
  1098  0611  0BDD               	decfsz	??_main,f
  1099  0612  2E11               	goto	u2477
  1100  0613  0BDE               	decfsz	??_main+1,f
  1101  0614  2E11               	goto	u2477
  1102  0615                     l2088:
  1103                           
  1104                           ;Master.c: 85: 
  1105  0615  0878               	movf	_Sensor3,w
  1106  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0618  0086               	movwf	6	;volatile
  1109  0619                     l2090:
  1110                           
  1111                           ;Master.c: 86: 
  1112  0619  01F7               	clrf	Lcd_Set_Cursor@b
  1113  061A  0AF7               	incf	Lcd_Set_Cursor@b,f
  1114  061B  3001               	movlw	1
  1115  061C  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  1116  0621                     l2092:
  1117                           
  1118                           ;Master.c: 87: void __attribute__((picinterrupt(("")))) oli(void) {
  1119  0621  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1120  0622  120A  158A  273D  120A  118A  	fcall	_Lcd_Write_String
  1121  0627                     l2094:
  1122                           
  1123                           ;Master.c: 88: 
  1124  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0629  01CF               	clrf	WriteNumber@columna
  1127  062A  0ACF               	incf	WriteNumber@columna,f
  1128  062B  087A               	movf	_Sensor1,w
  1129  062C  00DD               	movwf	??_main
  1130  062D  085D               	movf	??_main,w
  1131  062E  00D0               	movwf	WriteNumber@valor
  1132  062F  01D1               	clrf	WriteNumber@formato
  1133  0630  0AD1               	incf	WriteNumber@formato,f
  1134  0631  3002               	movlw	2
  1135  0632  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1136  0637                     l2096:
  1137                           
  1138                           ;Master.c: 89:     if (PIR1bits.RCIF) {
  1139  0637  3008               	movlw	8
  1140  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1142  063A  00DD               	movwf	??_main
  1143  063B  085D               	movf	??_main,w
  1144  063C  00CF               	movwf	WriteNumber@columna
  1145  063D  0879               	movf	_Sensor2,w
  1146  063E  00DE               	movwf	??_main+1
  1147  063F  085E               	movf	??_main+1,w
  1148  0640  00D0               	movwf	WriteNumber@valor
  1149  0641  01D1               	clrf	WriteNumber@formato
  1150  0642  3002               	movlw	2
  1151  0643  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1152  0648                     l2098:
  1153                           
  1154                           ;Master.c: 90:         comando = Receive();
  1155  0648  300D               	movlw	13
  1156  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1157  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1158  064B  00DD               	movwf	??_main
  1159  064C  085D               	movf	??_main,w
  1160  064D  00CF               	movwf	WriteNumber@columna
  1161  064E  0878               	movf	_Sensor3,w
  1162  064F  00DE               	movwf	??_main+1
  1163  0650  085E               	movf	??_main+1,w
  1164  0651  00D0               	movwf	WriteNumber@valor
  1165  0652  3003               	movlw	3
  1166  0653  00DF               	movwf	??_main+2
  1167  0654  085F               	movf	??_main+2,w
  1168  0655  00D1               	movwf	WriteNumber@formato
  1169  0656  3002               	movlw	2
  1170  0657  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1171  065C  2D9D               	goto	l2052
  1172  065D  120A  118A  280C   	ljmp	start
  1173  0660                     __end_of_main:
  1174                           
  1175                           	psect	text1
  1176  0E75                     __ptext1:	
  1177 ;; *************** function _spiWrite *****************
  1178 ;; Defined at:
  1179 ;;		line 34 in file "SPI.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  dat             1    wreg     unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  dat             1    3[COMMON] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         1       0       0       0       0
  1197 ;;Total ram usage:        1 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _spiWrite
  1209  0E75                     _spiWrite:
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _spiWrite: [wreg]
  1213                           ;spiWrite@dat stored from wreg
  1214  0E75  00F3               	movwf	spiWrite@dat
  1215  0E76                     l1142:
  1216                           
  1217                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1218  0E76  0873               	movf	spiWrite@dat,w
  1219  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0E79  0093               	movwf	19	;volatile
  1222  0E7A                     l182:
  1223  0E7A  0008               	return
  1224  0E7B                     __end_of_spiWrite:
  1225                           
  1226                           	psect	text2
  1227  07F5                     __ptext2:	
  1228 ;; *************** function _spiRead *****************
  1229 ;; Defined at:
  1230 ;;		line 47 in file "SPI.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		_spiReceiveWait
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _spiRead
  1260  07F5                     _spiRead:
  1261  07F5                     l1144:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1264                           
  1265                           
  1266                           ;SPI.c: 49:     spiReceiveWait();
  1267  07F5  120A  158A  267B  120A  118A  	fcall	_spiReceiveWait
  1268  07FA                     l1146:
  1269                           
  1270                           ;SPI.c: 50:     return(SSPBUF);
  1271  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  1272  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  1273  07FC  0813               	movf	19,w	;volatile
  1274  07FD                     l190:
  1275  07FD  0008               	return
  1276  07FE                     __end_of_spiRead:
  1277                           
  1278                           	psect	text3
  1279  0E7B                     __ptext3:	
  1280 ;; *************** function _spiReceiveWait *****************
  1281 ;; Defined at:
  1282 ;;		line 29 in file "SPI.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		None
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    2
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_spiRead
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _spiReceiveWait
  1312  0E7B                     _spiReceiveWait:
  1313  0E7B                     l844:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _spiReceiveWait: []
  1316                           
  1317  0E7B                     l176:	
  1318                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1319                           
  1320  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  1321  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  1322  0E7D  1C14               	btfss	20,0	;volatile
  1323  0E7E  2E80               	goto	u81
  1324  0E7F  2E81               	goto	u80
  1325  0E80                     u81:
  1326  0E80  2E7B               	goto	l176
  1327  0E81                     u80:
  1328  0E81                     l179:
  1329  0E81  0008               	return
  1330  0E82                     __end_of_spiReceiveWait:
  1331                           
  1332                           	psect	text4
  1333  0EE3                     __ptext4:	
  1334 ;; *************** function _setup *****************
  1335 ;; Defined at:
  1336 ;;		line 100 in file "Master.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    3
  1357 ;; This function calls:
  1358 ;;		_spiInit
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _setup
  1366  0EE3                     _setup:
  1367  0EE3                     l1638:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1370                           
  1371                           
  1372                           ;Master.c: 102:     uint8_t unidad, dec, cent;
  1373  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0EE5  0187               	clrf	7	;volatile
  1376  0EE6                     l1640:
  1377                           
  1378                           ;Master.c: 103:     uint8_t cor;
  1379  0EE6  1607               	bsf	7,4	;volatile
  1380  0EE7                     l1642:
  1381                           
  1382                           ;Master.c: 104: 
  1383  0EE7  1787               	bsf	7,7	;volatile
  1384                           
  1385                           ;Master.c: 105:     if (formato == 3) {
  1386  0EE8  0188               	clrf	8	;volatile
  1387                           
  1388                           ;Master.c: 106:         cor = 1;
  1389  0EE9  1683               	bsf	3,5	;RP0=1, select bank3
  1390  0EEA  1703               	bsf	3,6	;RP1=1, select bank3
  1391  0EEB  0188               	clrf	8	;volatile
  1392                           
  1393                           ;Master.c: 107:         if (valor > 68) {
  1394  0EEC  0189               	clrf	9	;volatile
  1395                           
  1396                           ;Master.c: 108:             temp = 0.803 * (valor - 68);
  1397  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0EEF  0185               	clrf	5	;volatile
  1400                           
  1401                           ;Master.c: 109:         } else if (valor < 68) {
  1402  0EF0  0186               	clrf	6	;volatile
  1403                           
  1404                           ;Master.c: 110:             temp = 0.803 * (69 - valor);
  1405  0EF1  01FA               	clrf	_Sensor1
  1406                           
  1407                           ;Master.c: 111:         } else {
  1408  0EF2  01F9               	clrf	_Sensor2
  1409                           
  1410                           ;Master.c: 112:             temp = 0;
  1411  0EF3  01F8               	clrf	_Sensor3
  1412  0EF4                     l1644:
  1413                           
  1414                           ;Master.c: 114:     }
  1415  0EF4  178B               	bsf	11,7	;volatile
  1416  0EF5                     l1646:
  1417                           
  1418                           ;Master.c: 115:     else if (formato == 1) {
  1419  0EF5  170B               	bsf	11,6	;volatile
  1420  0EF6                     l1648:
  1421                           
  1422                           ;Master.c: 116:         cor = 0;
  1423  0EF6  01F3               	clrf	spiInit@sDataSample
  1424  0EF7  01F4               	clrf	spiInit@sClockIdle
  1425  0EF8  01F5               	clrf	spiInit@sTransmitEdge
  1426  0EF9  3020               	movlw	32
  1427  0EFA  120A  158A  26B3  120A  158A  	fcall	_spiInit
  1428  0EFF                     l67:
  1429  0EFF  0008               	return
  1430  0F00                     __end_of_setup:
  1431                           
  1432                           	psect	text5
  1433  0EB3                     __ptext5:	
  1434 ;; *************** function _spiInit *****************
  1435 ;; Defined at:
  1436 ;;		line 12 in file "SPI.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  sType           1    wreg     enum E1264
  1439 ;;  sDataSample     1    3[COMMON] enum E1272
  1440 ;;  sClockIdle      1    4[COMMON] enum E1276
  1441 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  sType           1    6[COMMON] enum E1264
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         3       0       0       0       0
  1454 ;;      Locals:         1       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0
  1456 ;;      Totals:         4       0       0       0       0
  1457 ;;Total ram usage:        4 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    2
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_setup
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _spiInit
  1469  0EB3                     _spiInit:
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1473                           ;spiInit@sType stored from wreg
  1474  0EB3  00F6               	movwf	spiInit@sType
  1475  0EB4                     l1368:
  1476                           
  1477                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1478  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  1479  0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  1480  0EB6  1287               	bcf	7,5	;volatile
  1481                           
  1482                           ;SPI.c: 15:     if(sType & 0b00000100)
  1483  0EB7  1D76               	btfss	spiInit@sType,2
  1484  0EB8  2EBA               	goto	u1061
  1485  0EB9  2EBB               	goto	u1060
  1486  0EBA                     u1061:
  1487  0EBA  2EBF               	goto	l1374
  1488  0EBB                     u1060:
  1489  0EBB                     l1370:
  1490                           
  1491                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1492  0EBB  0875               	movf	spiInit@sTransmitEdge,w
  1493  0EBC  0094               	movwf	20	;volatile
  1494  0EBD                     l1372:
  1495                           
  1496                           ;SPI.c: 18:         TRISC3 = 1;
  1497  0EBD  1587               	bsf	7,3	;volatile
  1498                           
  1499                           ;SPI.c: 19:     }
  1500  0EBE  2EC3               	goto	l172
  1501  0EBF                     l1374:
  1502                           
  1503                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1504  0EBF  0873               	movf	spiInit@sDataSample,w
  1505  0EC0  0475               	iorwf	spiInit@sTransmitEdge,w
  1506  0EC1  0094               	movwf	20	;volatile
  1507  0EC2                     l1376:
  1508                           
  1509                           ;SPI.c: 23:         TRISC3 = 0;
  1510  0EC2  1187               	bcf	7,3	;volatile
  1511  0EC3                     l172:	
  1512                           ;SPI.c: 24:     }
  1513                           
  1514                           
  1515                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1516  0EC3  0876               	movf	spiInit@sType,w
  1517  0EC4  0474               	iorwf	spiInit@sClockIdle,w
  1518  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0EC7  0094               	movwf	20	;volatile
  1521  0EC8                     l173:
  1522  0EC8  0008               	return
  1523  0EC9                     __end_of_spiInit:
  1524                           
  1525                           	psect	text6
  1526  037B                     __ptext6:	
  1527 ;; *************** function _WriteNumber *****************
  1528 ;; Defined at:
  1529 ;;		line 132 in file "Master.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  fila            1    wreg     unsigned char 
  1532 ;;  columna         1   47[BANK0 ] unsigned char 
  1533 ;;  valor           1   48[BANK0 ] unsigned char 
  1534 ;;  formato         1   49[BANK0 ] unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  fila            1   60[BANK0 ] unsigned char 
  1537 ;;  temp            2   58[BANK0 ] unsigned int 
  1538 ;;  dec             1   57[BANK0 ] unsigned char 
  1539 ;;  unidad          1   56[BANK0 ] unsigned char 
  1540 ;;  cor             1   55[BANK0 ] unsigned char 
  1541 ;;  cent            1   54[BANK0 ] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       3       0       0       0
  1552 ;;      Locals:         0       7       0       0       0
  1553 ;;      Temps:          0       4       0       0       0
  1554 ;;      Totals:         0      14       0       0       0
  1555 ;;Total ram usage:       14 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    5
  1558 ;; This function calls:
  1559 ;;		_Lcd_Set_Cursor
  1560 ;;		_Lcd_Write_Char
  1561 ;;		_Lcd_Write_String
  1562 ;;		___flmul
  1563 ;;		___fltol
  1564 ;;		___lwdiv
  1565 ;;		___wmul
  1566 ;;		___xxtofl
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _WriteNumber
  1574  037B                     _WriteNumber:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _WriteNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1578                           ;WriteNumber@fila stored from wreg
  1579  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1580  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1581  037D  00DC               	movwf	WriteNumber@fila
  1582  037E                     l1970:
  1583                           
  1584                           ;Master.c: 137:     };Master.c: 138:     else if ((formato==3)&&(valor >= 68)) {;Master.
      +                          c: 139:     Lcd_Set_Cursor(fila, columna);;Master.c: 141:     }
  1585  037E  3003               	movlw	3
  1586  037F  0651               	xorwf	WriteNumber@formato,w
  1587  0380  1D03               	btfss	3,2
  1588  0381  2B83               	goto	u2261
  1589  0382  2B84               	goto	u2260
  1590  0383                     u2261:
  1591  0383  2C14               	goto	l1984
  1592  0384                     u2260:
  1593  0384                     l1972:
  1594                           
  1595                           ;Master.c: 142:     Lcd_Set_Cursor(fila, columna+cor);
  1596  0384  01D7               	clrf	WriteNumber@cor
  1597  0385  0AD7               	incf	WriteNumber@cor,f
  1598  0386                     l1974:
  1599                           
  1600                           ;Master.c: 143:     Lcd_Write_Char(unidad);
  1601  0386  3045               	movlw	69
  1602  0387  0250               	subwf	WriteNumber@valor,w
  1603  0388  1C03               	skipc
  1604  0389  2B8B               	goto	u2271
  1605  038A  2B8C               	goto	u2270
  1606  038B                     u2271:
  1607  038B  2BCB               	goto	l1978
  1608  038C                     u2270:
  1609  038C                     l1976:
  1610                           
  1611                           ;Master.c: 144:     if ((formato == 1)) {
  1612  038C  0850               	movf	WriteNumber@valor,w
  1613  038D  3EBC               	addlw	188
  1614  038E  00F3               	movwf	___xxtofl@val
  1615  038F  30FF               	movlw	255
  1616  0390  1803               	skipnc
  1617  0391  3000               	movlw	0
  1618  0392  00F4               	movwf	___xxtofl@val+1
  1619  0393  01F5               	clrf	___xxtofl@val+2
  1620  0394  1BF4               	btfsc	___xxtofl@val+1,7
  1621  0395  03F5               	decf	___xxtofl@val+2,f
  1622  0396  0875               	movf	___xxtofl@val+2,w
  1623  0397  00F6               	movwf	___xxtofl@val+3
  1624  0398  3001               	movlw	1
  1625  0399  120A  118A  2660  120A  118A  	fcall	___xxtofl
  1626  039E  0876               	movf	?___xxtofl+3,w
  1627  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1628  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1629  03A1  00B1               	movwf	___flmul@a+3
  1630  03A2  0875               	movf	?___xxtofl+2,w
  1631  03A3  00B0               	movwf	___flmul@a+2
  1632  03A4  0874               	movf	?___xxtofl+1,w
  1633  03A5  00AF               	movwf	___flmul@a+1
  1634  03A6  0873               	movf	?___xxtofl,w
  1635  03A7  00AE               	movwf	___flmul@a
  1636  03A8  303F               	movlw	63
  1637  03A9  00AD               	movwf	___flmul@b+3
  1638  03AA  304D               	movlw	77
  1639  03AB  00AC               	movwf	___flmul@b+2
  1640  03AC  3091               	movlw	145
  1641  03AD  00AB               	movwf	___flmul@b+1
  1642  03AE  3068               	movlw	104
  1643  03AF  00AA               	movwf	___flmul@b
  1644  03B0  120A  118A  201A  120A  118A  	fcall	___flmul
  1645  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1646  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1647  03B7  082D               	movf	?___flmul+3,w
  1648  03B8  00C7               	movwf	___fltol@f1+3
  1649  03B9  082C               	movf	?___flmul+2,w
  1650  03BA  00C6               	movwf	___fltol@f1+2
  1651  03BB  082B               	movf	?___flmul+1,w
  1652  03BC  00C5               	movwf	___fltol@f1+1
  1653  03BD  082A               	movf	?___flmul,w
  1654  03BE  00C4               	movwf	___fltol@f1
  1655  03BF  120A  118A  271C  120A  118A  	fcall	___fltol
  1656  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1657  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1658  03C6  0845               	movf	?___fltol+1,w
  1659  03C7  00DB               	movwf	WriteNumber@temp+1
  1660  03C8  0844               	movf	?___fltol,w
  1661  03C9  00DA               	movwf	WriteNumber@temp
  1662                           
  1663                           ;Master.c: 145:         Lcd_Set_Cursor(fila, columna + 1 + cor);
  1664  03CA  2C62               	goto	l1994
  1665  03CB                     l1978:
  1666  03CB  3044               	movlw	68
  1667  03CC  0250               	subwf	WriteNumber@valor,w
  1668  03CD  1803               	skipnc
  1669  03CE  2BD0               	goto	u2281
  1670  03CF  2BD1               	goto	u2280
  1671  03D0                     u2281:
  1672  03D0  2C11               	goto	l1982
  1673  03D1                     u2280:
  1674  03D1                     l1980:
  1675                           
  1676                           ;Master.c: 146:         Lcd_Write_String(".");
  1677  03D1  3045               	movlw	69
  1678  03D2  00D2               	movwf	??_WriteNumber
  1679  03D3  0850               	movf	WriteNumber@valor,w
  1680  03D4  0252               	subwf	??_WriteNumber,w
  1681  03D5  00F3               	movwf	___xxtofl@val
  1682  03D6  01F4               	clrf	___xxtofl@val+1
  1683  03D7  1C03               	skipc
  1684  03D8  03F4               	decf	___xxtofl@val+1,f
  1685  03D9  01F5               	clrf	___xxtofl@val+2
  1686  03DA  1BF4               	btfsc	___xxtofl@val+1,7
  1687  03DB  03F5               	decf	___xxtofl@val+2,f
  1688  03DC  0875               	movf	___xxtofl@val+2,w
  1689  03DD  00F6               	movwf	___xxtofl@val+3
  1690  03DE  3001               	movlw	1
  1691  03DF  120A  118A  2660  120A  118A  	fcall	___xxtofl
  1692  03E4  0876               	movf	?___xxtofl+3,w
  1693  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1694  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1695  03E7  00B1               	movwf	___flmul@a+3
  1696  03E8  0875               	movf	?___xxtofl+2,w
  1697  03E9  00B0               	movwf	___flmul@a+2
  1698  03EA  0874               	movf	?___xxtofl+1,w
  1699  03EB  00AF               	movwf	___flmul@a+1
  1700  03EC  0873               	movf	?___xxtofl,w
  1701  03ED  00AE               	movwf	___flmul@a
  1702  03EE  303F               	movlw	63
  1703  03EF  00AD               	movwf	___flmul@b+3
  1704  03F0  304D               	movlw	77
  1705  03F1  00AC               	movwf	___flmul@b+2
  1706  03F2  3091               	movlw	145
  1707  03F3  00AB               	movwf	___flmul@b+1
  1708  03F4  3068               	movlw	104
  1709  03F5  00AA               	movwf	___flmul@b
  1710  03F6  120A  118A  201A  120A  118A  	fcall	___flmul
  1711  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1712  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1713  03FD  082D               	movf	?___flmul+3,w
  1714  03FE  00C7               	movwf	___fltol@f1+3
  1715  03FF  082C               	movf	?___flmul+2,w
  1716  0400  00C6               	movwf	___fltol@f1+2
  1717  0401  082B               	movf	?___flmul+1,w
  1718  0402  00C5               	movwf	___fltol@f1+1
  1719  0403  082A               	movf	?___flmul,w
  1720  0404  00C4               	movwf	___fltol@f1
  1721  0405  120A  118A  271C  120A  118A  	fcall	___fltol
  1722  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1723  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1724  040C  0845               	movf	?___fltol+1,w
  1725  040D  00DB               	movwf	WriteNumber@temp+1
  1726  040E  0844               	movf	?___fltol,w
  1727  040F  00DA               	movwf	WriteNumber@temp
  1728                           
  1729                           ;Master.c: 147:     }
  1730  0410  2C62               	goto	l1994
  1731  0411                     l1982:
  1732                           
  1733                           ;Master.c: 148:     Lcd_Set_Cursor(fila, columna +1*(formato != 0) + 1);
  1734  0411  01DA               	clrf	WriteNumber@temp
  1735  0412  01DB               	clrf	WriteNumber@temp+1
  1736  0413  2C62               	goto	l1994
  1737  0414                     l1984:
  1738  0414  0351               	decf	WriteNumber@formato,w
  1739  0415  1D03               	btfss	3,2
  1740  0416  2C18               	goto	u2291
  1741  0417  2C19               	goto	u2290
  1742  0418                     u2291:
  1743  0418  2C5A               	goto	l1990
  1744  0419                     u2290:
  1745  0419                     l1986:
  1746                           
  1747                           ;Master.c: 152:     if (formato == 1) {
  1748  0419  01D7               	clrf	WriteNumber@cor
  1749  041A                     l1988:
  1750                           
  1751                           ;Master.c: 153:         Lcd_Set_Cursor(fila, columna + 1*(formato != 0) + 3);
  1752  041A  0850               	movf	WriteNumber@valor,w
  1753  041B  00D2               	movwf	??_WriteNumber
  1754  041C  01D3               	clrf	??_WriteNumber+1
  1755  041D  01D4               	clrf	??_WriteNumber+2
  1756  041E  01D5               	clrf	??_WriteNumber+3
  1757  041F  0855               	movf	??_WriteNumber+3,w
  1758  0420  00F6               	movwf	___xxtofl@val+3
  1759  0421  0854               	movf	??_WriteNumber+2,w
  1760  0422  00F5               	movwf	___xxtofl@val+2
  1761  0423  0853               	movf	??_WriteNumber+1,w
  1762  0424  00F4               	movwf	___xxtofl@val+1
  1763  0425  0852               	movf	??_WriteNumber,w
  1764  0426  00F3               	movwf	___xxtofl@val
  1765  0427  3001               	movlw	1
  1766  0428  120A  118A  2660  120A  118A  	fcall	___xxtofl
  1767  042D  0876               	movf	?___xxtofl+3,w
  1768  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1769  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0430  00B1               	movwf	___flmul@a+3
  1771  0431  0875               	movf	?___xxtofl+2,w
  1772  0432  00B0               	movwf	___flmul@a+2
  1773  0433  0874               	movf	?___xxtofl+1,w
  1774  0434  00AF               	movwf	___flmul@a+1
  1775  0435  0873               	movf	?___xxtofl,w
  1776  0436  00AE               	movwf	___flmul@a
  1777  0437  303F               	movlw	63
  1778  0438  00AD               	movwf	___flmul@b+3
  1779  0439  30FB               	movlw	251
  1780  043A  00AC               	movwf	___flmul@b+2
  1781  043B  3002               	movlw	2
  1782  043C  00AB               	movwf	___flmul@b+1
  1783  043D  300C               	movlw	12
  1784  043E  00AA               	movwf	___flmul@b
  1785  043F  120A  118A  201A  120A  118A  	fcall	___flmul
  1786  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0446  082D               	movf	?___flmul+3,w
  1789  0447  00C7               	movwf	___fltol@f1+3
  1790  0448  082C               	movf	?___flmul+2,w
  1791  0449  00C6               	movwf	___fltol@f1+2
  1792  044A  082B               	movf	?___flmul+1,w
  1793  044B  00C5               	movwf	___fltol@f1+1
  1794  044C  082A               	movf	?___flmul,w
  1795  044D  00C4               	movwf	___fltol@f1
  1796  044E  120A  118A  271C  120A  118A  	fcall	___fltol
  1797  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0455  0845               	movf	?___fltol+1,w
  1800  0456  00DB               	movwf	WriteNumber@temp+1
  1801  0457  0844               	movf	?___fltol,w
  1802  0458  00DA               	movwf	WriteNumber@temp
  1803                           
  1804                           ;Master.c: 154:         Lcd_Write_String("V");
  1805  0459  2C62               	goto	l1994
  1806  045A                     l1990:
  1807                           
  1808                           ;Master.c: 155:     }
  1809  045A  01D7               	clrf	WriteNumber@cor
  1810  045B                     l1992:
  1811                           
  1812                           ;Master.c: 156: 
  1813  045B  0850               	movf	WriteNumber@valor,w
  1814  045C  00D2               	movwf	??_WriteNumber
  1815  045D  01D3               	clrf	??_WriteNumber+1
  1816  045E  0852               	movf	??_WriteNumber,w
  1817  045F  00DA               	movwf	WriteNumber@temp
  1818  0460  0853               	movf	??_WriteNumber+1,w
  1819  0461  00DB               	movwf	WriteNumber@temp+1
  1820  0462                     l1994:
  1821  0462  3064               	movlw	100
  1822  0463  00F3               	movwf	___lwdiv@divisor
  1823  0464  3000               	movlw	0
  1824  0465  00F4               	movwf	___lwdiv@divisor+1
  1825  0466  085B               	movf	WriteNumber@temp+1,w
  1826  0467  00F6               	movwf	___lwdiv@dividend+1
  1827  0468  085A               	movf	WriteNumber@temp,w
  1828  0469  00F5               	movwf	___lwdiv@dividend
  1829  046A  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  1830  046F  0873               	movf	?___lwdiv,w
  1831  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0472  00D2               	movwf	??_WriteNumber
  1834  0473  0852               	movf	??_WriteNumber,w
  1835  0474  00D8               	movwf	WriteNumber@unidad
  1836  0475                     l1996:
  1837  0475  0858               	movf	WriteNumber@unidad,w
  1838  0476  00D2               	movwf	??_WriteNumber
  1839  0477  01D3               	clrf	??_WriteNumber+1
  1840  0478  0852               	movf	??_WriteNumber,w
  1841  0479  00F3               	movwf	___wmul@multiplier
  1842  047A  0853               	movf	??_WriteNumber+1,w
  1843  047B  00F4               	movwf	___wmul@multiplier+1
  1844  047C  309C               	movlw	156
  1845  047D  00F5               	movwf	___wmul@multiplicand
  1846  047E  30FF               	movlw	255
  1847  047F  00F6               	movwf	___wmul@multiplicand+1
  1848  0480  120A  158A  278F  120A  118A  	fcall	___wmul
  1849  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0487  085A               	movf	WriteNumber@temp,w
  1852  0488  0773               	addwf	?___wmul,w
  1853  0489  00DA               	movwf	WriteNumber@temp
  1854  048A  085B               	movf	WriteNumber@temp+1,w
  1855  048B  1803               	skipnc
  1856  048C  0A5B               	incf	WriteNumber@temp+1,w
  1857  048D  0774               	addwf	?___wmul+1,w
  1858  048E  00DB               	movwf	WriteNumber@temp+1
  1859  048F                     l1998:
  1860  048F  300A               	movlw	10
  1861  0490  00F3               	movwf	___lwdiv@divisor
  1862  0491  3000               	movlw	0
  1863  0492  00F4               	movwf	___lwdiv@divisor+1
  1864  0493  085B               	movf	WriteNumber@temp+1,w
  1865  0494  00F6               	movwf	___lwdiv@dividend+1
  1866  0495  085A               	movf	WriteNumber@temp,w
  1867  0496  00F5               	movwf	___lwdiv@dividend
  1868  0497  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  1869  049C  0873               	movf	?___lwdiv,w
  1870  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1871  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1872  049F  00D2               	movwf	??_WriteNumber
  1873  04A0  0852               	movf	??_WriteNumber,w
  1874  04A1  00D9               	movwf	WriteNumber@dec
  1875  04A2                     l2000:
  1876  04A2  0859               	movf	WriteNumber@dec,w
  1877  04A3  00D2               	movwf	??_WriteNumber
  1878  04A4  01D3               	clrf	??_WriteNumber+1
  1879  04A5  0852               	movf	??_WriteNumber,w
  1880  04A6  00F3               	movwf	___wmul@multiplier
  1881  04A7  0853               	movf	??_WriteNumber+1,w
  1882  04A8  00F4               	movwf	___wmul@multiplier+1
  1883  04A9  30F6               	movlw	246
  1884  04AA  00F5               	movwf	___wmul@multiplicand
  1885  04AB  30FF               	movlw	255
  1886  04AC  00F6               	movwf	___wmul@multiplicand+1
  1887  04AD  120A  158A  278F  120A  118A  	fcall	___wmul
  1888  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1889  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1890  04B4  085A               	movf	WriteNumber@temp,w
  1891  04B5  0773               	addwf	?___wmul,w
  1892  04B6  00DA               	movwf	WriteNumber@temp
  1893  04B7  085B               	movf	WriteNumber@temp+1,w
  1894  04B8  1803               	skipnc
  1895  04B9  0A5B               	incf	WriteNumber@temp+1,w
  1896  04BA  0774               	addwf	?___wmul+1,w
  1897  04BB  00DB               	movwf	WriteNumber@temp+1
  1898  04BC                     l2002:
  1899  04BC  085A               	movf	WriteNumber@temp,w
  1900  04BD  00D2               	movwf	??_WriteNumber
  1901  04BE  0852               	movf	??_WriteNumber,w
  1902  04BF  00D6               	movwf	WriteNumber@cent
  1903  04C0                     l2004:
  1904  04C0  0858               	movf	WriteNumber@unidad,w
  1905  04C1  3E30               	addlw	48
  1906  04C2  00D2               	movwf	??_WriteNumber
  1907  04C3  0852               	movf	??_WriteNumber,w
  1908  04C4  00D8               	movwf	WriteNumber@unidad
  1909  04C5                     l2006:
  1910  04C5  0859               	movf	WriteNumber@dec,w
  1911  04C6  3E30               	addlw	48
  1912  04C7  00D2               	movwf	??_WriteNumber
  1913  04C8  0852               	movf	??_WriteNumber,w
  1914  04C9  00D9               	movwf	WriteNumber@dec
  1915  04CA                     l2008:
  1916  04CA  0856               	movf	WriteNumber@cent,w
  1917  04CB  3E30               	addlw	48
  1918  04CC  00D2               	movwf	??_WriteNumber
  1919  04CD  0852               	movf	??_WriteNumber,w
  1920  04CE  00D6               	movwf	WriteNumber@cent
  1921  04CF                     l2010:
  1922  04CF  3003               	movlw	3
  1923  04D0  0651               	xorwf	WriteNumber@formato,w
  1924  04D1  1D03               	btfss	3,2
  1925  04D2  2CD4               	goto	u2301
  1926  04D3  2CD5               	goto	u2300
  1927  04D4                     u2301:
  1928  04D4  2CEC               	goto	l2018
  1929  04D5                     u2300:
  1930  04D5                     l2012:
  1931  04D5  3044               	movlw	68
  1932  04D6  0250               	subwf	WriteNumber@valor,w
  1933  04D7  1803               	skipnc
  1934  04D8  2CDA               	goto	u2311
  1935  04D9  2CDB               	goto	u2310
  1936  04DA                     u2311:
  1937  04DA  2CEC               	goto	l2018
  1938  04DB                     u2310:
  1939  04DB                     l2014:
  1940  04DB  084F               	movf	WriteNumber@columna,w
  1941  04DC  00D2               	movwf	??_WriteNumber
  1942  04DD  0852               	movf	??_WriteNumber,w
  1943  04DE  00F7               	movwf	Lcd_Set_Cursor@b
  1944  04DF  085C               	movf	WriteNumber@fila,w
  1945  04E0  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  1946  04E5                     l2016:
  1947  04E5  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1948  04E6  120A  158A  273D  120A  118A  	fcall	_Lcd_Write_String
  1949  04EB  2D08               	goto	l2026
  1950  04EC                     l2018:
  1951  04EC  3003               	movlw	3
  1952  04ED  0651               	xorwf	WriteNumber@formato,w
  1953  04EE  1D03               	btfss	3,2
  1954  04EF  2CF1               	goto	u2321
  1955  04F0  2CF2               	goto	u2320
  1956  04F1                     u2321:
  1957  04F1  2D08               	goto	l2026
  1958  04F2                     u2320:
  1959  04F2                     l2020:
  1960  04F2  3044               	movlw	68
  1961  04F3  0250               	subwf	WriteNumber@valor,w
  1962  04F4  1C03               	skipc
  1963  04F5  2CF7               	goto	u2331
  1964  04F6  2CF8               	goto	u2330
  1965  04F7                     u2331:
  1966  04F7  2D08               	goto	l2026
  1967  04F8                     u2330:
  1968  04F8                     l2022:
  1969  04F8  084F               	movf	WriteNumber@columna,w
  1970  04F9  00D2               	movwf	??_WriteNumber
  1971  04FA  0852               	movf	??_WriteNumber,w
  1972  04FB  00F7               	movwf	Lcd_Set_Cursor@b
  1973  04FC  085C               	movf	WriteNumber@fila,w
  1974  04FD  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  1975  0502                     l2024:
  1976  0502  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1977  0503  120A  158A  273D  120A  118A  	fcall	_Lcd_Write_String
  1978  0508                     l2026:
  1979  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1981  050A  0857               	movf	WriteNumber@cor,w
  1982  050B  074F               	addwf	WriteNumber@columna,w
  1983  050C  00D2               	movwf	??_WriteNumber
  1984  050D  0852               	movf	??_WriteNumber,w
  1985  050E  00F7               	movwf	Lcd_Set_Cursor@b
  1986  050F  085C               	movf	WriteNumber@fila,w
  1987  0510  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  1988  0515                     l2028:
  1989  0515  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0516  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0517  0858               	movf	WriteNumber@unidad,w
  1992  0518  120A  158A  269D  120A  118A  	fcall	_Lcd_Write_Char
  1993  051D                     l2030:
  1994  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1995  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1996  051F  0351               	decf	WriteNumber@formato,w
  1997  0520  1D03               	btfss	3,2
  1998  0521  2D23               	goto	u2341
  1999  0522  2D24               	goto	u2340
  2000  0523                     u2341:
  2001  0523  2D36               	goto	l2036
  2002  0524                     u2340:
  2003  0524                     l2032:
  2004  0524  0857               	movf	WriteNumber@cor,w
  2005  0525  074F               	addwf	WriteNumber@columna,w
  2006  0526  3E01               	addlw	1
  2007  0527  00D2               	movwf	??_WriteNumber
  2008  0528  0852               	movf	??_WriteNumber,w
  2009  0529  00F7               	movwf	Lcd_Set_Cursor@b
  2010  052A  085C               	movf	WriteNumber@fila,w
  2011  052B  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  2012  0530                     l2034:
  2013  0530  3016               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2014  0531  120A  158A  273D  120A  118A  	fcall	_Lcd_Write_String
  2015  0536                     l2036:
  2016  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0538  0851               	movf	WriteNumber@formato,w
  2019  0539  1D03               	btfss	3,2
  2020  053A  2D3C               	goto	u2351
  2021  053B  2D3E               	goto	u2350
  2022  053C                     u2351:
  2023  053C  3001               	movlw	1
  2024  053D  2D3F               	goto	u2360
  2025  053E                     u2350:
  2026  053E  3000               	movlw	0
  2027  053F                     u2360:
  2028  053F  074F               	addwf	WriteNumber@columna,w
  2029  0540  3E01               	addlw	1
  2030  0541  00D2               	movwf	??_WriteNumber
  2031  0542  0852               	movf	??_WriteNumber,w
  2032  0543  00F7               	movwf	Lcd_Set_Cursor@b
  2033  0544  085C               	movf	WriteNumber@fila,w
  2034  0545  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  2035  054A                     l2038:
  2036  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2037  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2038  054C  0859               	movf	WriteNumber@dec,w
  2039  054D  120A  158A  269D  120A  118A  	fcall	_Lcd_Write_Char
  2040  0552                     l2040:
  2041  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0554  0851               	movf	WriteNumber@formato,w
  2044  0555  1D03               	btfss	3,2
  2045  0556  2D58               	goto	u2371
  2046  0557  2D5A               	goto	u2370
  2047  0558                     u2371:
  2048  0558  3001               	movlw	1
  2049  0559  2D5B               	goto	u2380
  2050  055A                     u2370:
  2051  055A  3000               	movlw	0
  2052  055B                     u2380:
  2053  055B  074F               	addwf	WriteNumber@columna,w
  2054  055C  3E02               	addlw	2
  2055  055D  00D2               	movwf	??_WriteNumber
  2056  055E  0852               	movf	??_WriteNumber,w
  2057  055F  00F7               	movwf	Lcd_Set_Cursor@b
  2058  0560  085C               	movf	WriteNumber@fila,w
  2059  0561  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  2060  0566                     l2042:
  2061  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0568  0856               	movf	WriteNumber@cent,w
  2064  0569  120A  158A  269D  120A  118A  	fcall	_Lcd_Write_Char
  2065  056E                     l2044:
  2066  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2067  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0570  0351               	decf	WriteNumber@formato,w
  2069  0571  1D03               	btfss	3,2
  2070  0572  2D74               	goto	u2391
  2071  0573  2D75               	goto	u2390
  2072  0574                     u2391:
  2073  0574  2D8D               	goto	l89
  2074  0575                     u2390:
  2075  0575                     l2046:
  2076  0575  0851               	movf	WriteNumber@formato,w
  2077  0576  1D03               	btfss	3,2
  2078  0577  2D79               	goto	u2401
  2079  0578  2D7B               	goto	u2400
  2080  0579                     u2401:
  2081  0579  3001               	movlw	1
  2082  057A  2D7C               	goto	u2410
  2083  057B                     u2400:
  2084  057B  3000               	movlw	0
  2085  057C                     u2410:
  2086  057C  074F               	addwf	WriteNumber@columna,w
  2087  057D  3E03               	addlw	3
  2088  057E  00D2               	movwf	??_WriteNumber
  2089  057F  0852               	movf	??_WriteNumber,w
  2090  0580  00F7               	movwf	Lcd_Set_Cursor@b
  2091  0581  085C               	movf	WriteNumber@fila,w
  2092  0582  120A  158A  2700  120A  118A  	fcall	_Lcd_Set_Cursor
  2093  0587                     l2048:
  2094  0587  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2095  0588  120A  158A  273D  120A  118A  	fcall	_Lcd_Write_String
  2096  058D                     l89:
  2097  058D  0008               	return
  2098  058E                     __end_of_WriteNumber:
  2099                           
  2100                           	psect	text7
  2101  0660                     __ptext7:	
  2102 ;; *************** function ___xxtofl *****************
  2103 ;; Defined at:
  2104 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  sign            1    wreg     unsigned char 
  2107 ;;  val             4    3[COMMON] long 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  sign            1    4[BANK0 ] unsigned char 
  2110 ;;  arg             4    6[BANK0 ] unsigned long 
  2111 ;;  exp             1    5[BANK0 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  4    3[COMMON] unsigned char 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         4       0       0       0       0
  2122 ;;      Locals:         0       6       0       0       0
  2123 ;;      Temps:          0       4       0       0       0
  2124 ;;      Totals:         4      10       0       0       0
  2125 ;;Total ram usage:       14 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    2
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_WriteNumber
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function ___xxtofl
  2137  0660                     ___xxtofl:
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2141                           ;___xxtofl@sign stored from wreg
  2142  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0662  00A4               	movwf	___xxtofl@sign
  2145  0663                     l1902:
  2146  0663  0824               	movf	___xxtofl@sign,w
  2147  0664  1903               	btfsc	3,2
  2148  0665  2E67               	goto	u2121
  2149  0666  2E68               	goto	u2120
  2150  0667                     u2121:
  2151  0667  2E7C               	goto	l1908
  2152  0668                     u2120:
  2153  0668                     l1904:
  2154  0668  1FF6               	btfss	___xxtofl@val+3,7
  2155  0669  2E6B               	goto	u2131
  2156  066A  2E6C               	goto	u2130
  2157  066B                     u2131:
  2158  066B  2E7C               	goto	l1908
  2159  066C                     u2130:
  2160  066C                     l1906:
  2161  066C  0973               	comf	___xxtofl@val,w
  2162  066D  00A6               	movwf	___xxtofl@arg
  2163  066E  0974               	comf	___xxtofl@val+1,w
  2164  066F  00A7               	movwf	___xxtofl@arg+1
  2165  0670  0975               	comf	___xxtofl@val+2,w
  2166  0671  00A8               	movwf	___xxtofl@arg+2
  2167  0672  0976               	comf	___xxtofl@val+3,w
  2168  0673  00A9               	movwf	___xxtofl@arg+3
  2169  0674  0AA6               	incf	___xxtofl@arg,f
  2170  0675  1903               	skipnz
  2171  0676  0AA7               	incf	___xxtofl@arg+1,f
  2172  0677  1903               	skipnz
  2173  0678  0AA8               	incf	___xxtofl@arg+2,f
  2174  0679  1903               	skipnz
  2175  067A  0AA9               	incf	___xxtofl@arg+3,f
  2176  067B  2E84               	goto	l709
  2177  067C                     l1908:
  2178  067C  0876               	movf	___xxtofl@val+3,w
  2179  067D  00A9               	movwf	___xxtofl@arg+3
  2180  067E  0875               	movf	___xxtofl@val+2,w
  2181  067F  00A8               	movwf	___xxtofl@arg+2
  2182  0680  0874               	movf	___xxtofl@val+1,w
  2183  0681  00A7               	movwf	___xxtofl@arg+1
  2184  0682  0873               	movf	___xxtofl@val,w
  2185  0683  00A6               	movwf	___xxtofl@arg
  2186  0684                     l709:
  2187  0684  0876               	movf	___xxtofl@val+3,w
  2188  0685  0475               	iorwf	___xxtofl@val+2,w
  2189  0686  0474               	iorwf	___xxtofl@val+1,w
  2190  0687  0473               	iorwf	___xxtofl@val,w
  2191  0688  1D03               	skipz
  2192  0689  2E8B               	goto	u2141
  2193  068A  2E8C               	goto	u2140
  2194  068B                     u2141:
  2195  068B  2E95               	goto	l1914
  2196  068C                     u2140:
  2197  068C                     l1910:
  2198  068C  3000               	movlw	0
  2199  068D  00F6               	movwf	?___xxtofl+3
  2200  068E  3000               	movlw	0
  2201  068F  00F5               	movwf	?___xxtofl+2
  2202  0690  3000               	movlw	0
  2203  0691  00F4               	movwf	?___xxtofl+1
  2204  0692  3000               	movlw	0
  2205  0693  00F3               	movwf	?___xxtofl
  2206  0694  2F1B               	goto	l711
  2207  0695                     l1914:
  2208  0695  3096               	movlw	150
  2209  0696  00A0               	movwf	??___xxtofl
  2210  0697  0820               	movf	??___xxtofl,w
  2211  0698  00A5               	movwf	___xxtofl@exp
  2212  0699  2EA7               	goto	l1918
  2213  069A                     l1916:
  2214  069A  3001               	movlw	1
  2215  069B  00A0               	movwf	??___xxtofl
  2216  069C  0820               	movf	??___xxtofl,w
  2217  069D  07A5               	addwf	___xxtofl@exp,f
  2218  069E  3001               	movlw	1
  2219  069F                     u2155:
  2220  069F  1003               	clrc
  2221  06A0  0CA9               	rrf	___xxtofl@arg+3,f
  2222  06A1  0CA8               	rrf	___xxtofl@arg+2,f
  2223  06A2  0CA7               	rrf	___xxtofl@arg+1,f
  2224  06A3  0CA6               	rrf	___xxtofl@arg,f
  2225  06A4  3EFF               	addlw	-1
  2226  06A5  1D03               	skipz
  2227  06A6  2E9F               	goto	u2155
  2228  06A7                     l1918:
  2229  06A7  30FE               	movlw	254
  2230  06A8  0529               	andwf	___xxtofl@arg+3,w
  2231  06A9  1D03               	btfss	3,2
  2232  06AA  2EAC               	goto	u2161
  2233  06AB  2EAD               	goto	u2160
  2234  06AC                     u2161:
  2235  06AC  2E9A               	goto	l1916
  2236  06AD                     u2160:
  2237  06AD  2EC9               	goto	l715
  2238  06AE                     l1920:
  2239  06AE  3001               	movlw	1
  2240  06AF  00A0               	movwf	??___xxtofl
  2241  06B0  0820               	movf	??___xxtofl,w
  2242  06B1  07A5               	addwf	___xxtofl@exp,f
  2243  06B2                     l1922:
  2244  06B2  3001               	movlw	1
  2245  06B3  07A6               	addwf	___xxtofl@arg,f
  2246  06B4  3000               	movlw	0
  2247  06B5  1803               	skipnc
  2248  06B6  3001               	movlw	1
  2249  06B7  07A7               	addwf	___xxtofl@arg+1,f
  2250  06B8  3000               	movlw	0
  2251  06B9  1803               	skipnc
  2252  06BA  3001               	movlw	1
  2253  06BB  07A8               	addwf	___xxtofl@arg+2,f
  2254  06BC  3000               	movlw	0
  2255  06BD  1803               	skipnc
  2256  06BE  3001               	movlw	1
  2257  06BF  07A9               	addwf	___xxtofl@arg+3,f
  2258  06C0                     l1924:
  2259  06C0  3001               	movlw	1
  2260  06C1                     u2175:
  2261  06C1  1003               	clrc
  2262  06C2  0CA9               	rrf	___xxtofl@arg+3,f
  2263  06C3  0CA8               	rrf	___xxtofl@arg+2,f
  2264  06C4  0CA7               	rrf	___xxtofl@arg+1,f
  2265  06C5  0CA6               	rrf	___xxtofl@arg,f
  2266  06C6  3EFF               	addlw	-1
  2267  06C7  1D03               	skipz
  2268  06C8  2EC1               	goto	u2175
  2269  06C9                     l715:
  2270  06C9  30FF               	movlw	255
  2271  06CA  0529               	andwf	___xxtofl@arg+3,w
  2272  06CB  1D03               	btfss	3,2
  2273  06CC  2ECE               	goto	u2181
  2274  06CD  2ECF               	goto	u2180
  2275  06CE                     u2181:
  2276  06CE  2EAE               	goto	l1920
  2277  06CF                     u2180:
  2278  06CF  2EDB               	goto	l1928
  2279  06D0                     l1926:
  2280  06D0  3001               	movlw	1
  2281  06D1  02A5               	subwf	___xxtofl@exp,f
  2282  06D2  3001               	movlw	1
  2283  06D3  00A0               	movwf	??___xxtofl
  2284  06D4                     u2195:
  2285  06D4  1003               	clrc
  2286  06D5  0DA6               	rlf	___xxtofl@arg,f
  2287  06D6  0DA7               	rlf	___xxtofl@arg+1,f
  2288  06D7  0DA8               	rlf	___xxtofl@arg+2,f
  2289  06D8  0DA9               	rlf	___xxtofl@arg+3,f
  2290  06D9  0BA0               	decfsz	??___xxtofl,f
  2291  06DA  2ED4               	goto	u2195
  2292  06DB                     l1928:
  2293  06DB  1BA8               	btfsc	___xxtofl@arg+2,7
  2294  06DC  2EDE               	goto	u2201
  2295  06DD  2EDF               	goto	u2200
  2296  06DE                     u2201:
  2297  06DE  2EE5               	goto	l722
  2298  06DF                     u2200:
  2299  06DF                     l1930:
  2300  06DF  3002               	movlw	2
  2301  06E0  0225               	subwf	___xxtofl@exp,w
  2302  06E1  1803               	skipnc
  2303  06E2  2EE4               	goto	u2211
  2304  06E3  2EE5               	goto	u2210
  2305  06E4                     u2211:
  2306  06E4  2ED0               	goto	l1926
  2307  06E5                     u2210:
  2308  06E5                     l722:
  2309  06E5  1825               	btfsc	___xxtofl@exp,0
  2310  06E6  2EE8               	goto	u2221
  2311  06E7  2EE9               	goto	u2220
  2312  06E8                     u2221:
  2313  06E8  2EF1               	goto	l723
  2314  06E9                     u2220:
  2315  06E9                     l1932:
  2316  06E9  30FF               	movlw	255
  2317  06EA  05A6               	andwf	___xxtofl@arg,f
  2318  06EB  30FF               	movlw	255
  2319  06EC  05A7               	andwf	___xxtofl@arg+1,f
  2320  06ED  307F               	movlw	127
  2321  06EE  05A8               	andwf	___xxtofl@arg+2,f
  2322  06EF  30FF               	movlw	255
  2323  06F0  05A9               	andwf	___xxtofl@arg+3,f
  2324  06F1                     l723:
  2325  06F1  1003               	clrc
  2326  06F2  0CA5               	rrf	___xxtofl@exp,f
  2327  06F3                     l1934:
  2328  06F3  0825               	movf	___xxtofl@exp,w
  2329  06F4  00A0               	movwf	??___xxtofl
  2330  06F5  01A1               	clrf	??___xxtofl+1
  2331  06F6  01A2               	clrf	??___xxtofl+2
  2332  06F7  01A3               	clrf	??___xxtofl+3
  2333  06F8  3018               	movlw	24
  2334  06F9                     u2235:
  2335  06F9  1003               	clrc
  2336  06FA  0DA0               	rlf	??___xxtofl,f
  2337  06FB  0DA1               	rlf	??___xxtofl+1,f
  2338  06FC  0DA2               	rlf	??___xxtofl+2,f
  2339  06FD  0DA3               	rlf	??___xxtofl+3,f
  2340  06FE                     u2230:
  2341  06FE  3EFF               	addlw	-1
  2342  06FF  1D03               	skipz
  2343  0700  2EF9               	goto	u2235
  2344  0701  0820               	movf	??___xxtofl,w
  2345  0702  04A6               	iorwf	___xxtofl@arg,f
  2346  0703  0821               	movf	??___xxtofl+1,w
  2347  0704  04A7               	iorwf	___xxtofl@arg+1,f
  2348  0705  0822               	movf	??___xxtofl+2,w
  2349  0706  04A8               	iorwf	___xxtofl@arg+2,f
  2350  0707  0823               	movf	??___xxtofl+3,w
  2351  0708  04A9               	iorwf	___xxtofl@arg+3,f
  2352  0709                     l1936:
  2353  0709  0824               	movf	___xxtofl@sign,w
  2354  070A  1903               	btfsc	3,2
  2355  070B  2F0D               	goto	u2241
  2356  070C  2F0E               	goto	u2240
  2357  070D                     u2241:
  2358  070D  2F13               	goto	l1942
  2359  070E                     u2240:
  2360  070E                     l1938:
  2361  070E  1FF6               	btfss	___xxtofl@val+3,7
  2362  070F  2F11               	goto	u2251
  2363  0710  2F12               	goto	u2250
  2364  0711                     u2251:
  2365  0711  2F13               	goto	l1942
  2366  0712                     u2250:
  2367  0712                     l1940:
  2368  0712  17A9               	bsf	___xxtofl@arg+3,7
  2369  0713                     l1942:
  2370  0713  0829               	movf	___xxtofl@arg+3,w
  2371  0714  00F6               	movwf	?___xxtofl+3
  2372  0715  0828               	movf	___xxtofl@arg+2,w
  2373  0716  00F5               	movwf	?___xxtofl+2
  2374  0717  0827               	movf	___xxtofl@arg+1,w
  2375  0718  00F4               	movwf	?___xxtofl+1
  2376  0719  0826               	movf	___xxtofl@arg,w
  2377  071A  00F3               	movwf	?___xxtofl
  2378  071B                     l711:
  2379  071B  0008               	return
  2380  071C                     __end_of___xxtofl:
  2381                           
  2382                           	psect	text8
  2383  0F8F                     __ptext8:	
  2384 ;; *************** function ___wmul *****************
  2385 ;; Defined at:
  2386 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  multiplier      2    3[COMMON] unsigned int 
  2389 ;;  multiplicand    2    5[COMMON] unsigned int 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  product         2    0[BANK0 ] unsigned int 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2    3[COMMON] unsigned int 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         4       0       0       0       0
  2402 ;;      Locals:         0       2       0       0       0
  2403 ;;      Temps:          0       0       0       0       0
  2404 ;;      Totals:         4       2       0       0       0
  2405 ;;Total ram usage:        6 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    2
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_WriteNumber
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function ___wmul
  2417  0F8F                     ___wmul:
  2418  0F8F                     l1862:	
  2419                           ;incstack = 0
  2420                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2421                           
  2422  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0F91  01A0               	clrf	___wmul@product
  2425  0F92  01A1               	clrf	___wmul@product+1
  2426  0F93                     l1864:
  2427  0F93  1C73               	btfss	___wmul@multiplier,0
  2428  0F94  2F96               	goto	u2011
  2429  0F95  2F97               	goto	u2010
  2430  0F96                     u2011:
  2431  0F96  2F9F               	goto	l276
  2432  0F97                     u2010:
  2433  0F97                     l1866:
  2434  0F97  0875               	movf	___wmul@multiplicand,w
  2435  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0F9A  07A0               	addwf	___wmul@product,f
  2438  0F9B  1803               	skipnc
  2439  0F9C  0AA1               	incf	___wmul@product+1,f
  2440  0F9D  0876               	movf	___wmul@multiplicand+1,w
  2441  0F9E  07A1               	addwf	___wmul@product+1,f
  2442  0F9F                     l276:
  2443  0F9F  3001               	movlw	1
  2444  0FA0                     u2025:
  2445  0FA0  1003               	clrc
  2446  0FA1  0DF5               	rlf	___wmul@multiplicand,f
  2447  0FA2  0DF6               	rlf	___wmul@multiplicand+1,f
  2448  0FA3  3EFF               	addlw	-1
  2449  0FA4  1D03               	skipz
  2450  0FA5  2FA0               	goto	u2025
  2451  0FA6                     l1868:
  2452  0FA6  3001               	movlw	1
  2453  0FA7                     u2035:
  2454  0FA7  1003               	clrc
  2455  0FA8  0CF4               	rrf	___wmul@multiplier+1,f
  2456  0FA9  0CF3               	rrf	___wmul@multiplier,f
  2457  0FAA  3EFF               	addlw	-1
  2458  0FAB  1D03               	skipz
  2459  0FAC  2FA7               	goto	u2035
  2460  0FAD                     l1870:
  2461  0FAD  0873               	movf	___wmul@multiplier,w
  2462  0FAE  0474               	iorwf	___wmul@multiplier+1,w
  2463  0FAF  1D03               	btfss	3,2
  2464  0FB0  2FB2               	goto	u2041
  2465  0FB1  2FB3               	goto	u2040
  2466  0FB2                     u2041:
  2467  0FB2  2F93               	goto	l1864
  2468  0FB3                     u2040:
  2469  0FB3                     l1872:
  2470  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0FB5  0821               	movf	___wmul@product+1,w
  2473  0FB6  00F4               	movwf	?___wmul+1
  2474  0FB7  0820               	movf	___wmul@product,w
  2475  0FB8  00F3               	movwf	?___wmul
  2476  0FB9                     l278:
  2477  0FB9  0008               	return
  2478  0FBA                     __end_of___wmul:
  2479                           
  2480                           	psect	text9
  2481  0FBA                     __ptext9:	
  2482 ;; *************** function ___lwdiv *****************
  2483 ;; Defined at:
  2484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  divisor         2    3[COMMON] unsigned int 
  2487 ;;  dividend        2    5[COMMON] unsigned int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  quotient        2    1[BANK0 ] unsigned int 
  2490 ;;  counter         1    0[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2    3[COMMON] unsigned int 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         4       0       0       0       0
  2501 ;;      Locals:         0       3       0       0       0
  2502 ;;      Temps:          1       0       0       0       0
  2503 ;;      Totals:         5       3       0       0       0
  2504 ;;Total ram usage:        8 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    2
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_WriteNumber
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function ___lwdiv
  2516  0FBA                     ___lwdiv:
  2517  0FBA                     l1876:	
  2518                           ;incstack = 0
  2519                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2520                           
  2521  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0FBC  01A1               	clrf	___lwdiv@quotient
  2524  0FBD  01A2               	clrf	___lwdiv@quotient+1
  2525  0FBE                     l1878:
  2526  0FBE  0873               	movf	___lwdiv@divisor,w
  2527  0FBF  0474               	iorwf	___lwdiv@divisor+1,w
  2528  0FC0  1903               	btfsc	3,2
  2529  0FC1  2FC3               	goto	u2051
  2530  0FC2  2FC4               	goto	u2050
  2531  0FC3                     u2051:
  2532  0FC3  2FFB               	goto	l1898
  2533  0FC4                     u2050:
  2534  0FC4                     l1880:
  2535  0FC4  01A0               	clrf	___lwdiv@counter
  2536  0FC5  0AA0               	incf	___lwdiv@counter,f
  2537  0FC6  2FD2               	goto	l1886
  2538  0FC7                     l1882:
  2539  0FC7  3001               	movlw	1
  2540  0FC8                     u2065:
  2541  0FC8  1003               	clrc
  2542  0FC9  0DF3               	rlf	___lwdiv@divisor,f
  2543  0FCA  0DF4               	rlf	___lwdiv@divisor+1,f
  2544  0FCB  3EFF               	addlw	-1
  2545  0FCC  1D03               	skipz
  2546  0FCD  2FC8               	goto	u2065
  2547  0FCE                     l1884:
  2548  0FCE  3001               	movlw	1
  2549  0FCF  00F7               	movwf	??___lwdiv
  2550  0FD0  0877               	movf	??___lwdiv,w
  2551  0FD1  07A0               	addwf	___lwdiv@counter,f
  2552  0FD2                     l1886:
  2553  0FD2  1FF4               	btfss	___lwdiv@divisor+1,7
  2554  0FD3  2FD5               	goto	u2071
  2555  0FD4  2FD6               	goto	u2070
  2556  0FD5                     u2071:
  2557  0FD5  2FC7               	goto	l1882
  2558  0FD6                     u2070:
  2559  0FD6                     l1888:
  2560  0FD6  3001               	movlw	1
  2561  0FD7                     u2085:
  2562  0FD7  1003               	clrc
  2563  0FD8  0DA1               	rlf	___lwdiv@quotient,f
  2564  0FD9  0DA2               	rlf	___lwdiv@quotient+1,f
  2565  0FDA  3EFF               	addlw	-1
  2566  0FDB  1D03               	skipz
  2567  0FDC  2FD7               	goto	u2085
  2568  0FDD  0874               	movf	___lwdiv@divisor+1,w
  2569  0FDE  0276               	subwf	___lwdiv@dividend+1,w
  2570  0FDF  1D03               	skipz
  2571  0FE0  2FE3               	goto	u2095
  2572  0FE1  0873               	movf	___lwdiv@divisor,w
  2573  0FE2  0275               	subwf	___lwdiv@dividend,w
  2574  0FE3                     u2095:
  2575  0FE3  1C03               	skipc
  2576  0FE4  2FE6               	goto	u2091
  2577  0FE5  2FE7               	goto	u2090
  2578  0FE6                     u2091:
  2579  0FE6  2FEE               	goto	l1894
  2580  0FE7                     u2090:
  2581  0FE7                     l1890:
  2582  0FE7  0873               	movf	___lwdiv@divisor,w
  2583  0FE8  02F5               	subwf	___lwdiv@dividend,f
  2584  0FE9  0874               	movf	___lwdiv@divisor+1,w
  2585  0FEA  1C03               	skipc
  2586  0FEB  03F6               	decf	___lwdiv@dividend+1,f
  2587  0FEC  02F6               	subwf	___lwdiv@dividend+1,f
  2588  0FED                     l1892:
  2589  0FED  1421               	bsf	___lwdiv@quotient,0
  2590  0FEE                     l1894:
  2591  0FEE  3001               	movlw	1
  2592  0FEF                     u2105:
  2593  0FEF  1003               	clrc
  2594  0FF0  0CF4               	rrf	___lwdiv@divisor+1,f
  2595  0FF1  0CF3               	rrf	___lwdiv@divisor,f
  2596  0FF2  3EFF               	addlw	-1
  2597  0FF3  1D03               	skipz
  2598  0FF4  2FEF               	goto	u2105
  2599  0FF5                     l1896:
  2600  0FF5  3001               	movlw	1
  2601  0FF6  02A0               	subwf	___lwdiv@counter,f
  2602  0FF7  1D03               	btfss	3,2
  2603  0FF8  2FFA               	goto	u2111
  2604  0FF9  2FFB               	goto	u2110
  2605  0FFA                     u2111:
  2606  0FFA  2FD6               	goto	l1888
  2607  0FFB                     u2110:
  2608  0FFB                     l1898:
  2609  0FFB  0822               	movf	___lwdiv@quotient+1,w
  2610  0FFC  00F4               	movwf	?___lwdiv+1
  2611  0FFD  0821               	movf	___lwdiv@quotient,w
  2612  0FFE  00F3               	movwf	?___lwdiv
  2613  0FFF                     l548:
  2614  0FFF  0008               	return
  2615  1000                     __end_of___lwdiv:
  2616                           
  2617                           	psect	text10
  2618  071C                     __ptext10:	
  2619 ;; *************** function ___fltol *****************
  2620 ;; Defined at:
  2621 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  f1              4   36[BANK0 ] unsigned int 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  exp1            1   46[BANK0 ] unsigned char 
  2626 ;;  sign1           1   45[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  4   36[BANK0 ] long 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       4       0       0       0
  2637 ;;      Locals:         0       2       0       0       0
  2638 ;;      Temps:          0       5       0       0       0
  2639 ;;      Totals:         0      11       0       0       0
  2640 ;;Total ram usage:       11 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_WriteNumber
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function ___fltol
  2652  071C                     ___fltol:
  2653  071C                     l1392:	
  2654                           ;incstack = 0
  2655                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2656                           
  2657  071C  1003               	clrc
  2658  071D  1283               	bcf	3,5	;RP0=0, select bank0
  2659  071E  1303               	bcf	3,6	;RP1=0, select bank0
  2660  071F  0D46               	rlf	___fltol@f1+2,w
  2661  0720  0D47               	rlf	___fltol@f1+3,w
  2662  0721  00C8               	movwf	??___fltol
  2663  0722  0848               	movf	??___fltol,w
  2664  0723  00CE               	movwf	___fltol@exp1
  2665  0724  084E               	movf	___fltol@exp1,w
  2666  0725  1D03               	btfss	3,2
  2667  0726  2F28               	goto	u1111
  2668  0727  2F29               	goto	u1110
  2669  0728                     u1111:
  2670  0728  2F32               	goto	l1398
  2671  0729                     u1110:
  2672  0729                     l1394:
  2673  0729  3000               	movlw	0
  2674  072A  00C7               	movwf	?___fltol+3
  2675  072B  3000               	movlw	0
  2676  072C  00C6               	movwf	?___fltol+2
  2677  072D  3000               	movlw	0
  2678  072E  00C5               	movwf	?___fltol+1
  2679  072F  3000               	movlw	0
  2680  0730  00C4               	movwf	?___fltol
  2681  0731  2F97               	goto	l462
  2682  0732                     l1398:
  2683  0732  0844               	movf	___fltol@f1,w
  2684  0733  00C8               	movwf	??___fltol
  2685  0734  0845               	movf	___fltol@f1+1,w
  2686  0735  00C9               	movwf	??___fltol+1
  2687  0736  0846               	movf	___fltol@f1+2,w
  2688  0737  00CA               	movwf	??___fltol+2
  2689  0738  0847               	movf	___fltol@f1+3,w
  2690  0739  00CB               	movwf	??___fltol+3
  2691  073A  301F               	movlw	31
  2692  073B                     u1125:
  2693  073B  1003               	clrc
  2694  073C  0CCB               	rrf	??___fltol+3,f
  2695  073D  0CCA               	rrf	??___fltol+2,f
  2696  073E  0CC9               	rrf	??___fltol+1,f
  2697  073F  0CC8               	rrf	??___fltol,f
  2698  0740                     u1120:
  2699  0740  3EFF               	addlw	-1
  2700  0741  1D03               	skipz
  2701  0742  2F3B               	goto	u1125
  2702  0743  0848               	movf	??___fltol,w
  2703  0744  00CC               	movwf	??___fltol+4
  2704  0745  084C               	movf	??___fltol+4,w
  2705  0746  00CD               	movwf	___fltol@sign1
  2706  0747                     l1400:
  2707  0747  17C6               	bsf	___fltol@f1+2,7
  2708  0748                     l1402:
  2709  0748  30FF               	movlw	255
  2710  0749  05C4               	andwf	___fltol@f1,f
  2711  074A  30FF               	movlw	255
  2712  074B  05C5               	andwf	___fltol@f1+1,f
  2713  074C  30FF               	movlw	255
  2714  074D  05C6               	andwf	___fltol@f1+2,f
  2715  074E  3000               	movlw	0
  2716  074F  05C7               	andwf	___fltol@f1+3,f
  2717  0750                     l1404:
  2718  0750  3096               	movlw	150
  2719  0751  02CE               	subwf	___fltol@exp1,f
  2720  0752                     l1406:
  2721  0752  1FCE               	btfss	___fltol@exp1,7
  2722  0753  2F55               	goto	u1131
  2723  0754  2F56               	goto	u1130
  2724  0755                     u1131:
  2725  0755  2F70               	goto	l1416
  2726  0756                     u1130:
  2727  0756                     l1408:
  2728  0756  084E               	movf	___fltol@exp1,w
  2729  0757  3A80               	xorlw	128
  2730  0758  3E97               	addlw	151
  2731  0759  1803               	skipnc
  2732  075A  2F5C               	goto	u1141
  2733  075B  2F5D               	goto	u1140
  2734  075C                     u1141:
  2735  075C  2F5E               	goto	l1414
  2736  075D                     u1140:
  2737  075D  2F29               	goto	l1394
  2738  075E                     l1414:
  2739  075E  3001               	movlw	1
  2740  075F                     u1155:
  2741  075F  1003               	clrc
  2742  0760  0CC7               	rrf	___fltol@f1+3,f
  2743  0761  0CC6               	rrf	___fltol@f1+2,f
  2744  0762  0CC5               	rrf	___fltol@f1+1,f
  2745  0763  0CC4               	rrf	___fltol@f1,f
  2746  0764  3EFF               	addlw	-1
  2747  0765  1D03               	skipz
  2748  0766  2F5F               	goto	u1155
  2749  0767  3001               	movlw	1
  2750  0768  00C8               	movwf	??___fltol
  2751  0769  0848               	movf	??___fltol,w
  2752  076A  07CE               	addwf	___fltol@exp1,f
  2753  076B  1D03               	btfss	3,2
  2754  076C  2F6E               	goto	u1161
  2755  076D  2F6F               	goto	u1160
  2756  076E                     u1161:
  2757  076E  2F5E               	goto	l1414
  2758  076F                     u1160:
  2759  076F  2F87               	goto	l1424
  2760  0770                     l1416:
  2761  0770  3020               	movlw	32
  2762  0771  024E               	subwf	___fltol@exp1,w
  2763  0772  1C03               	skipc
  2764  0773  2F75               	goto	u1171
  2765  0774  2F76               	goto	u1170
  2766  0775                     u1171:
  2767  0775  2F82               	goto	l469
  2768  0776                     u1170:
  2769  0776  2F29               	goto	l1394
  2770  0777                     l1422:
  2771  0777  3001               	movlw	1
  2772  0778  00C8               	movwf	??___fltol
  2773  0779                     u1185:
  2774  0779  1003               	clrc
  2775  077A  0DC4               	rlf	___fltol@f1,f
  2776  077B  0DC5               	rlf	___fltol@f1+1,f
  2777  077C  0DC6               	rlf	___fltol@f1+2,f
  2778  077D  0DC7               	rlf	___fltol@f1+3,f
  2779  077E  0BC8               	decfsz	??___fltol,f
  2780  077F  2F79               	goto	u1185
  2781  0780  3001               	movlw	1
  2782  0781  02CE               	subwf	___fltol@exp1,f
  2783  0782                     l469:
  2784  0782  084E               	movf	___fltol@exp1,w
  2785  0783  1D03               	btfss	3,2
  2786  0784  2F86               	goto	u1191
  2787  0785  2F87               	goto	u1190
  2788  0786                     u1191:
  2789  0786  2F77               	goto	l1422
  2790  0787                     u1190:
  2791  0787                     l1424:
  2792  0787  084D               	movf	___fltol@sign1,w
  2793  0788  1903               	btfsc	3,2
  2794  0789  2F8B               	goto	u1201
  2795  078A  2F8C               	goto	u1200
  2796  078B                     u1201:
  2797  078B  2F97               	goto	l472
  2798  078C                     u1200:
  2799  078C                     l1426:
  2800  078C  09C4               	comf	___fltol@f1,f
  2801  078D  09C5               	comf	___fltol@f1+1,f
  2802  078E  09C6               	comf	___fltol@f1+2,f
  2803  078F  09C7               	comf	___fltol@f1+3,f
  2804  0790  0AC4               	incf	___fltol@f1,f
  2805  0791  1903               	skipnz
  2806  0792  0AC5               	incf	___fltol@f1+1,f
  2807  0793  1903               	skipnz
  2808  0794  0AC6               	incf	___fltol@f1+2,f
  2809  0795  1903               	skipnz
  2810  0796  0AC7               	incf	___fltol@f1+3,f
  2811  0797                     l472:
  2812  0797                     l462:
  2813  0797  0008               	return
  2814  0798                     __end_of___fltol:
  2815                           
  2816                           	psect	text11
  2817  001A                     __ptext11:	
  2818 ;; *************** function ___flmul *****************
  2819 ;; Defined at:
  2820 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  b               4   10[BANK0 ] long 
  2823 ;;  a               4   14[BANK0 ] long 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  prod            4   30[BANK0 ] struct .
  2826 ;;  grs             4   24[BANK0 ] unsigned long 
  2827 ;;  temp            2   34[BANK0 ] struct .
  2828 ;;  bexp            1   29[BANK0 ] unsigned char 
  2829 ;;  aexp            1   28[BANK0 ] unsigned char 
  2830 ;;  sign            1   23[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  4   10[BANK0 ] unsigned char 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       8       0       0       0
  2841 ;;      Locals:         0      13       0       0       0
  2842 ;;      Temps:          0       5       0       0       0
  2843 ;;      Totals:         0      26       0       0       0
  2844 ;;Total ram usage:       26 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    3
  2847 ;; This function calls:
  2848 ;;		__Umul8_16
  2849 ;; This function is called by:
  2850 ;;		_WriteNumber
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function ___flmul
  2856  001A                     ___flmul:
  2857  001A                     l1454:	
  2858                           ;incstack = 0
  2859                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2860                           
  2861  001A  1283               	bcf	3,5	;RP0=0, select bank0
  2862  001B  1303               	bcf	3,6	;RP1=0, select bank0
  2863  001C  082D               	movf	___flmul@b+3,w
  2864  001D  3980               	andlw	128
  2865  001E  00B2               	movwf	??___flmul
  2866  001F  0832               	movf	??___flmul,w
  2867  0020  00B7               	movwf	___flmul@sign
  2868  0021                     l1456:
  2869  0021  082D               	movf	___flmul@b+3,w
  2870  0022  00B2               	movwf	??___flmul
  2871  0023  0732               	addwf	??___flmul,w
  2872  0024  00B3               	movwf	??___flmul+1
  2873  0025  0833               	movf	??___flmul+1,w
  2874  0026  00BD               	movwf	___flmul@bexp
  2875  0027                     l1458:
  2876  0027  1FAC               	btfss	___flmul@b+2,7
  2877  0028  282A               	goto	u1281
  2878  0029  282B               	goto	u1280
  2879  002A                     u1281:
  2880  002A  282C               	goto	l1462
  2881  002B                     u1280:
  2882  002B                     l1460:
  2883  002B  143D               	bsf	___flmul@bexp,0
  2884  002C                     l1462:
  2885  002C  083D               	movf	___flmul@bexp,w
  2886  002D  1903               	btfsc	3,2
  2887  002E  2830               	goto	u1291
  2888  002F  2831               	goto	u1290
  2889  0030                     u1291:
  2890  0030  2840               	goto	l1470
  2891  0031                     u1290:
  2892  0031                     l1464:
  2893  0031  0A3D               	incf	___flmul@bexp,w
  2894  0032  1D03               	btfss	3,2
  2895  0033  2835               	goto	u1301
  2896  0034  2836               	goto	u1300
  2897  0035                     u1301:
  2898  0035  283E               	goto	l1468
  2899  0036                     u1300:
  2900  0036                     l1466:
  2901  0036  3000               	movlw	0
  2902  0037  00AD               	movwf	___flmul@b+3
  2903  0038  3000               	movlw	0
  2904  0039  00AC               	movwf	___flmul@b+2
  2905  003A  3000               	movlw	0
  2906  003B  00AB               	movwf	___flmul@b+1
  2907  003C  3000               	movlw	0
  2908  003D  00AA               	movwf	___flmul@b
  2909  003E                     l1468:
  2910  003E  17AC               	bsf	___flmul@b+2,7
  2911  003F  2848               	goto	l1472
  2912  0040                     l1470:
  2913  0040  3000               	movlw	0
  2914  0041  00AD               	movwf	___flmul@b+3
  2915  0042  3000               	movlw	0
  2916  0043  00AC               	movwf	___flmul@b+2
  2917  0044  3000               	movlw	0
  2918  0045  00AB               	movwf	___flmul@b+1
  2919  0046  3000               	movlw	0
  2920  0047  00AA               	movwf	___flmul@b
  2921  0048                     l1472:
  2922  0048  0831               	movf	___flmul@a+3,w
  2923  0049  3980               	andlw	128
  2924  004A  00B2               	movwf	??___flmul
  2925  004B  0832               	movf	??___flmul,w
  2926  004C  06B7               	xorwf	___flmul@sign,f
  2927  004D                     l1474:
  2928  004D  0831               	movf	___flmul@a+3,w
  2929  004E  00B2               	movwf	??___flmul
  2930  004F  0732               	addwf	??___flmul,w
  2931  0050  00B3               	movwf	??___flmul+1
  2932  0051  0833               	movf	??___flmul+1,w
  2933  0052  00BC               	movwf	___flmul@aexp
  2934  0053                     l1476:
  2935  0053  1FB0               	btfss	___flmul@a+2,7
  2936  0054  2856               	goto	u1311
  2937  0055  2857               	goto	u1310
  2938  0056                     u1311:
  2939  0056  2858               	goto	l1480
  2940  0057                     u1310:
  2941  0057                     l1478:
  2942  0057  143C               	bsf	___flmul@aexp,0
  2943  0058                     l1480:
  2944  0058  083C               	movf	___flmul@aexp,w
  2945  0059  1903               	btfsc	3,2
  2946  005A  285C               	goto	u1321
  2947  005B  285D               	goto	u1320
  2948  005C                     u1321:
  2949  005C  286C               	goto	l1488
  2950  005D                     u1320:
  2951  005D                     l1482:
  2952  005D  0A3C               	incf	___flmul@aexp,w
  2953  005E  1D03               	btfss	3,2
  2954  005F  2861               	goto	u1331
  2955  0060  2862               	goto	u1330
  2956  0061                     u1331:
  2957  0061  286A               	goto	l1486
  2958  0062                     u1330:
  2959  0062                     l1484:
  2960  0062  3000               	movlw	0
  2961  0063  00B1               	movwf	___flmul@a+3
  2962  0064  3000               	movlw	0
  2963  0065  00B0               	movwf	___flmul@a+2
  2964  0066  3000               	movlw	0
  2965  0067  00AF               	movwf	___flmul@a+1
  2966  0068  3000               	movlw	0
  2967  0069  00AE               	movwf	___flmul@a
  2968  006A                     l1486:
  2969  006A  17B0               	bsf	___flmul@a+2,7
  2970  006B  2874               	goto	l1490
  2971  006C                     l1488:
  2972  006C  3000               	movlw	0
  2973  006D  00B1               	movwf	___flmul@a+3
  2974  006E  3000               	movlw	0
  2975  006F  00B0               	movwf	___flmul@a+2
  2976  0070  3000               	movlw	0
  2977  0071  00AF               	movwf	___flmul@a+1
  2978  0072  3000               	movlw	0
  2979  0073  00AE               	movwf	___flmul@a
  2980  0074                     l1490:
  2981  0074  083C               	movf	___flmul@aexp,w
  2982  0075  1903               	btfsc	3,2
  2983  0076  2878               	goto	u1341
  2984  0077  2879               	goto	u1340
  2985  0078                     u1341:
  2986  0078  287E               	goto	l1494
  2987  0079                     u1340:
  2988  0079                     l1492:
  2989  0079  083D               	movf	___flmul@bexp,w
  2990  007A  1D03               	btfss	3,2
  2991  007B  287D               	goto	u1351
  2992  007C  287E               	goto	u1350
  2993  007D                     u1351:
  2994  007D  2887               	goto	l1498
  2995  007E                     u1350:
  2996  007E                     l1494:
  2997  007E  3000               	movlw	0
  2998  007F  00AD               	movwf	?___flmul+3
  2999  0080  3000               	movlw	0
  3000  0081  00AC               	movwf	?___flmul+2
  3001  0082  3000               	movlw	0
  3002  0083  00AB               	movwf	?___flmul+1
  3003  0084  3000               	movlw	0
  3004  0085  00AA               	movwf	?___flmul
  3005  0086  2B7A               	goto	l665
  3006  0087                     l1498:
  3007  0087  082A               	movf	___flmul@b,w
  3008  0088  00B2               	movwf	??___flmul
  3009  0089  0832               	movf	??___flmul,w
  3010  008A  00F3               	movwf	__Umul8_16@multiplicand
  3011  008B  0830               	movf	___flmul@a+2,w
  3012  008C  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3013  0091  0874               	movf	?__Umul8_16+1,w
  3014  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0094  00C3               	movwf	___flmul@temp+1
  3017  0095  0873               	movf	?__Umul8_16,w
  3018  0096  00C2               	movwf	___flmul@temp
  3019  0097                     l1500:
  3020  0097  0842               	movf	___flmul@temp,w
  3021  0098  00B2               	movwf	??___flmul
  3022  0099  01B3               	clrf	??___flmul+1
  3023  009A  01B4               	clrf	??___flmul+2
  3024  009B  01B5               	clrf	??___flmul+3
  3025  009C  0835               	movf	??___flmul+3,w
  3026  009D  00BB               	movwf	___flmul@grs+3
  3027  009E  0834               	movf	??___flmul+2,w
  3028  009F  00BA               	movwf	___flmul@grs+2
  3029  00A0  0833               	movf	??___flmul+1,w
  3030  00A1  00B9               	movwf	___flmul@grs+1
  3031  00A2  0832               	movf	??___flmul,w
  3032  00A3  00B8               	movwf	___flmul@grs
  3033  00A4                     l1502:
  3034  00A4  0843               	movf	___flmul@temp+1,w
  3035  00A5  00B2               	movwf	??___flmul
  3036  00A6  01B3               	clrf	??___flmul+1
  3037  00A7  01B4               	clrf	??___flmul+2
  3038  00A8  01B5               	clrf	??___flmul+3
  3039  00A9  0835               	movf	??___flmul+3,w
  3040  00AA  00C1               	movwf	___flmul@prod+3
  3041  00AB  0834               	movf	??___flmul+2,w
  3042  00AC  00C0               	movwf	___flmul@prod+2
  3043  00AD  0833               	movf	??___flmul+1,w
  3044  00AE  00BF               	movwf	___flmul@prod+1
  3045  00AF  0832               	movf	??___flmul,w
  3046  00B0  00BE               	movwf	___flmul@prod
  3047  00B1  082B               	movf	___flmul@b+1,w
  3048  00B2  00B2               	movwf	??___flmul
  3049  00B3  0832               	movf	??___flmul,w
  3050  00B4  00F3               	movwf	__Umul8_16@multiplicand
  3051  00B5  082F               	movf	___flmul@a+1,w
  3052  00B6  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3053  00BB  0874               	movf	?__Umul8_16+1,w
  3054  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3055  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3056  00BE  00C3               	movwf	___flmul@temp+1
  3057  00BF  0873               	movf	?__Umul8_16,w
  3058  00C0  00C2               	movwf	___flmul@temp
  3059  00C1                     l1504:
  3060  00C1  0842               	movf	___flmul@temp,w
  3061  00C2  00B2               	movwf	??___flmul
  3062  00C3  01B3               	clrf	??___flmul+1
  3063  00C4  01B4               	clrf	??___flmul+2
  3064  00C5  01B5               	clrf	??___flmul+3
  3065  00C6  0832               	movf	??___flmul,w
  3066  00C7  07B8               	addwf	___flmul@grs,f
  3067  00C8  0833               	movf	??___flmul+1,w
  3068  00C9  1103               	clrz
  3069  00CA  1803               	skipnc
  3070  00CB  3E01               	addlw	1
  3071  00CC  1903               	skipnz
  3072  00CD  28CF               	goto	u1361
  3073  00CE  07B9               	addwf	___flmul@grs+1,f
  3074  00CF                     u1361:
  3075  00CF  0834               	movf	??___flmul+2,w
  3076  00D0  1103               	clrz
  3077  00D1  1803               	skipnc
  3078  00D2  3E01               	addlw	1
  3079  00D3  1903               	skipnz
  3080  00D4  28D6               	goto	u1362
  3081  00D5  07BA               	addwf	___flmul@grs+2,f
  3082  00D6                     u1362:
  3083  00D6  0835               	movf	??___flmul+3,w
  3084  00D7  1103               	clrz
  3085  00D8  1803               	skipnc
  3086  00D9  3E01               	addlw	1
  3087  00DA  1903               	skipnz
  3088  00DB  28DD               	goto	u1363
  3089  00DC  07BB               	addwf	___flmul@grs+3,f
  3090  00DD                     u1363:
  3091  00DD                     l1506:
  3092  00DD  0843               	movf	___flmul@temp+1,w
  3093  00DE  00B2               	movwf	??___flmul
  3094  00DF  01B3               	clrf	??___flmul+1
  3095  00E0  01B4               	clrf	??___flmul+2
  3096  00E1  01B5               	clrf	??___flmul+3
  3097  00E2  0832               	movf	??___flmul,w
  3098  00E3  07BE               	addwf	___flmul@prod,f
  3099  00E4  0833               	movf	??___flmul+1,w
  3100  00E5  1103               	clrz
  3101  00E6  1803               	skipnc
  3102  00E7  3E01               	addlw	1
  3103  00E8  1903               	skipnz
  3104  00E9  28EB               	goto	u1371
  3105  00EA  07BF               	addwf	___flmul@prod+1,f
  3106  00EB                     u1371:
  3107  00EB  0834               	movf	??___flmul+2,w
  3108  00EC  1103               	clrz
  3109  00ED  1803               	skipnc
  3110  00EE  3E01               	addlw	1
  3111  00EF  1903               	skipnz
  3112  00F0  28F2               	goto	u1372
  3113  00F1  07C0               	addwf	___flmul@prod+2,f
  3114  00F2                     u1372:
  3115  00F2  0835               	movf	??___flmul+3,w
  3116  00F3  1103               	clrz
  3117  00F4  1803               	skipnc
  3118  00F5  3E01               	addlw	1
  3119  00F6  1903               	skipnz
  3120  00F7  28F9               	goto	u1373
  3121  00F8  07C1               	addwf	___flmul@prod+3,f
  3122  00F9                     u1373:
  3123  00F9  082C               	movf	___flmul@b+2,w
  3124  00FA  00B2               	movwf	??___flmul
  3125  00FB  0832               	movf	??___flmul,w
  3126  00FC  00F3               	movwf	__Umul8_16@multiplicand
  3127  00FD  082E               	movf	___flmul@a,w
  3128  00FE  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3129  0103  0874               	movf	?__Umul8_16+1,w
  3130  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0106  00C3               	movwf	___flmul@temp+1
  3133  0107  0873               	movf	?__Umul8_16,w
  3134  0108  00C2               	movwf	___flmul@temp
  3135  0109                     l1508:
  3136  0109  0842               	movf	___flmul@temp,w
  3137  010A  00B2               	movwf	??___flmul
  3138  010B  01B3               	clrf	??___flmul+1
  3139  010C  01B4               	clrf	??___flmul+2
  3140  010D  01B5               	clrf	??___flmul+3
  3141  010E  0832               	movf	??___flmul,w
  3142  010F  07B8               	addwf	___flmul@grs,f
  3143  0110  0833               	movf	??___flmul+1,w
  3144  0111  1103               	clrz
  3145  0112  1803               	skipnc
  3146  0113  3E01               	addlw	1
  3147  0114  1903               	skipnz
  3148  0115  2917               	goto	u1381
  3149  0116  07B9               	addwf	___flmul@grs+1,f
  3150  0117                     u1381:
  3151  0117  0834               	movf	??___flmul+2,w
  3152  0118  1103               	clrz
  3153  0119  1803               	skipnc
  3154  011A  3E01               	addlw	1
  3155  011B  1903               	skipnz
  3156  011C  291E               	goto	u1382
  3157  011D  07BA               	addwf	___flmul@grs+2,f
  3158  011E                     u1382:
  3159  011E  0835               	movf	??___flmul+3,w
  3160  011F  1103               	clrz
  3161  0120  1803               	skipnc
  3162  0121  3E01               	addlw	1
  3163  0122  1903               	skipnz
  3164  0123  2925               	goto	u1383
  3165  0124  07BB               	addwf	___flmul@grs+3,f
  3166  0125                     u1383:
  3167  0125                     l1510:
  3168  0125  0843               	movf	___flmul@temp+1,w
  3169  0126  00B2               	movwf	??___flmul
  3170  0127  01B3               	clrf	??___flmul+1
  3171  0128  01B4               	clrf	??___flmul+2
  3172  0129  01B5               	clrf	??___flmul+3
  3173  012A  0832               	movf	??___flmul,w
  3174  012B  07BE               	addwf	___flmul@prod,f
  3175  012C  0833               	movf	??___flmul+1,w
  3176  012D  1103               	clrz
  3177  012E  1803               	skipnc
  3178  012F  3E01               	addlw	1
  3179  0130  1903               	skipnz
  3180  0131  2933               	goto	u1391
  3181  0132  07BF               	addwf	___flmul@prod+1,f
  3182  0133                     u1391:
  3183  0133  0834               	movf	??___flmul+2,w
  3184  0134  1103               	clrz
  3185  0135  1803               	skipnc
  3186  0136  3E01               	addlw	1
  3187  0137  1903               	skipnz
  3188  0138  293A               	goto	u1392
  3189  0139  07C0               	addwf	___flmul@prod+2,f
  3190  013A                     u1392:
  3191  013A  0835               	movf	??___flmul+3,w
  3192  013B  1103               	clrz
  3193  013C  1803               	skipnc
  3194  013D  3E01               	addlw	1
  3195  013E  1903               	skipnz
  3196  013F  2941               	goto	u1393
  3197  0140  07C1               	addwf	___flmul@prod+3,f
  3198  0141                     u1393:
  3199  0141                     l1512:
  3200  0141  3008               	movlw	8
  3201  0142  00B2               	movwf	??___flmul
  3202  0143                     u1405:
  3203  0143  1003               	clrc
  3204  0144  0DB8               	rlf	___flmul@grs,f
  3205  0145  0DB9               	rlf	___flmul@grs+1,f
  3206  0146  0DBA               	rlf	___flmul@grs+2,f
  3207  0147  0DBB               	rlf	___flmul@grs+3,f
  3208  0148  0BB2               	decfsz	??___flmul,f
  3209  0149  2943               	goto	u1405
  3210  014A                     l1514:
  3211  014A  082B               	movf	___flmul@b+1,w
  3212  014B  00B2               	movwf	??___flmul
  3213  014C  0832               	movf	??___flmul,w
  3214  014D  00F3               	movwf	__Umul8_16@multiplicand
  3215  014E  082E               	movf	___flmul@a,w
  3216  014F  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3217  0154  0874               	movf	?__Umul8_16+1,w
  3218  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0157  00C3               	movwf	___flmul@temp+1
  3221  0158  0873               	movf	?__Umul8_16,w
  3222  0159  00C2               	movwf	___flmul@temp
  3223  015A                     l1516:
  3224  015A  0842               	movf	___flmul@temp,w
  3225  015B  00B2               	movwf	??___flmul
  3226  015C  0843               	movf	___flmul@temp+1,w
  3227  015D  00B3               	movwf	??___flmul+1
  3228  015E  01B4               	clrf	??___flmul+2
  3229  015F  01B5               	clrf	??___flmul+3
  3230  0160  0832               	movf	??___flmul,w
  3231  0161  07B8               	addwf	___flmul@grs,f
  3232  0162  0833               	movf	??___flmul+1,w
  3233  0163  1103               	clrz
  3234  0164  1803               	skipnc
  3235  0165  3E01               	addlw	1
  3236  0166  1903               	skipnz
  3237  0167  2969               	goto	u1411
  3238  0168  07B9               	addwf	___flmul@grs+1,f
  3239  0169                     u1411:
  3240  0169  0834               	movf	??___flmul+2,w
  3241  016A  1103               	clrz
  3242  016B  1803               	skipnc
  3243  016C  3E01               	addlw	1
  3244  016D  1903               	skipnz
  3245  016E  2970               	goto	u1412
  3246  016F  07BA               	addwf	___flmul@grs+2,f
  3247  0170                     u1412:
  3248  0170  0835               	movf	??___flmul+3,w
  3249  0171  1103               	clrz
  3250  0172  1803               	skipnc
  3251  0173  3E01               	addlw	1
  3252  0174  1903               	skipnz
  3253  0175  2977               	goto	u1413
  3254  0176  07BB               	addwf	___flmul@grs+3,f
  3255  0177                     u1413:
  3256  0177                     l1518:
  3257  0177  082A               	movf	___flmul@b,w
  3258  0178  00B2               	movwf	??___flmul
  3259  0179  0832               	movf	??___flmul,w
  3260  017A  00F3               	movwf	__Umul8_16@multiplicand
  3261  017B  082F               	movf	___flmul@a+1,w
  3262  017C  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3263  0181  0874               	movf	?__Umul8_16+1,w
  3264  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0184  00C3               	movwf	___flmul@temp+1
  3267  0185  0873               	movf	?__Umul8_16,w
  3268  0186  00C2               	movwf	___flmul@temp
  3269  0187                     l1520:
  3270  0187  0842               	movf	___flmul@temp,w
  3271  0188  00B2               	movwf	??___flmul
  3272  0189  0843               	movf	___flmul@temp+1,w
  3273  018A  00B3               	movwf	??___flmul+1
  3274  018B  01B4               	clrf	??___flmul+2
  3275  018C  01B5               	clrf	??___flmul+3
  3276  018D  0832               	movf	??___flmul,w
  3277  018E  07B8               	addwf	___flmul@grs,f
  3278  018F  0833               	movf	??___flmul+1,w
  3279  0190  1103               	clrz
  3280  0191  1803               	skipnc
  3281  0192  3E01               	addlw	1
  3282  0193  1903               	skipnz
  3283  0194  2996               	goto	u1421
  3284  0195  07B9               	addwf	___flmul@grs+1,f
  3285  0196                     u1421:
  3286  0196  0834               	movf	??___flmul+2,w
  3287  0197  1103               	clrz
  3288  0198  1803               	skipnc
  3289  0199  3E01               	addlw	1
  3290  019A  1903               	skipnz
  3291  019B  299D               	goto	u1422
  3292  019C  07BA               	addwf	___flmul@grs+2,f
  3293  019D                     u1422:
  3294  019D  0835               	movf	??___flmul+3,w
  3295  019E  1103               	clrz
  3296  019F  1803               	skipnc
  3297  01A0  3E01               	addlw	1
  3298  01A1  1903               	skipnz
  3299  01A2  29A4               	goto	u1423
  3300  01A3  07BB               	addwf	___flmul@grs+3,f
  3301  01A4                     u1423:
  3302  01A4                     l1522:
  3303  01A4  3008               	movlw	8
  3304  01A5  00B2               	movwf	??___flmul
  3305  01A6                     u1435:
  3306  01A6  1003               	clrc
  3307  01A7  0DB8               	rlf	___flmul@grs,f
  3308  01A8  0DB9               	rlf	___flmul@grs+1,f
  3309  01A9  0DBA               	rlf	___flmul@grs+2,f
  3310  01AA  0DBB               	rlf	___flmul@grs+3,f
  3311  01AB  0BB2               	decfsz	??___flmul,f
  3312  01AC  29A6               	goto	u1435
  3313  01AD  082A               	movf	___flmul@b,w
  3314  01AE  00B2               	movwf	??___flmul
  3315  01AF  0832               	movf	??___flmul,w
  3316  01B0  00F3               	movwf	__Umul8_16@multiplicand
  3317  01B1  082E               	movf	___flmul@a,w
  3318  01B2  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3319  01B7  0874               	movf	?__Umul8_16+1,w
  3320  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3321  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3322  01BA  00C3               	movwf	___flmul@temp+1
  3323  01BB  0873               	movf	?__Umul8_16,w
  3324  01BC  00C2               	movwf	___flmul@temp
  3325  01BD                     l1524:
  3326  01BD  0842               	movf	___flmul@temp,w
  3327  01BE  00B2               	movwf	??___flmul
  3328  01BF  0843               	movf	___flmul@temp+1,w
  3329  01C0  00B3               	movwf	??___flmul+1
  3330  01C1  01B4               	clrf	??___flmul+2
  3331  01C2  01B5               	clrf	??___flmul+3
  3332  01C3  0832               	movf	??___flmul,w
  3333  01C4  07B8               	addwf	___flmul@grs,f
  3334  01C5  0833               	movf	??___flmul+1,w
  3335  01C6  1103               	clrz
  3336  01C7  1803               	skipnc
  3337  01C8  3E01               	addlw	1
  3338  01C9  1903               	skipnz
  3339  01CA  29CC               	goto	u1441
  3340  01CB  07B9               	addwf	___flmul@grs+1,f
  3341  01CC                     u1441:
  3342  01CC  0834               	movf	??___flmul+2,w
  3343  01CD  1103               	clrz
  3344  01CE  1803               	skipnc
  3345  01CF  3E01               	addlw	1
  3346  01D0  1903               	skipnz
  3347  01D1  29D3               	goto	u1442
  3348  01D2  07BA               	addwf	___flmul@grs+2,f
  3349  01D3                     u1442:
  3350  01D3  0835               	movf	??___flmul+3,w
  3351  01D4  1103               	clrz
  3352  01D5  1803               	skipnc
  3353  01D6  3E01               	addlw	1
  3354  01D7  1903               	skipnz
  3355  01D8  29DA               	goto	u1443
  3356  01D9  07BB               	addwf	___flmul@grs+3,f
  3357  01DA                     u1443:
  3358  01DA                     l1526:
  3359  01DA  082B               	movf	___flmul@b+1,w
  3360  01DB  00B2               	movwf	??___flmul
  3361  01DC  0832               	movf	??___flmul,w
  3362  01DD  00F3               	movwf	__Umul8_16@multiplicand
  3363  01DE  0830               	movf	___flmul@a+2,w
  3364  01DF  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3365  01E4  0874               	movf	?__Umul8_16+1,w
  3366  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3367  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3368  01E7  00C3               	movwf	___flmul@temp+1
  3369  01E8  0873               	movf	?__Umul8_16,w
  3370  01E9  00C2               	movwf	___flmul@temp
  3371  01EA  0842               	movf	___flmul@temp,w
  3372  01EB  00B2               	movwf	??___flmul
  3373  01EC  0843               	movf	___flmul@temp+1,w
  3374  01ED  00B3               	movwf	??___flmul+1
  3375  01EE  01B4               	clrf	??___flmul+2
  3376  01EF  01B5               	clrf	??___flmul+3
  3377  01F0  0832               	movf	??___flmul,w
  3378  01F1  07BE               	addwf	___flmul@prod,f
  3379  01F2  0833               	movf	??___flmul+1,w
  3380  01F3  1103               	clrz
  3381  01F4  1803               	skipnc
  3382  01F5  3E01               	addlw	1
  3383  01F6  1903               	skipnz
  3384  01F7  29F9               	goto	u1451
  3385  01F8  07BF               	addwf	___flmul@prod+1,f
  3386  01F9                     u1451:
  3387  01F9  0834               	movf	??___flmul+2,w
  3388  01FA  1103               	clrz
  3389  01FB  1803               	skipnc
  3390  01FC  3E01               	addlw	1
  3391  01FD  1903               	skipnz
  3392  01FE  2A00               	goto	u1452
  3393  01FF  07C0               	addwf	___flmul@prod+2,f
  3394  0200                     u1452:
  3395  0200  0835               	movf	??___flmul+3,w
  3396  0201  1103               	clrz
  3397  0202  1803               	skipnc
  3398  0203  3E01               	addlw	1
  3399  0204  1903               	skipnz
  3400  0205  2A07               	goto	u1453
  3401  0206  07C1               	addwf	___flmul@prod+3,f
  3402  0207                     u1453:
  3403  0207                     l1528:
  3404  0207  082C               	movf	___flmul@b+2,w
  3405  0208  00B2               	movwf	??___flmul
  3406  0209  0832               	movf	??___flmul,w
  3407  020A  00F3               	movwf	__Umul8_16@multiplicand
  3408  020B  082F               	movf	___flmul@a+1,w
  3409  020C  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3410  0211  0874               	movf	?__Umul8_16+1,w
  3411  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0214  00C3               	movwf	___flmul@temp+1
  3414  0215  0873               	movf	?__Umul8_16,w
  3415  0216  00C2               	movwf	___flmul@temp
  3416  0217                     l1530:
  3417  0217  0842               	movf	___flmul@temp,w
  3418  0218  00B2               	movwf	??___flmul
  3419  0219  0843               	movf	___flmul@temp+1,w
  3420  021A  00B3               	movwf	??___flmul+1
  3421  021B  01B4               	clrf	??___flmul+2
  3422  021C  01B5               	clrf	??___flmul+3
  3423  021D  0832               	movf	??___flmul,w
  3424  021E  07BE               	addwf	___flmul@prod,f
  3425  021F  0833               	movf	??___flmul+1,w
  3426  0220  1103               	clrz
  3427  0221  1803               	skipnc
  3428  0222  3E01               	addlw	1
  3429  0223  1903               	skipnz
  3430  0224  2A26               	goto	u1461
  3431  0225  07BF               	addwf	___flmul@prod+1,f
  3432  0226                     u1461:
  3433  0226  0834               	movf	??___flmul+2,w
  3434  0227  1103               	clrz
  3435  0228  1803               	skipnc
  3436  0229  3E01               	addlw	1
  3437  022A  1903               	skipnz
  3438  022B  2A2D               	goto	u1462
  3439  022C  07C0               	addwf	___flmul@prod+2,f
  3440  022D                     u1462:
  3441  022D  0835               	movf	??___flmul+3,w
  3442  022E  1103               	clrz
  3443  022F  1803               	skipnc
  3444  0230  3E01               	addlw	1
  3445  0231  1903               	skipnz
  3446  0232  2A34               	goto	u1463
  3447  0233  07C1               	addwf	___flmul@prod+3,f
  3448  0234                     u1463:
  3449  0234  082C               	movf	___flmul@b+2,w
  3450  0235  00B2               	movwf	??___flmul
  3451  0236  0832               	movf	??___flmul,w
  3452  0237  00F3               	movwf	__Umul8_16@multiplicand
  3453  0238  0830               	movf	___flmul@a+2,w
  3454  0239  120A  158A  2766  120A  118A  	fcall	__Umul8_16
  3455  023E  0874               	movf	?__Umul8_16+1,w
  3456  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0241  00C3               	movwf	___flmul@temp+1
  3459  0242  0873               	movf	?__Umul8_16,w
  3460  0243  00C2               	movwf	___flmul@temp
  3461  0244                     l1532:
  3462  0244  0842               	movf	___flmul@temp,w
  3463  0245  00B2               	movwf	??___flmul
  3464  0246  0843               	movf	___flmul@temp+1,w
  3465  0247  00B3               	movwf	??___flmul+1
  3466  0248  01B4               	clrf	??___flmul+2
  3467  0249  01B5               	clrf	??___flmul+3
  3468  024A  3008               	movlw	8
  3469  024B                     u1475:
  3470  024B  1003               	clrc
  3471  024C  0DB2               	rlf	??___flmul,f
  3472  024D  0DB3               	rlf	??___flmul+1,f
  3473  024E  0DB4               	rlf	??___flmul+2,f
  3474  024F  0DB5               	rlf	??___flmul+3,f
  3475  0250                     u1470:
  3476  0250  3EFF               	addlw	-1
  3477  0251  1D03               	skipz
  3478  0252  2A4B               	goto	u1475
  3479  0253  0832               	movf	??___flmul,w
  3480  0254  07BE               	addwf	___flmul@prod,f
  3481  0255  0833               	movf	??___flmul+1,w
  3482  0256  1103               	clrz
  3483  0257  1803               	skipnc
  3484  0258  3E01               	addlw	1
  3485  0259  1903               	skipnz
  3486  025A  2A5C               	goto	u1481
  3487  025B  07BF               	addwf	___flmul@prod+1,f
  3488  025C                     u1481:
  3489  025C  0834               	movf	??___flmul+2,w
  3490  025D  1103               	clrz
  3491  025E  1803               	skipnc
  3492  025F  3E01               	addlw	1
  3493  0260  1903               	skipnz
  3494  0261  2A63               	goto	u1482
  3495  0262  07C0               	addwf	___flmul@prod+2,f
  3496  0263                     u1482:
  3497  0263  0835               	movf	??___flmul+3,w
  3498  0264  1103               	clrz
  3499  0265  1803               	skipnc
  3500  0266  3E01               	addlw	1
  3501  0267  1903               	skipnz
  3502  0268  2A6A               	goto	u1483
  3503  0269  07C1               	addwf	___flmul@prod+3,f
  3504  026A                     u1483:
  3505  026A                     l1534:
  3506  026A  0838               	movf	___flmul@grs,w
  3507  026B  00B2               	movwf	??___flmul
  3508  026C  0839               	movf	___flmul@grs+1,w
  3509  026D  00B3               	movwf	??___flmul+1
  3510  026E  083A               	movf	___flmul@grs+2,w
  3511  026F  00B4               	movwf	??___flmul+2
  3512  0270  083B               	movf	___flmul@grs+3,w
  3513  0271  00B5               	movwf	??___flmul+3
  3514  0272  3018               	movlw	24
  3515  0273                     u1495:
  3516  0273  1003               	clrc
  3517  0274  0CB5               	rrf	??___flmul+3,f
  3518  0275  0CB4               	rrf	??___flmul+2,f
  3519  0276  0CB3               	rrf	??___flmul+1,f
  3520  0277  0CB2               	rrf	??___flmul,f
  3521  0278                     u1490:
  3522  0278  3EFF               	addlw	-1
  3523  0279  1D03               	skipz
  3524  027A  2A73               	goto	u1495
  3525  027B  0832               	movf	??___flmul,w
  3526  027C  07BE               	addwf	___flmul@prod,f
  3527  027D  0833               	movf	??___flmul+1,w
  3528  027E  1103               	clrz
  3529  027F  1803               	skipnc
  3530  0280  3E01               	addlw	1
  3531  0281  1903               	skipnz
  3532  0282  2A84               	goto	u1501
  3533  0283  07BF               	addwf	___flmul@prod+1,f
  3534  0284                     u1501:
  3535  0284  0834               	movf	??___flmul+2,w
  3536  0285  1103               	clrz
  3537  0286  1803               	skipnc
  3538  0287  3E01               	addlw	1
  3539  0288  1903               	skipnz
  3540  0289  2A8B               	goto	u1502
  3541  028A  07C0               	addwf	___flmul@prod+2,f
  3542  028B                     u1502:
  3543  028B  0835               	movf	??___flmul+3,w
  3544  028C  1103               	clrz
  3545  028D  1803               	skipnc
  3546  028E  3E01               	addlw	1
  3547  028F  1903               	skipnz
  3548  0290  2A92               	goto	u1503
  3549  0291  07C1               	addwf	___flmul@prod+3,f
  3550  0292                     u1503:
  3551  0292                     l1536:
  3552  0292  3008               	movlw	8
  3553  0293  00B2               	movwf	??___flmul
  3554  0294                     u1515:
  3555  0294  1003               	clrc
  3556  0295  0DB8               	rlf	___flmul@grs,f
  3557  0296  0DB9               	rlf	___flmul@grs+1,f
  3558  0297  0DBA               	rlf	___flmul@grs+2,f
  3559  0298  0DBB               	rlf	___flmul@grs+3,f
  3560  0299  0BB2               	decfsz	??___flmul,f
  3561  029A  2A94               	goto	u1515
  3562  029B                     l1538:
  3563  029B  083D               	movf	___flmul@bexp,w
  3564  029C  073C               	addwf	___flmul@aexp,w
  3565  029D  00B2               	movwf	??___flmul
  3566  029E  01B3               	clrf	??___flmul+1
  3567  029F  0DB3               	rlf	??___flmul+1,f
  3568  02A0  0832               	movf	??___flmul,w
  3569  02A1  3E82               	addlw	130
  3570  02A2  00C2               	movwf	___flmul@temp
  3571  02A3  0833               	movf	??___flmul+1,w
  3572  02A4  1803               	skipnc
  3573  02A5  3E01               	addlw	1
  3574  02A6  3EFF               	addlw	255
  3575  02A7  00C3               	movwf	___flmul@temp+1
  3576  02A8  2AC6               	goto	l1550
  3577  02A9                     l1540:
  3578  02A9  3001               	movlw	1
  3579  02AA  00B2               	movwf	??___flmul
  3580  02AB                     u1525:
  3581  02AB  1003               	clrc
  3582  02AC  0DBE               	rlf	___flmul@prod,f
  3583  02AD  0DBF               	rlf	___flmul@prod+1,f
  3584  02AE  0DC0               	rlf	___flmul@prod+2,f
  3585  02AF  0DC1               	rlf	___flmul@prod+3,f
  3586  02B0  0BB2               	decfsz	??___flmul,f
  3587  02B1  2AAB               	goto	u1525
  3588  02B2                     l1542:
  3589  02B2  1FBB               	btfss	___flmul@grs+3,7
  3590  02B3  2AB5               	goto	u1531
  3591  02B4  2AB6               	goto	u1530
  3592  02B5                     u1531:
  3593  02B5  2AB7               	goto	l1546
  3594  02B6                     u1530:
  3595  02B6                     l1544:
  3596  02B6  143E               	bsf	___flmul@prod,0
  3597  02B7                     l1546:
  3598  02B7  3001               	movlw	1
  3599  02B8  00B2               	movwf	??___flmul
  3600  02B9                     u1545:
  3601  02B9  1003               	clrc
  3602  02BA  0DB8               	rlf	___flmul@grs,f
  3603  02BB  0DB9               	rlf	___flmul@grs+1,f
  3604  02BC  0DBA               	rlf	___flmul@grs+2,f
  3605  02BD  0DBB               	rlf	___flmul@grs+3,f
  3606  02BE  0BB2               	decfsz	??___flmul,f
  3607  02BF  2AB9               	goto	u1545
  3608  02C0                     l1548:
  3609  02C0  30FF               	movlw	255
  3610  02C1  07C2               	addwf	___flmul@temp,f
  3611  02C2  1803               	skipnc
  3612  02C3  0AC3               	incf	___flmul@temp+1,f
  3613  02C4  30FF               	movlw	255
  3614  02C5  07C3               	addwf	___flmul@temp+1,f
  3615  02C6                     l1550:
  3616  02C6  1FC0               	btfss	___flmul@prod+2,7
  3617  02C7  2AC9               	goto	u1551
  3618  02C8  2ACA               	goto	u1550
  3619  02C9                     u1551:
  3620  02C9  2AA9               	goto	l1540
  3621  02CA                     u1550:
  3622  02CA                     l1552:
  3623  02CA  01BC               	clrf	___flmul@aexp
  3624  02CB                     l1554:
  3625  02CB  1FBB               	btfss	___flmul@grs+3,7
  3626  02CC  2ACE               	goto	u1561
  3627  02CD  2ACF               	goto	u1560
  3628  02CE                     u1561:
  3629  02CE  2AEB               	goto	l1562
  3630  02CF                     u1560:
  3631  02CF                     l1556:
  3632  02CF  30FF               	movlw	255
  3633  02D0  0538               	andwf	___flmul@grs,w
  3634  02D1  00B2               	movwf	??___flmul
  3635  02D2  30FF               	movlw	255
  3636  02D3  0539               	andwf	___flmul@grs+1,w
  3637  02D4  00B3               	movwf	??___flmul+1
  3638  02D5  30FF               	movlw	255
  3639  02D6  053A               	andwf	___flmul@grs+2,w
  3640  02D7  00B4               	movwf	??___flmul+2
  3641  02D8  307F               	movlw	127
  3642  02D9  053B               	andwf	___flmul@grs+3,w
  3643  02DA  00B5               	movwf	??___flmul+3
  3644  02DB  0835               	movf	??___flmul+3,w
  3645  02DC  0434               	iorwf	??___flmul+2,w
  3646  02DD  0433               	iorwf	??___flmul+1,w
  3647  02DE  0432               	iorwf	??___flmul,w
  3648  02DF  1903               	skipnz
  3649  02E0  2AE2               	goto	u1571
  3650  02E1  2AE3               	goto	u1570
  3651  02E2                     u1571:
  3652  02E2  2AE6               	goto	l671
  3653  02E3                     u1570:
  3654  02E3                     l1558:
  3655  02E3  01BC               	clrf	___flmul@aexp
  3656  02E4  0ABC               	incf	___flmul@aexp,f
  3657  02E5  2AEB               	goto	l1562
  3658  02E6                     l671:
  3659  02E6  1C3E               	btfss	___flmul@prod,0
  3660  02E7  2AE9               	goto	u1581
  3661  02E8  2AEA               	goto	u1580
  3662  02E9                     u1581:
  3663  02E9  2AEB               	goto	l1562
  3664  02EA                     u1580:
  3665  02EA  2AE3               	goto	l1558
  3666  02EB                     l1562:
  3667  02EB  083C               	movf	___flmul@aexp,w
  3668  02EC  1903               	btfsc	3,2
  3669  02ED  2AEF               	goto	u1591
  3670  02EE  2AF0               	goto	u1590
  3671  02EF                     u1591:
  3672  02EF  2B21               	goto	l1572
  3673  02F0                     u1590:
  3674  02F0                     l1564:
  3675  02F0  3001               	movlw	1
  3676  02F1  07BE               	addwf	___flmul@prod,f
  3677  02F2  3000               	movlw	0
  3678  02F3  1803               	skipnc
  3679  02F4  3001               	movlw	1
  3680  02F5  07BF               	addwf	___flmul@prod+1,f
  3681  02F6  3000               	movlw	0
  3682  02F7  1803               	skipnc
  3683  02F8  3001               	movlw	1
  3684  02F9  07C0               	addwf	___flmul@prod+2,f
  3685  02FA  3000               	movlw	0
  3686  02FB  1803               	skipnc
  3687  02FC  3001               	movlw	1
  3688  02FD  07C1               	addwf	___flmul@prod+3,f
  3689  02FE                     l1566:
  3690  02FE  1C41               	btfss	___flmul@prod+3,0
  3691  02FF  2B01               	goto	u1601
  3692  0300  2B02               	goto	u1600
  3693  0301                     u1601:
  3694  0301  2B21               	goto	l1572
  3695  0302                     u1600:
  3696  0302                     l1568:
  3697  0302  083E               	movf	___flmul@prod,w
  3698  0303  00B2               	movwf	??___flmul
  3699  0304  083F               	movf	___flmul@prod+1,w
  3700  0305  00B3               	movwf	??___flmul+1
  3701  0306  0840               	movf	___flmul@prod+2,w
  3702  0307  00B4               	movwf	??___flmul+2
  3703  0308  0841               	movf	___flmul@prod+3,w
  3704  0309  00B5               	movwf	??___flmul+3
  3705  030A  3001               	movlw	1
  3706  030B  00B6               	movwf	??___flmul+4
  3707  030C                     u1615:
  3708  030C  0D35               	rlf	??___flmul+3,w
  3709  030D  0CB5               	rrf	??___flmul+3,f
  3710  030E  0CB4               	rrf	??___flmul+2,f
  3711  030F  0CB3               	rrf	??___flmul+1,f
  3712  0310  0CB2               	rrf	??___flmul,f
  3713  0311                     u1610:
  3714  0311  0BB6               	decfsz	??___flmul+4,f
  3715  0312  2B0C               	goto	u1615
  3716  0313  0835               	movf	??___flmul+3,w
  3717  0314  00C1               	movwf	___flmul@prod+3
  3718  0315  0834               	movf	??___flmul+2,w
  3719  0316  00C0               	movwf	___flmul@prod+2
  3720  0317  0833               	movf	??___flmul+1,w
  3721  0318  00BF               	movwf	___flmul@prod+1
  3722  0319  0832               	movf	??___flmul,w
  3723  031A  00BE               	movwf	___flmul@prod
  3724  031B                     l1570:
  3725  031B  3001               	movlw	1
  3726  031C  07C2               	addwf	___flmul@temp,f
  3727  031D  1803               	skipnc
  3728  031E  0AC3               	incf	___flmul@temp+1,f
  3729  031F  3000               	movlw	0
  3730  0320  07C3               	addwf	___flmul@temp+1,f
  3731  0321                     l1572:
  3732  0321  0843               	movf	___flmul@temp+1,w
  3733  0322  3A80               	xorlw	128
  3734  0323  00FF               	movwf	btemp+1
  3735  0324  3080               	movlw	128
  3736  0325  027F               	subwf	btemp+1,w
  3737  0326  1D03               	skipz
  3738  0327  2B2A               	goto	u1625
  3739  0328  30FF               	movlw	255
  3740  0329  0242               	subwf	___flmul@temp,w
  3741  032A                     u1625:
  3742  032A  1C03               	skipc
  3743  032B  2B2D               	goto	u1621
  3744  032C  2B2E               	goto	u1620
  3745  032D                     u1621:
  3746  032D  2B39               	goto	l1576
  3747  032E                     u1620:
  3748  032E                     l1574:
  3749  032E  307F               	movlw	127
  3750  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0331  00C1               	movwf	___flmul@prod+3
  3753  0332  3080               	movlw	128
  3754  0333  00C0               	movwf	___flmul@prod+2
  3755  0334  3000               	movlw	0
  3756  0335  00BF               	movwf	___flmul@prod+1
  3757  0336  3000               	movlw	0
  3758  0337  00BE               	movwf	___flmul@prod
  3759  0338  2B6E               	goto	l677
  3760  0339                     l1576:
  3761  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3762  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3763  033B  0843               	movf	___flmul@temp+1,w
  3764  033C  3A80               	xorlw	128
  3765  033D  00FF               	movwf	btemp+1
  3766  033E  3080               	movlw	128
  3767  033F  027F               	subwf	btemp+1,w
  3768  0340  1D03               	skipz
  3769  0341  2B44               	goto	u1635
  3770  0342  3001               	movlw	1
  3771  0343  0242               	subwf	___flmul@temp,w
  3772  0344                     u1635:
  3773  0344  1803               	skipnc
  3774  0345  2B47               	goto	u1631
  3775  0346  2B48               	goto	u1630
  3776  0347                     u1631:
  3777  0347  2B54               	goto	l1582
  3778  0348                     u1630:
  3779  0348                     l1578:
  3780  0348  3000               	movlw	0
  3781  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3782  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3783  034B  00C1               	movwf	___flmul@prod+3
  3784  034C  3000               	movlw	0
  3785  034D  00C0               	movwf	___flmul@prod+2
  3786  034E  3000               	movlw	0
  3787  034F  00BF               	movwf	___flmul@prod+1
  3788  0350  3000               	movlw	0
  3789  0351  00BE               	movwf	___flmul@prod
  3790  0352                     l1580:
  3791  0352  01B7               	clrf	___flmul@sign
  3792  0353  2B6E               	goto	l677
  3793  0354                     l1582:
  3794  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0356  0842               	movf	___flmul@temp,w
  3797  0357  00B2               	movwf	??___flmul
  3798  0358  0832               	movf	??___flmul,w
  3799  0359  00BD               	movwf	___flmul@bexp
  3800  035A  30FF               	movlw	255
  3801  035B  05BE               	andwf	___flmul@prod,f
  3802  035C  30FF               	movlw	255
  3803  035D  05BF               	andwf	___flmul@prod+1,f
  3804  035E  307F               	movlw	127
  3805  035F  05C0               	andwf	___flmul@prod+2,f
  3806  0360  3000               	movlw	0
  3807  0361  05C1               	andwf	___flmul@prod+3,f
  3808  0362                     l1584:
  3809  0362  1C3D               	btfss	___flmul@bexp,0
  3810  0363  2B65               	goto	u1641
  3811  0364  2B66               	goto	u1640
  3812  0365                     u1641:
  3813  0365  2B67               	goto	l1588
  3814  0366                     u1640:
  3815  0366                     l1586:
  3816  0366  17C0               	bsf	___flmul@prod+2,7
  3817  0367                     l1588:
  3818  0367  083D               	movf	___flmul@bexp,w
  3819  0368  00B2               	movwf	??___flmul
  3820  0369  1003               	clrc
  3821  036A  0C32               	rrf	??___flmul,w
  3822  036B  00B3               	movwf	??___flmul+1
  3823  036C  0833               	movf	??___flmul+1,w
  3824  036D  00C1               	movwf	___flmul@prod+3
  3825  036E                     l677:
  3826  036E  0837               	movf	___flmul@sign,w
  3827  036F  00B2               	movwf	??___flmul
  3828  0370  0832               	movf	??___flmul,w
  3829  0371  04C1               	iorwf	___flmul@prod+3,f
  3830  0372                     l1590:
  3831  0372  0841               	movf	___flmul@prod+3,w
  3832  0373  00AD               	movwf	?___flmul+3
  3833  0374  0840               	movf	___flmul@prod+2,w
  3834  0375  00AC               	movwf	?___flmul+2
  3835  0376  083F               	movf	___flmul@prod+1,w
  3836  0377  00AB               	movwf	?___flmul+1
  3837  0378  083E               	movf	___flmul@prod,w
  3838  0379  00AA               	movwf	?___flmul
  3839  037A                     l665:
  3840  037A  0008               	return
  3841  037B                     __end_of___flmul:
  3842                           
  3843                           	psect	text12
  3844  0F66                     __ptext12:	
  3845 ;; *************** function __Umul8_16 *****************
  3846 ;; Defined at:
  3847 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  multiplier      1    wreg     unsigned char 
  3850 ;;  multiplicand    1    3[COMMON] unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3853 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3854 ;;  product         2    0[BANK0 ] unsigned int 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  2    3[COMMON] unsigned int 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         2       0       0       0       0
  3865 ;;      Locals:         0       5       0       0       0
  3866 ;;      Temps:          2       0       0       0       0
  3867 ;;      Totals:         4       5       0       0       0
  3868 ;;Total ram usage:        9 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    2
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		___flmul
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           
  3879                           ;psect for function __Umul8_16
  3880  0F66                     __Umul8_16:
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3884                           ;__Umul8_16@multiplier stored from wreg
  3885  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0F68  00A4               	movwf	__Umul8_16@multiplier
  3888  0F69                     l1338:
  3889  0F69  01A0               	clrf	__Umul8_16@product
  3890  0F6A  01A1               	clrf	__Umul8_16@product+1
  3891  0F6B                     l1340:
  3892  0F6B  0873               	movf	__Umul8_16@multiplicand,w
  3893  0F6C  00F5               	movwf	??__Umul8_16
  3894  0F6D  01F6               	clrf	??__Umul8_16+1
  3895  0F6E  0875               	movf	??__Umul8_16,w
  3896  0F6F  00A2               	movwf	__Umul8_16@word_mpld
  3897  0F70  0876               	movf	??__Umul8_16+1,w
  3898  0F71  00A3               	movwf	__Umul8_16@word_mpld+1
  3899  0F72                     l1342:
  3900  0F72  1C24               	btfss	__Umul8_16@multiplier,0
  3901  0F73  2F75               	goto	u1001
  3902  0F74  2F76               	goto	u1000
  3903  0F75                     u1001:
  3904  0F75  2F7C               	goto	l684
  3905  0F76                     u1000:
  3906  0F76                     l1344:
  3907  0F76  0822               	movf	__Umul8_16@word_mpld,w
  3908  0F77  07A0               	addwf	__Umul8_16@product,f
  3909  0F78  1803               	skipnc
  3910  0F79  0AA1               	incf	__Umul8_16@product+1,f
  3911  0F7A  0823               	movf	__Umul8_16@word_mpld+1,w
  3912  0F7B  07A1               	addwf	__Umul8_16@product+1,f
  3913  0F7C                     l684:
  3914  0F7C  3001               	movlw	1
  3915  0F7D                     u1015:
  3916  0F7D  1003               	clrc
  3917  0F7E  0DA2               	rlf	__Umul8_16@word_mpld,f
  3918  0F7F  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3919  0F80  3EFF               	addlw	-1
  3920  0F81  1D03               	skipz
  3921  0F82  2F7D               	goto	u1015
  3922  0F83  1003               	clrc
  3923  0F84  0CA4               	rrf	__Umul8_16@multiplier,f
  3924  0F85                     l1346:
  3925  0F85  0824               	movf	__Umul8_16@multiplier,w
  3926  0F86  1D03               	btfss	3,2
  3927  0F87  2F89               	goto	u1021
  3928  0F88  2F8A               	goto	u1020
  3929  0F89                     u1021:
  3930  0F89  2F72               	goto	l1342
  3931  0F8A                     u1020:
  3932  0F8A                     l1348:
  3933  0F8A  0821               	movf	__Umul8_16@product+1,w
  3934  0F8B  00F4               	movwf	?__Umul8_16+1
  3935  0F8C  0820               	movf	__Umul8_16@product,w
  3936  0F8D  00F3               	movwf	?__Umul8_16
  3937  0F8E                     l686:
  3938  0F8E  0008               	return
  3939  0F8F                     __end_of__Umul8_16:
  3940                           
  3941                           	psect	text13
  3942  0F3D                     __ptext13:	
  3943 ;; *************** function _Lcd_Write_String *****************
  3944 ;; Defined at:
  3945 ;;		line 54 in file "LCD8.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  a               1    wreg     PTR unsigned char 
  3948 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  3949 ;;		 -> STR_1(17), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3952 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  3953 ;;		 -> STR_1(17), 
  3954 ;;  i               2    0[BANK0 ] int 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       0       0       0       0
  3965 ;;      Locals:         0       3       0       0       0
  3966 ;;      Temps:          0       0       0       0       0
  3967 ;;      Totals:         0       3       0       0       0
  3968 ;;Total ram usage:        3 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    4
  3971 ;; This function calls:
  3972 ;;		_Lcd_Write_Char
  3973 ;; This function is called by:
  3974 ;;		_main
  3975 ;;		_WriteNumber
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function _Lcd_Write_String
  3981  0F3D                     _Lcd_Write_String:
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3985                           ;Lcd_Write_String@a stored from wreg
  3986  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0F3F  00A2               	movwf	Lcd_Write_String@a
  3989  0F40                     l1854:
  3990                           
  3991                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  3992  0F40  01A0               	clrf	Lcd_Write_String@i
  3993  0F41  01A1               	clrf	Lcd_Write_String@i+1
  3994  0F42  2F58               	goto	l1860
  3995  0F43                     l1856:
  3996                           
  3997                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  3998  0F43  0820               	movf	Lcd_Write_String@i,w
  3999  0F44  0722               	addwf	Lcd_Write_String@a,w
  4000  0F45  0084               	movwf	4
  4001  0F46  120A  158A  2000  120A  158A  	fcall	stringdir
  4002  0F4B  120A  158A  269D  120A  158A  	fcall	_Lcd_Write_Char
  4003  0F50                     l1858:
  4004  0F50  3001               	movlw	1
  4005  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  4006  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  4007  0F53  07A0               	addwf	Lcd_Write_String@i,f
  4008  0F54  1803               	skipnc
  4009  0F55  0AA1               	incf	Lcd_Write_String@i+1,f
  4010  0F56  3000               	movlw	0
  4011  0F57  07A1               	addwf	Lcd_Write_String@i+1,f
  4012  0F58                     l1860:
  4013  0F58  0820               	movf	Lcd_Write_String@i,w
  4014  0F59  0722               	addwf	Lcd_Write_String@a,w
  4015  0F5A  0084               	movwf	4
  4016  0F5B  120A  158A  2000  120A  158A  	fcall	stringdir
  4017  0F60  3A00               	xorlw	0
  4018  0F61  1D03               	skipz
  4019  0F62  2F64               	goto	u2001
  4020  0F63  2F65               	goto	u2000
  4021  0F64                     u2001:
  4022  0F64  2F43               	goto	l1856
  4023  0F65                     u2000:
  4024  0F65                     l124:
  4025  0F65  0008               	return
  4026  0F66                     __end_of_Lcd_Write_String:
  4027                           
  4028                           	psect	text14
  4029  0E9D                     __ptext14:	
  4030 ;; *************** function _Lcd_Write_Char *****************
  4031 ;; Defined at:
  4032 ;;		line 46 in file "LCD8.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  a               1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  a               1    5[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0
  4048 ;;      Temps:          1       0       0       0       0
  4049 ;;      Totals:         2       0       0       0       0
  4050 ;;Total ram usage:        2 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    3
  4053 ;; This function calls:
  4054 ;;		_Lcd_Port
  4055 ;; This function is called by:
  4056 ;;		_WriteNumber
  4057 ;;		_Lcd_Write_String
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _Lcd_Write_Char
  4063  0E9D                     _Lcd_Write_Char:
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4067                           ;Lcd_Write_Char@a stored from wreg
  4068  0E9D  00F5               	movwf	Lcd_Write_Char@a
  4069  0E9E                     l1826:
  4070                           
  4071                           ;LCD8.c: 47:     RA4 = 1;
  4072  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0EA0  1605               	bsf	5,4	;volatile
  4075  0EA1                     l1828:
  4076                           
  4077                           ;LCD8.c: 48:     Lcd_Port(a);
  4078  0EA1  0875               	movf	Lcd_Write_Char@a,w
  4079  0EA2  120A  158A  266F  120A  158A  	fcall	_Lcd_Port
  4080  0EA7                     l1830:
  4081                           
  4082                           ;LCD8.c: 49:     RA5 = 1;
  4083  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0EA9  1685               	bsf	5,5	;volatile
  4086  0EAA                     l1832:
  4087                           
  4088                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4089  0EAA  301A               	movlw	26
  4090  0EAB  00F4               	movwf	??_Lcd_Write_Char
  4091  0EAC                     u2487:
  4092  0EAC  0BF4               	decfsz	??_Lcd_Write_Char,f
  4093  0EAD  2EAC               	goto	u2487
  4094  0EAE  0000               	nop
  4095  0EAF                     l1834:
  4096                           
  4097                           ;LCD8.c: 51:     RA5 = 0;
  4098  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0EB1  1285               	bcf	5,5	;volatile
  4101  0EB2                     l118:
  4102  0EB2  0008               	return
  4103  0EB3                     __end_of_Lcd_Write_Char:
  4104                           
  4105                           	psect	text15
  4106  0F00                     __ptext15:	
  4107 ;; *************** function _Lcd_Set_Cursor *****************
  4108 ;; Defined at:
  4109 ;;		line 21 in file "LCD8.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  a               1    wreg     unsigned char 
  4112 ;;  b               1    7[COMMON] unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  a               1    0[BANK0 ] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         1       0       0       0       0
  4125 ;;      Locals:         0       1       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         1       1       0       0       0
  4128 ;;Total ram usage:        2 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    4
  4131 ;; This function calls:
  4132 ;;		_Lcd_Cmd
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;;		_WriteNumber
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function _Lcd_Set_Cursor
  4141  0F00                     _Lcd_Set_Cursor:
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4145                           ;Lcd_Set_Cursor@a stored from wreg
  4146  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0F02  00A0               	movwf	Lcd_Set_Cursor@a
  4149  0F03                     l1846:
  4150                           
  4151                           ;LCD8.c: 22:     if (a == 1) {
  4152  0F03  0320               	decf	Lcd_Set_Cursor@a,w
  4153  0F04  1D03               	btfss	3,2
  4154  0F05  2F07               	goto	u1981
  4155  0F06  2F08               	goto	u1980
  4156  0F07                     u1981:
  4157  0F07  2F10               	goto	l1850
  4158  0F08                     u1980:
  4159  0F08                     l1848:
  4160                           
  4161                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  4162  0F08  0877               	movf	Lcd_Set_Cursor@b,w
  4163  0F09  3E7F               	addlw	127
  4164  0F0A  120A  158A  26C9  120A  158A  	fcall	_Lcd_Cmd
  4165                           
  4166                           ;LCD8.c: 24:     } else if (a == 2) {
  4167  0F0F  2F1D               	goto	l112
  4168  0F10                     l1850:
  4169  0F10  3002               	movlw	2
  4170  0F11  0620               	xorwf	Lcd_Set_Cursor@a,w
  4171  0F12  1D03               	btfss	3,2
  4172  0F13  2F15               	goto	u1991
  4173  0F14  2F16               	goto	u1990
  4174  0F15                     u1991:
  4175  0F15  2F1D               	goto	l112
  4176  0F16                     u1990:
  4177  0F16                     l1852:
  4178                           
  4179                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  4180  0F16  0877               	movf	Lcd_Set_Cursor@b,w
  4181  0F17  3EBF               	addlw	191
  4182  0F18  120A  158A  26C9  120A  158A  	fcall	_Lcd_Cmd
  4183  0F1D                     l112:
  4184  0F1D  0008               	return
  4185  0F1E                     __end_of_Lcd_Set_Cursor:
  4186                           
  4187                           	psect	text16
  4188  0798                     __ptext16:	
  4189 ;; *************** function _Lcd_Init *****************
  4190 ;; Defined at:
  4191 ;;		line 29 in file "LCD8.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0
  4207 ;;      Temps:          0       2       0       0       0
  4208 ;;      Totals:         0       2       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    4
  4212 ;; This function calls:
  4213 ;;		_Lcd_Cmd
  4214 ;;		_Lcd_Port
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function _Lcd_Init
  4222  0798                     _Lcd_Init:
  4223  0798                     l1946:	
  4224                           ;incstack = 0
  4225                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4226                           
  4227                           
  4228                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4229  0798  3027               	movlw	39
  4230  0799  1283               	bcf	3,5	;RP0=0, select bank0
  4231  079A  1303               	bcf	3,6	;RP1=0, select bank0
  4232  079B  00A1               	movwf	??_Lcd_Init+1
  4233  079C  30F4               	movlw	244
  4234  079D  00A0               	movwf	??_Lcd_Init
  4235  079E                     u2497:
  4236  079E  0BA0               	decfsz	??_Lcd_Init,f
  4237  079F  2F9E               	goto	u2497
  4238  07A0  0BA1               	decfsz	??_Lcd_Init+1,f
  4239  07A1  2F9E               	goto	u2497
  4240  07A2  0000               	nop
  4241  07A3                     l1948:
  4242                           
  4243                           ;LCD8.c: 31:     Lcd_Port(0x00);
  4244  07A3  3000               	movlw	0
  4245  07A4  120A  158A  266F  120A  118A  	fcall	_Lcd_Port
  4246  07A9                     l1950:
  4247                           
  4248                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4249  07A9  3034               	movlw	52
  4250  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4251  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4252  07AC  00A1               	movwf	??_Lcd_Init+1
  4253  07AD  30F1               	movlw	241
  4254  07AE  00A0               	movwf	??_Lcd_Init
  4255  07AF                     u2507:
  4256  07AF  0BA0               	decfsz	??_Lcd_Init,f
  4257  07B0  2FAF               	goto	u2507
  4258  07B1  0BA1               	decfsz	??_Lcd_Init+1,f
  4259  07B2  2FAF               	goto	u2507
  4260                           
  4261                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  4262  07B3  3030               	movlw	48
  4263  07B4  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4264  07B9                     l1952:
  4265                           
  4266                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4267  07B9  300D               	movlw	13
  4268  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4269  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4270  07BC  00A1               	movwf	??_Lcd_Init+1
  4271  07BD  30FB               	movlw	251
  4272  07BE  00A0               	movwf	??_Lcd_Init
  4273  07BF                     u2517:
  4274  07BF  0BA0               	decfsz	??_Lcd_Init,f
  4275  07C0  2FBF               	goto	u2517
  4276  07C1  0BA1               	decfsz	??_Lcd_Init+1,f
  4277  07C2  2FBF               	goto	u2517
  4278  07C3                     l1954:
  4279                           
  4280                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  4281  07C3  3030               	movlw	48
  4282  07C4  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4283                           
  4284                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  4285  07C9  3069               	movlw	105
  4286  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4287  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4288  07CC  00A0               	movwf	??_Lcd_Init
  4289  07CD                     u2527:
  4290  07CD  0BA0               	decfsz	??_Lcd_Init,f
  4291  07CE  2FCD               	goto	u2527
  4292  07CF  2FD0               	nop2
  4293  07D0                     l1956:
  4294                           
  4295                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  4296  07D0  3030               	movlw	48
  4297  07D1  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4298  07D6                     l1958:
  4299                           
  4300                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  4301  07D6  3038               	movlw	56
  4302  07D7  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4303  07DC                     l1960:
  4304                           
  4305                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  4306  07DC  3010               	movlw	16
  4307  07DD  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4308  07E2                     l1962:
  4309                           
  4310                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  4311  07E2  3001               	movlw	1
  4312  07E3  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4313  07E8                     l1964:
  4314                           
  4315                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  4316  07E8  3006               	movlw	6
  4317  07E9  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4318  07EE                     l1966:
  4319                           
  4320                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  4321  07EE  300C               	movlw	12
  4322  07EF  120A  158A  26C9  120A  118A  	fcall	_Lcd_Cmd
  4323  07F4                     l115:
  4324  07F4  0008               	return
  4325  07F5                     __end_of_Lcd_Init:
  4326                           
  4327                           	psect	text17
  4328  0E82                     __ptext17:	
  4329 ;; *************** function _Lcd_Clear *****************
  4330 ;; Defined at:
  4331 ;;		line 16 in file "LCD8.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0
  4348 ;;      Totals:         0       0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    4
  4352 ;; This function calls:
  4353 ;;		_Lcd_Cmd
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _Lcd_Clear
  4361  0E82                     _Lcd_Clear:
  4362  0E82                     l1968:	
  4363                           ;incstack = 0
  4364                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4365                           
  4366                           
  4367                           ;LCD8.c: 17:     Lcd_Cmd(0);
  4368  0E82  3000               	movlw	0
  4369  0E83  120A  158A  26C9  120A  158A  	fcall	_Lcd_Cmd
  4370                           
  4371                           ;LCD8.c: 18:     Lcd_Cmd(1);
  4372  0E88  3001               	movlw	1
  4373  0E89  120A  158A  26C9  120A  158A  	fcall	_Lcd_Cmd
  4374  0E8E                     l106:
  4375  0E8E  0008               	return
  4376  0E8F                     __end_of_Lcd_Clear:
  4377                           
  4378                           	psect	text18
  4379  0EC9                     __ptext18:	
  4380 ;; *************** function _Lcd_Cmd *****************
  4381 ;; Defined at:
  4382 ;;		line 8 in file "LCD8.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  a               1    wreg     unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  a               1    6[COMMON] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0
  4398 ;;      Temps:          2       0       0       0       0
  4399 ;;      Totals:         3       0       0       0       0
  4400 ;;Total ram usage:        3 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    3
  4403 ;; This function calls:
  4404 ;;		_Lcd_Port
  4405 ;; This function is called by:
  4406 ;;		_Lcd_Clear
  4407 ;;		_Lcd_Set_Cursor
  4408 ;;		_Lcd_Init
  4409 ;;		_Lcd_Shift_Right
  4410 ;;		_Lcd_Shift_Left
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _Lcd_Cmd
  4416  0EC9                     _Lcd_Cmd:
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4420                           ;Lcd_Cmd@a stored from wreg
  4421  0EC9  00F6               	movwf	Lcd_Cmd@a
  4422  0ECA                     l1836:
  4423                           
  4424                           ;LCD8.c: 9:     RA4 = 0;
  4425  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0ECC  1205               	bcf	5,4	;volatile
  4428  0ECD                     l1838:
  4429                           
  4430                           ;LCD8.c: 10:     Lcd_Port(a);
  4431  0ECD  0876               	movf	Lcd_Cmd@a,w
  4432  0ECE  120A  158A  266F  120A  158A  	fcall	_Lcd_Port
  4433  0ED3                     l1840:
  4434                           
  4435                           ;LCD8.c: 11:     RA5 = 1;
  4436  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0ED5  1685               	bsf	5,5	;volatile
  4439  0ED6                     l1842:
  4440                           
  4441                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4442  0ED6  300B               	movlw	11
  4443  0ED7  00F5               	movwf	??_Lcd_Cmd+1
  4444  0ED8  3062               	movlw	98
  4445  0ED9  00F4               	movwf	??_Lcd_Cmd
  4446  0EDA                     u2537:
  4447  0EDA  0BF4               	decfsz	??_Lcd_Cmd,f
  4448  0EDB  2EDA               	goto	u2537
  4449  0EDC  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4450  0EDD  2EDA               	goto	u2537
  4451  0EDE  0000               	nop
  4452  0EDF                     l1844:
  4453                           
  4454                           ;LCD8.c: 13:     RA5 = 0;
  4455  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0EE1  1285               	bcf	5,5	;volatile
  4458  0EE2                     l103:
  4459  0EE2  0008               	return
  4460  0EE3                     __end_of_Lcd_Cmd:
  4461                           
  4462                           	psect	text19
  4463  0E6F                     __ptext19:	
  4464 ;; *************** function _Lcd_Port *****************
  4465 ;; Defined at:
  4466 ;;		line 4 in file "LCD8.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  a               1    wreg     unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  a               1    3[COMMON] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       0       0       0       0
  4481 ;;      Locals:         1       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         1       0       0       0       0
  4484 ;;Total ram usage:        1 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    2
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_Lcd_Cmd
  4491 ;;		_Lcd_Init
  4492 ;;		_Lcd_Write_Char
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           
  4497                           ;psect for function _Lcd_Port
  4498  0E6F                     _Lcd_Port:
  4499                           
  4500                           ;incstack = 0
  4501                           ; Regs used in _Lcd_Port: [wreg]
  4502                           ;Lcd_Port@a stored from wreg
  4503  0E6F  00F3               	movwf	Lcd_Port@a
  4504  0E70                     l1824:
  4505                           
  4506                           ;LCD8.c: 5:     PORTD = a;
  4507  0E70  0873               	movf	Lcd_Port@a,w
  4508  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0E73  0088               	movwf	8	;volatile
  4511  0E74                     l100:
  4512  0E74  0008               	return
  4513  0E75                     __end_of_Lcd_Port:
  4514                           
  4515                           	psect	text20
  4516  0F1E                     __ptext20:	
  4517 ;; *************** function _oli *****************
  4518 ;; Defined at:
  4519 ;;		line 123 in file "Master.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0
  4535 ;;      Temps:          3       0       0       0       0
  4536 ;;      Totals:         3       0       0       0       0
  4537 ;;Total ram usage:        3 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    1
  4540 ;; This function calls:
  4541 ;;		_Receive
  4542 ;; This function is called by:
  4543 ;;		Interrupt level 1
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _oli
  4549  0F1E                     _oli:
  4550  0F1E                     i1l1812:
  4551                           
  4552                           ;Master.c: 125:     temp = temp - dec * 10;
  4553  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  4554  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  4555  0F20  1E8C               	btfss	12,5	;volatile
  4556  0F21  2F23               	goto	u197_21
  4557  0F22  2F24               	goto	u197_20
  4558  0F23                     u197_21:
  4559  0F23  2F36               	goto	i1l73
  4560  0F24                     u197_20:
  4561  0F24                     i1l1814:
  4562                           
  4563                           ;Master.c: 126:     cent = temp;
  4564  0F24  120A  158A  268F  120A  158A  	fcall	_Receive
  4565  0F29  00F0               	movwf	??_oli
  4566  0F2A  0870               	movf	??_oli,w
  4567  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0F2D  00E0               	movwf	_comando
  4570  0F2E                     i1l1816:
  4571                           
  4572                           ;Master.c: 127: 
  4573  0F2E  30C7               	movlw	199
  4574  0F2F  00F0               	movwf	??_oli
  4575  0F30                     u254_27:
  4576  0F30  0BF0               	decfsz	??_oli,f
  4577  0F31  2F30               	goto	u254_27
  4578  0F32  2F33               	nop2
  4579  0F33                     i1l1818:
  4580                           
  4581                           ;Master.c: 128: 
  4582  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0F35  128C               	bcf	12,5	;volatile
  4585  0F36                     i1l73:
  4586  0F36  0872               	movf	??_oli+2,w
  4587  0F37  008A               	movwf	10
  4588  0F38  0E71               	swapf	??_oli+1,w
  4589  0F39  0083               	movwf	3
  4590  0F3A  0EFE               	swapf	btemp,f
  4591  0F3B  0E7E               	swapf	btemp,w
  4592  0F3C  0009               	retfie
  4593  0F3D                     __end_of_oli:
  4594                           
  4595                           	psect	intentry
  4596  0004                     __pintentry:	
  4597                           ;incstack = 0
  4598                           ; Regs used in _oli: [wreg+pclath+cstack]
  4599                           
  4600  0004                     interrupt_function:
  4601  007E                     saved_w	set	btemp
  4602  0004  00FE               	movwf	btemp
  4603  0005  0E03               	swapf	3,w
  4604  0006  00F1               	movwf	??_oli+1
  4605  0007  080A               	movf	10,w
  4606  0008  00F2               	movwf	??_oli+2
  4607  0009  120A  158A  2F1E   	ljmp	_oli
  4608                           
  4609                           	psect	text21
  4610  0E8F                     __ptext21:	
  4611 ;; *************** function _Receive *****************
  4612 ;; Defined at:
  4613 ;;		line 18 in file "EUSART.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      unsigned char 
  4620 ;; Registers used:
  4621 ;;		wreg
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_oli
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _Receive
  4642  0E8F                     _Receive:
  4643  0E8F                     i1l1754:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _Receive: [wreg]
  4646                           
  4647                           
  4648                           ;EUSART.c: 19:     if (RCSTAbits.OERR){
  4649  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0E91  1C98               	btfss	24,1	;volatile
  4652  0E92  2E94               	goto	u195_21
  4653  0E93  2E95               	goto	u195_20
  4654  0E94                     u195_21:
  4655  0E94  2E97               	goto	i1l153
  4656  0E95                     u195_20:
  4657  0E95                     i1l1756:
  4658                           
  4659                           ;EUSART.c: 20:         RCSTAbits.CREN=0;
  4660  0E95  1218               	bcf	24,4	;volatile
  4661                           
  4662                           ;EUSART.c: 21:         RCSTAbits.CREN=1;
  4663  0E96  1618               	bsf	24,4	;volatile
  4664  0E97                     i1l153:	
  4665                           ;EUSART.c: 24:     }
  4666                           
  4667                           
  4668                           ;EUSART.c: 23:     while (PIR1bits.RCIF==0){
  4669  0E97  1E8C               	btfss	12,5	;volatile
  4670  0E98  2E9A               	goto	u196_21
  4671  0E99  2E9B               	goto	u196_20
  4672  0E9A                     u196_21:
  4673  0E9A  2E97               	goto	i1l153
  4674  0E9B                     u196_20:
  4675  0E9B                     i1l1758:
  4676                           
  4677                           ;EUSART.c: 25:     return RCREG;
  4678  0E9B  081A               	movf	26,w	;volatile
  4679  0E9C                     i1l156:
  4680  0E9C  0008               	return
  4681  0E9D                     __end_of_Receive:
  4682  007E                     btemp	set	126	;btemp
  4683  007E                     wtemp0	set	126
  4684                           
  4685                           	psect	config
  4686                           
  4687                           ;Config register CONFIG1 @ 0x2007
  4688                           ;	Oscillator Selection bits
  4689                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4690                           ;	Watchdog Timer Enable bit
  4691                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4692                           ;	Power-up Timer Enable bit
  4693                           ;	PWRTE = OFF, PWRT disabled
  4694                           ;	RE3/MCLR pin function select bit
  4695                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4696                           ;	Code Protection bit
  4697                           ;	CP = OFF, Program memory code protection is disabled
  4698                           ;	Data Code Protection bit
  4699                           ;	CPD = OFF, Data memory code protection is disabled
  4700                           ;	Brown Out Reset Selection bits
  4701                           ;	BOREN = OFF, BOR disabled
  4702                           ;	Internal External Switchover bit
  4703                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4704                           ;	Fail-Safe Clock Monitor Enabled bit
  4705                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4706                           ;	Low Voltage Programming Enable bit
  4707                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4708                           ;	In-Circuit Debugger Mode bit
  4709                           ;	DEBUG = 0x1, unprogrammed default
  4710  2007                     	org	8199
  4711  2007  20F1               	dw	8433
  4712                           
  4713                           ;Config register CONFIG2 @ 0x2008
  4714                           ;	Brown-out Reset Selection bit
  4715                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4716                           ;	Flash Program Memory Self Write Enable bits
  4717                           ;	WRT = OFF, Write protection off
  4718  2008                     	org	8200
  4719  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     64      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_spiInit
    _WriteNumber->_Lcd_Set_Cursor
    _WriteNumber->___lwdiv
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteNumber
    _WriteNumber->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10453
                                             61 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _WriteNumber
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _WriteNumber                                         14    11      3    8645
                                             47 BANK0     14    11      3
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     372
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     906
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _Receive
 ---------------------------------------------------------------------------------
 (6) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _WriteNumber
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _oli (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 15:03:48 2021

                        _a 0061                          pc 0002                _SSPSTATbits 0094  
                       l67 0EFF                         l89 058D                         u80 0E81  
                       u81 0E80                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l100 0E74                        l103 0EE2  
                      l112 0F1D                        l106 0E8E                        l115 07F4  
                      l124 0F65                        l118 0EB2                        l172 0EC3  
                      l173 0EC8                        l190 07FD                        l182 0E7A  
                      l176 0E7B                        l179 0E81                        l276 0F9F  
                      l462 0797                        l278 0FB9                        l711 071B  
                      l472 0797                        l722 06E5                        l723 06F1  
                      l715 06C9                        l548 0FFF                        l469 0782  
                      l709 0684                        l671 02E6                        l665 037A  
                      l684 0F7C                        l844 0E7B                        l677 036E  
                      l686 0F8E                        _RA4 002C                        _RA5 002D  
     __size_of_WriteNumber 0213                        _oli 0F1E                        fsr0 0004  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 004E  
                     l2000 04A2                       l2010 04CF                       l2002 04BC  
                     l2020 04F2                       l2012 04D5                       l2004 04C0  
                     l2030 051D                       l2022 04F8                       l2014 04DB  
                     l2006 04C5                       l1142 0E76                       l1400 0747  
                     l2040 0552                       l2032 0524                       l2024 0502  
                     l2016 04E5                       l2008 04CA                       l1144 07F5  
                     l1402 0748                       l2042 0566                       l2034 0530  
                     l2026 0508                       l2018 04EC                       l1146 07FA  
                     l2050 058E                       l1340 0F6B                       l1500 0097  
                     l1404 0750                       l2044 056E                       l2036 0536  
                     l2028 0515                       l2060 05B1                       l2052 059D  
                     l1342 0F72                       l1510 0125                       l1502 00A4  
                     l1422 0777                       l1414 075E                       l1406 0752  
                     l2046 0575                       l2038 054A                       l2070 05D3  
                     l2062 05BB                       l2054 05A0                       l1344 0F76  
                     l1520 0187                       l1512 0141                       l1504 00C1  
                     l1424 0787                       l1408 0756                       l1416 0770  
                     l2048 0587                       l2080 05F1                       l2072 05D9  
                     l2064 05C5                       l2056 05A1                       l1346 0F85  
                     l1338 0F69                       l1530 0217                       l1522 01A4  
                     l1514 014A                       l1506 00DD                       l1426 078C  
                     l1370 0EBB                       l2090 0619                       l2082 05FB  
                     l2074 05E3                       l2066 05C8                       l2058 05AB  
                     l1348 0F8A                       l1540 02A9                       l1532 0244  
                     l1524 01BD                       l1516 015A                       l1508 0109  
                     l1460 002B                       l1372 0EBD                       l2092 0621  
                     l2084 0601                       l2076 05ED                       l2068 05C9  
                     l1542 02B2                       l1550 02C6                       l1534 026A  
                     l1526 01DA                       l1518 0177                       l1470 0040  
                     l1462 002C                       l1454 001A                       l1374 0EBF  
                     l2094 0627                       l2086 060B                       l2078 05F0  
                     l1552 02CA                       l1544 02B6                       l1536 0292  
                     l1528 0207                       l1480 0058                       l1472 0048  
                     l1464 0031                       l1456 0021                       l1392 071C  
                     l1376 0EC2                       l1368 0EB4                       l1640 0EE6  
                     l2096 0637                       l2088 0615                       l1570 031B  
                     l1562 02EB                       l1554 02CB                       l1546 02B7  
                     l1538 029B                       l1490 0074                       l1482 005D  
                     l1474 004D                       l1466 0036                       l1458 0027  
                     l1394 0729                       l1642 0EE7                       l2098 0648  
                     l1580 0352                       l1564 02F0                       l1572 0321  
                     l1556 02CF                       l1548 02C0                       l1492 0079  
                     l1484 0062                       l1476 0053                       l1468 003E  
                     l1644 0EF4                       l1830 0EA7                       l1590 0372  
                     l1582 0354                       l1574 032E                       l1566 02FE  
                     l1558 02E3                       l1494 007E                       l1486 006A  
                     l1478 0057                       l1398 0732                       l1910 068C  
                     l1902 0663                       l1646 0EF5                       l1638 0EE3  
                     l1824 0E70                       l1840 0ED3                       l1832 0EAA  
                     l1584 0362                       l1576 0339                       l1568 0302  
                     l1488 006C                       l1920 06AE                       l1904 0668  
                     l1648 0EF6                       l1842 0ED6                       l1850 0F10  
                     l1834 0EAF                       l1826 0E9E                       l1586 0366  
                     l1578 0348                       l1498 0087                       l1930 06DF  
                     l1922 06B2                       l1914 0695                       l1906 066C  
                     l1844 0EDF                       l1836 0ECA                       l1852 0F16  
                     l1828 0EA1                       l1860 0F58                       l1588 0367  
                     l1940 0712                       l1932 06E9                       l1924 06C0  
                     l1916 069A                       l1908 067C                       l1838 0ECD  
                     l1950 07A9                       l1846 0F03                       l1854 0F40  
                     l1870 0FAD                       l1862 0F8F                       l1942 0713  
                     l1934 06F3                       l1926 06D0                       l1918 06A7  
                     l1960 07DC                       l1952 07B9                       l1848 0F08  
                     l1856 0F43                       l1880 0FC4                       l1872 0FB3  
                     l1864 0F93                       l1936 0709                       l1928 06DB  
                     l1962 07E2                       l1954 07C3                       l1946 0798  
                     l1858 0F50                       l1890 0FE7                       l1882 0FC7  
                     l1866 0F97                       l1938 070E                       l1970 037E  
                     l1964 07E8                       l1956 07D0                       l1948 07A3  
                     l1892 0FED                       l1884 0FCE                       l1876 0FBA  
                     l1868 0FA6                       l1980 03D1                       l1972 0384  
                     l1966 07EE                       l1958 07D6                       l1894 0FEE  
                     l1886 0FD2                       l1878 0FBE                       l1990 045A  
                     l1982 0411                       l1974 0386                       l1968 0E82  
                     l1896 0FF5                       l1888 0FD6                       l1992 045B  
                     l1976 038C                       l1984 0414                       l1898 0FFB  
                     l1986 0419                       l1994 0462                       l1978 03CB  
                     l1996 0475                       l1988 041A                       l1998 048F  
                     ?_oli 0070                       STR_1 0806                       STR_2 0819  
                     STR_3 0817                       STR_4 081B                       STR_5 081D  
                     u1000 0F76                       u1001 0F75                       u1020 0F8A  
                     u1021 0F89                       u1110 0729                       u1015 0F7D  
                     u1111 0728                       u2000 0F65                       u1200 078C  
                     u1120 0740                       u2001 0F64                       u1201 078B  
                     u1130 0756                       u2010 0F97                       u1131 0755  
                     u2011 0F96                       u1300 0036                       u1140 075D  
                     u1060 0EBB                       u1301 0035                       u1141 075C  
                     u1125 073B                       u1061 0EBA                       u1310 0057  
                     u2110 0FFB                       u1311 0056                       u2111 0FFA  
                     u1320 005D                       u1160 076F                       u2040 0FB3  
                     u2200 06DF                       u2120 0668                       u1321 005C  
                     u1161 076E                       u2105 0FEF                       u2041 0FB2  
                     u2025 0FA0                       u2201 06DE                       u2121 0667  
                     u1330 0062                       u1170 0776                       u2050 0FC4  
                     u2210 06E5                       u2130 066C                       u1411 0169  
                     u1331 0061                       u1171 0775                       u1155 075F  
                     u2051 0FC3                       u2035 0FA7                       u2211 06E4  
                     u2131 066B                       u1412 0170                       u1340 0079  
                     u2220 06E9                       u2140 068C                       u2300 04D5  
                     u1501 0284                       u1421 0196                       u1413 0177  
                     u1405 0143                       u1341 0078                       u2221 06E8  
                     u2141 068B                       u2301 04D4                       u1502 028B  
                     u1422 019D                       u1350 007E                       u1190 0787  
                     u2070 0FD6                       u2230 06FE                       u2310 04DB  
                     u1503 0292                       u1423 01A4                       u1351 007D  
                     u1191 0786                       u2071 0FD5                       u2311 04DA  
                     u1600 0302                       u1280 002B                       u2240 070E  
                     u2160 06AD                       u2400 057B                       u2320 04F2  
                     u1601 0301                       u1441 01CC                       u1361 00CF  
                     u1281 002A                       u1185 0779                       u2065 0FC8  
                     u2241 070D                       u2161 06AC                       u2401 0579  
                     u2321 04F1                       u1610 0311                       u1530 02B6  
                     u1442 01D3                       u1362 00D6                       u1290 0031  
                     u2090 0FE7                       u2250 0712                       u2410 057C  
                     u2330 04F8                       u1531 02B5                       u1515 0294  
                     u1451 01F9                       u1443 01DA                       u1435 01A6  
                     u1371 00EB                       u1363 00DD                       u1291 0030  
                     u2091 0FE6                       u2251 0711                       u2235 06F9  
                     u2155 069F                       u2331 04F7                       u1620 032E  
                     u1452 0200                       u1372 00F2                       u2180 06CF  
                     u2340 0524                       u2260 0384                       u1621 032D  
                     u1525 02AB                       u1461 0226                       u1453 0207  
                     u1381 0117                       u1373 00F9                       u2085 0FD7  
                     u2181 06CE                       u2341 0523                       u2261 0383  
                     u1630 0348                       u1550 02CA                       u1470 0250  
                     u1462 022D                       u1382 011E                       u2350 053E  
                     u2270 038C                       u1631 0347                       u1615 030C  
                     u1551 02C9                       u1463 0234                       u1391 0133  
                     u1383 0125                       u2095 0FE3                       u2175 06C1  
                     u2351 053C                       u2271 038B                       u1640 0366  
                     u1560 02CF                       u1392 013A                       u2360 053F  
                     u2280 03D1                       u1641 0365                       u1625 032A  
                     u1561 02CE                       u1545 02B9                       u1481 025C  
                     u1393 0141                       u2281 03D0                       u1570 02E3  
                     u1490 0278                       u1482 0263                       u2370 055A  
                     u2290 0419                       u2507 07AF                       u1635 0344  
                     u1571 02E2                       u1483 026A                       u1475 024B  
                     u2195 06D4                       u2371 0558                       u2291 0418  
                     u2427 05A7                       u1580 02EA                       u2380 055B  
                     u2517 07BF                       u1581 02E9                       u2437 05C1  
                     u1590 02F0                       u2390 0575                       u2527 07CD  
                     u1591 02EF                       u1495 0273                       u2391 0574  
                     u2447 05CF                       u2537 0EDA                       u2457 05E9  
                     u2467 05F7                       u2477 0611                       u2487 0EAC  
                     u2497 079E                       u1980 0F08                       u1981 0F07  
                     u1990 0F16                       u1991 0F15                       i1l73 0F36  
        ?_Lcd_Write_String 0070                       _main 058E                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0EE3  
          __end_of_Receive 0E9D                      ??_oli 0070              ___fltol@sign1 004D  
                    ?_main 0070            __end_of___flmul 037B            __end_of___fltol 0798  
                    _ANSEL 0188            __end_of___lwdiv 1000                      i1l153 0E97  
                    i1l156 0E9C                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _setup 0EE3                      pclath 000A  
          __end_of_spiInit 0EC9            __end_of_spiRead 07FE                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 07F5           __end_of_Lcd_Port 0E75  
          __initialization 000F               __end_of_main 0660                     ??_main 005D  
       __size_of_Lcd_Clear 000D                     ?_setup 0070                     _ANSELH 0189  
                   i1l1812 0F1E                     i1l1814 0F24                     i1l1816 0F2E  
                   i1l1754 0E8F                     i1l1818 0F33                     i1l1756 0E95  
                   i1l1758 0E9B                     u254_27 0F30                     u195_20 0E95  
                   u195_21 0E94                     u196_20 0E9B                     u196_21 0E9A  
                   u197_20 0F24                     u197_21 0F23                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 071C                  ??_Receive 0070                     ___wmul 0F8F  
                ??___flmul 0032                  ??___fltol 0048                  ??___lwdiv 0077  
       __size_of__Umul8_16 0029                     saved_w 007E           __end_of_spiWrite 0E7B  
                ??_spiInit 0076                  ??_spiRead 0073            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0077               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073    __end_of__initialization 0016          __end_of_Lcd_Clear 0E8F  
               ___fltol@f1 0044             __pcstackCOMMON 0070              __end_of_setup 0F00  
           _Lcd_Set_Cursor 0F00                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0077                 __pbssBANK0 0060          __end_of__Umul8_16 0F8F  
               __pmaintext 058E                    ?___wmul 0073                 __pintentry 0004  
           WriteNumber@dec 0059             WriteNumber@cor 0057    __size_of_spiReceiveWait 0007  
            ??_WriteNumber 0052  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0F1E  
                ?___xxtofl 0073                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
         WriteNumber@valor 0050                    _SSPSTAT 0094                 __stringtab 0800  
           _Lcd_Write_Char 0E9D                    _Lcd_Cmd 0EC9                    _Receive 0E8F  
                  _Sensor1 007A                    _Sensor2 0079                    _Sensor3 0078  
                ?_spiWrite 0070                    ___flmul 001A                    ___fltol 071C  
          __size_of___wmul 002B                    ___lwdiv 0FBA            ?_Lcd_Set_Cursor 0077  
                  __ptext1 0E75                    __ptext2 07F5                    __ptext3 0E7B  
                  __ptext4 0EE3                    __ptext5 0EB3                    __ptext6 037B  
                  __ptext7 0660                    __ptext8 0F8F                    __ptext9 0FBA  
                  _comando 0060               __size_of_oli 001F                 ??___xxtofl 0020  
      __end_of_WriteNumber 058E                    _spiInit 0EB3                    _spiRead 07F5  
   __end_of_Lcd_Write_Char 0EB3       end_of_initialization 0016                  _RCSTAbits 0018  
               ??_spiWrite 0073                  Lcd_Port@a 0073                  _PORTAbits 0005  
       WriteNumber@columna 004F         WriteNumber@formato 0051              ___xxtofl@sign 0024  
                _TRISCbits 0087                spiWrite@dat 0073            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                ___flmul@grs 0038  
                _TXSTAbits 0098                  _Lcd_Clear 0E82             _spiReceiveWait 0E7B  
           __end_of___wmul 0FBA           _Lcd_Write_String 0F3D                _BAUDCTLbits 0187  
              _WriteNumber 037B        start_initialization 000F                __end_of_oli 0F3D  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0E82  
               ?_Lcd_Clear 0070                   ??___wmul 0077                  __Umul8_16 0F66  
          Lcd_Write_Char@a 0075                  ___flmul@a 002E                  ___flmul@b 002A  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                   ?_Receive 0070  
         ___lwdiv@dividend 0075            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0078  
                 ?___flmul 002A                   ?___fltol 0044                 ?__Umul8_16 0073  
                 ?___lwdiv 0073          __size_of_spiWrite 0006                  __pstrings 0800  
          WriteNumber@cent 0056            WriteNumber@fila 005C            WriteNumber@temp 005A  
                 ?_spiInit 0073                   ?_spiRead 0070           ___lwdiv@quotient 0021  
           __size_of_setup 001D       spiInit@sTransmitEdge 0075          interrupt_function 0004  
           ___wmul@product 0020                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
        WriteNumber@unidad 0058                __stringbase 0805          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 0798                   _Lcd_Port 0E6F  
 __end_of_Lcd_Write_String 0F66           __size_of_Lcd_Cmd 001A           __size_of_Receive 000E  
              ??__Umul8_16 0075           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0046               ?_WriteNumber 004F         __end_of__stringtab 0806  
                 ___xxtofl 0660            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 071C                   __ptext11 001A                   __ptext20 0F1E  
                 __ptext12 0F66                   __ptext21 0E8F                   __ptext13 0F3D  
                 __ptext14 0E9D                   __ptext15 0F00                   __ptext16 0798  
                 __ptext17 0E82                   __ptext18 0EC9                   __ptext19 0E6F  
         __size_of_spiInit 0016           __size_of_spiRead 0009              __size_of_main 00D2  
                 _spiWrite 0E75               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0073  
                stringcode 0800     __Umul8_16@multiplicand 0073                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
