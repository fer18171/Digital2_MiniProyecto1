

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 20:27:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  001A                     _RCREG	set	26
   466  0019                     _TXREG	set	25
   467  0018                     _RCSTAbits	set	24
   468  0008                     _PORTD	set	8
   469  000C                     _PIR1bits	set	12
   470  000B                     _INTCONbits	set	11
   471  0006                     _PORTB	set	6
   472  0005                     _PORTAbits	set	5
   473  0064                     _TXIF	set	100
   474  002D                     _RA5	set	45
   475  002C                     _RA4	set	44
   476  0094                     _SSPSTATbits	set	148
   477  0094                     _SSPSTAT	set	148
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0086                     _TRISB	set	134
   483  0085                     _TRISA	set	133
   484  0088                     _TRISD	set	136
   485  0087                     _TRISCbits	set	135
   486  0087                     _TRISC	set	135
   487  043B                     _TRISC3	set	1083
   488  043D                     _TRISC5	set	1085
   489  0187                     _BAUDCTLbits	set	391
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0800                     __pstrings:
   495  0800                     stringtab:
   496  0800                     __stringtab:
   497  0800                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  0800                     stringdir:
   501  0800  3008               	movlw	high stringdir
   502  0801  008A               	movwf	10
   503  0802  0804               	movf	4,w
   504  0803  0A84               	incf	4,f
   505  0804  0782               	addwf	2,f
   506  0805                     __stringbase:
   507  0805  3400               	retlw	0
   508  0806                     __end_of__stringtab:
   509  0806                     STR_1:
   510  0806  3420               	retlw	32	;' '
   511  0807  3453               	retlw	83	;'S'
   512  0808  3431               	retlw	49	;'1'
   513  0809  343A               	retlw	58	;':'
   514  080A  3420               	retlw	32	;' '
   515  080B  3420               	retlw	32	;' '
   516  080C  3420               	retlw	32	;' '
   517  080D  3453               	retlw	83	;'S'
   518  080E  3432               	retlw	50	;'2'
   519  080F  343A               	retlw	58	;':'
   520  0810  3420               	retlw	32	;' '
   521  0811  3420               	retlw	32	;' '
   522  0812  3420               	retlw	32	;' '
   523  0813  3453               	retlw	83	;'S'
   524  0814  3433               	retlw	51	;'3'
   525  0815  343A               	retlw	58	;':'
   526  0816  3400               	retlw	0
   527  0817                     STR_3:
   528  0817  3420               	retlw	32	;' '
   529  0818  3453               	retlw	83	;'S'
   530  0819  3432               	retlw	50	;'2'
   531  081A  343A               	retlw	58	;':'
   532  081B  3420               	retlw	32	;' '
   533  081C  3400               	retlw	0
   534  081D                     STR_4:
   535  081D  3420               	retlw	32	;' '
   536  081E  3453               	retlw	83	;'S'
   537  081F  3433               	retlw	51	;'3'
   538  0820  343A               	retlw	58	;':'
   539  0821  3420               	retlw	32	;' '
   540  0822  3400               	retlw	0
   541  0823                     STR_2:
   542  0823  3453               	retlw	83	;'S'
   543  0824  3431               	retlw	49	;'1'
   544  0825  343A               	retlw	58	;':'
   545  0826  3420               	retlw	32	;' '
   546  0827  3400               	retlw	0
   547  0828                     STR_5:
   548  0828  342D               	retlw	45	;'-'
   549  0829  3400               	retlw	0
   550  082A                     STR_9:
   551  082A  342E               	retlw	46	;'.'
   552  082B  3400               	retlw	0
   553  082C                     STR_11:
   554  082C  3456               	retlw	86	;'V'
   555  082D  3400               	retlw	0
   556  0826                     
   557                           	psect	cinit
   558  000F                     start_initialization:	
   559                           ; #config settings
   560                           
   561  000F                     __initialization:
   562                           
   563                           ; Clear objects allocated to COMMON
   564  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   565  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   566                           
   567                           ; Clear objects allocated to BANK0
   568  0011  1283               	bcf	3,5	;RP0=0, select bank0
   569  0012  1303               	bcf	3,6	;RP1=0, select bank0
   570  0013  01E0               	clrf	__pbssBANK0& (0+127)
   571  0014  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   572  0015  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   573  0016                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  0016                     __end_of__initialization:
   577  0016  0183               	clrf	3
   578  0017  120A  118A  2DBE   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssCOMMON
   581  0079                     __pbssCOMMON:
   582  0079                     _comando:
   583  0079                     	ds	1
   584  007A                     _a:
   585  007A                     	ds	1
   586                           
   587                           	psect	bssBANK0
   588  0060                     __pbssBANK0:
   589  0060                     _Sensor3:
   590  0060                     	ds	1
   591  0061                     _Sensor2:
   592  0061                     	ds	1
   593  0062                     _Sensor1:
   594  0062                     	ds	1
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:
   598  0070                     ?_setup:
   599  0070                     ?_Lcd_Init:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_EUSART_conf:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_Lcd_Clear:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_spiWrite:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_spiRead:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Write_String:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_SendString:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_SendChar:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Receive:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??_Receive:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_Lcd_Write_Char:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_main:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_oli:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_oli:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Port:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_Lcd_Cmd:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_spiReceiveWait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650                           
   651                           ; 1 bytes @ 0x0
   652  0070                     	ds	3
   653  0073                     ??_EUSART_conf:
   654  0073                     ??_spiWrite:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_spiRead:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_SendChar:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ?_spiInit:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_Lcd_Port:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??_spiReceiveWait:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ?__Umul8_16:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ?___wmul:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     ?___lwdiv:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     ?___xxtofl:	
   682                           ; 2 bytes @ 0x3
   683                           
   684  0073                     Lcd_Port@a:	
   685                           ; 4 bytes @ 0x3
   686                           
   687  0073                     SendChar@X:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     spiInit@sDataSample:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     spiWrite@dat:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     __Umul8_16@multiplicand:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ___wmul@multiplier:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ___lwdiv@divisor:	
   703                           ; 2 bytes @ 0x3
   704                           
   705  0073                     ___xxtofl@val:	
   706                           ; 2 bytes @ 0x3
   707                           
   708                           
   709                           ; 4 bytes @ 0x3
   710  0073                     	ds	1
   711  0074                     ??_SendString:
   712  0074                     ??_Lcd_Write_Char:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ??_Lcd_Cmd:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     spiInit@sClockIdle:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 1 bytes @ 0x4
   723  0074                     	ds	1
   724  0075                     ??__Umul8_16:
   725  0075                     Lcd_Write_Char@a:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0075                     SendString@X:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     spiInit@sTransmitEdge:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     ___wmul@multiplicand:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     ___lwdiv@dividend:	
   738                           ; 2 bytes @ 0x5
   739                           
   740                           
   741                           ; 2 bytes @ 0x5
   742  0075                     	ds	1
   743  0076                     ??_Lcd_Write_String:
   744  0076                     ??_spiInit:	
   745                           ; 1 bytes @ 0x6
   746                           
   747  0076                     Lcd_Cmd@a:	
   748                           ; 1 bytes @ 0x6
   749                           
   750  0076                     spiInit@sType:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0076                     Lcd_Write_String@i:	
   754                           ; 1 bytes @ 0x6
   755                           
   756                           
   757                           ; 2 bytes @ 0x6
   758  0076                     	ds	1
   759  0077                     ??_setup:
   760  0077                     ??_Lcd_Init:	
   761                           ; 1 bytes @ 0x7
   762                           
   763  0077                     ??_Lcd_Clear:	
   764                           ; 1 bytes @ 0x7
   765                           
   766  0077                     ?_Lcd_Set_Cursor:	
   767                           ; 1 bytes @ 0x7
   768                           
   769  0077                     ??___wmul:	
   770                           ; 1 bytes @ 0x7
   771                           
   772  0077                     ??___lwdiv:	
   773                           ; 1 bytes @ 0x7
   774                           
   775  0077                     Lcd_Set_Cursor@b:	
   776                           ; 1 bytes @ 0x7
   777                           
   778  0077                     ___fltol@sign1:	
   779                           ; 1 bytes @ 0x7
   780                           
   781  0077                     ___wmul@product:	
   782                           ; 1 bytes @ 0x7
   783                           
   784                           
   785                           ; 2 bytes @ 0x7
   786  0077                     	ds	1
   787  0078                     ??_Lcd_Set_Cursor:
   788  0078                     Lcd_Set_Cursor@a:	
   789                           ; 1 bytes @ 0x8
   790                           
   791  0078                     Lcd_Write_String@a:	
   792                           ; 1 bytes @ 0x8
   793                           
   794  0078                     ___fltol@exp1:	
   795                           ; 1 bytes @ 0x8
   796                           
   797                           
   798                           ; 1 bytes @ 0x8
   799  0078                     	ds	1
   800                           
   801                           	psect	cstackBANK0
   802  0020                     __pcstackBANK0:
   803  0020                     ??___xxtofl:
   804  0020                     ___lwdiv@counter:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0020                     __Umul8_16@product:	
   808                           ; 1 bytes @ 0x0
   809                           
   810                           
   811                           ; 2 bytes @ 0x0
   812  0020                     	ds	1
   813  0021                     ___lwdiv@quotient:
   814                           
   815                           ; 2 bytes @ 0x1
   816  0021                     	ds	1
   817  0022                     __Umul8_16@word_mpld:
   818                           
   819                           ; 2 bytes @ 0x2
   820  0022                     	ds	2
   821  0024                     __Umul8_16@multiplier:
   822  0024                     ___xxtofl@sign:	
   823                           ; 1 bytes @ 0x4
   824                           
   825                           
   826                           ; 1 bytes @ 0x4
   827  0024                     	ds	1
   828  0025                     ___xxtofl@exp:
   829                           
   830                           ; 1 bytes @ 0x5
   831  0025                     	ds	1
   832  0026                     ___xxtofl@arg:
   833                           
   834                           ; 4 bytes @ 0x6
   835  0026                     	ds	4
   836  002A                     ?___flmul:
   837  002A                     ___flmul@b:	
   838                           ; 4 bytes @ 0xA
   839                           
   840                           
   841                           ; 4 bytes @ 0xA
   842  002A                     	ds	4
   843  002E                     ___flmul@a:
   844                           
   845                           ; 4 bytes @ 0xE
   846  002E                     	ds	4
   847  0032                     ??___flmul:
   848                           
   849                           ; 1 bytes @ 0x12
   850  0032                     	ds	5
   851  0037                     ___flmul@sign:
   852                           
   853                           ; 1 bytes @ 0x17
   854  0037                     	ds	1
   855  0038                     ___flmul@grs:
   856                           
   857                           ; 4 bytes @ 0x18
   858  0038                     	ds	4
   859  003C                     ___flmul@aexp:
   860                           
   861                           ; 1 bytes @ 0x1C
   862  003C                     	ds	1
   863  003D                     ___flmul@bexp:
   864                           
   865                           ; 1 bytes @ 0x1D
   866  003D                     	ds	1
   867  003E                     ___flmul@prod:
   868                           
   869                           ; 4 bytes @ 0x1E
   870  003E                     	ds	4
   871  0042                     ___flmul@temp:
   872                           
   873                           ; 2 bytes @ 0x22
   874  0042                     	ds	2
   875  0044                     ?___fltol:
   876  0044                     ___fltol@f1:	
   877                           ; 4 bytes @ 0x24
   878                           
   879                           
   880                           ; 4 bytes @ 0x24
   881  0044                     	ds	4
   882  0048                     ??___fltol:
   883                           
   884                           ; 1 bytes @ 0x28
   885  0048                     	ds	5
   886  004D                     ?_WriteNumber:
   887  004D                     WriteNumber@columna:	
   888                           ; 1 bytes @ 0x2D
   889                           
   890                           
   891                           ; 1 bytes @ 0x2D
   892  004D                     	ds	1
   893  004E                     WriteNumber@valor:
   894                           
   895                           ; 1 bytes @ 0x2E
   896  004E                     	ds	1
   897  004F                     WriteNumber@formato:
   898                           
   899                           ; 1 bytes @ 0x2F
   900  004F                     	ds	1
   901  0050                     ??_WriteNumber:
   902                           
   903                           ; 1 bytes @ 0x30
   904  0050                     	ds	4
   905  0054                     WriteNumber@cor:
   906                           
   907                           ; 1 bytes @ 0x34
   908  0054                     	ds	1
   909  0055                     WriteNumber@cent:
   910                           
   911                           ; 1 bytes @ 0x35
   912  0055                     	ds	1
   913  0056                     WriteNumber@unidad:
   914                           
   915                           ; 1 bytes @ 0x36
   916  0056                     	ds	1
   917  0057                     WriteNumber@dec:
   918                           
   919                           ; 1 bytes @ 0x37
   920  0057                     	ds	1
   921  0058                     WriteNumber@temp:
   922                           
   923                           ; 2 bytes @ 0x38
   924  0058                     	ds	2
   925  005A                     WriteNumber@fila:
   926                           
   927                           ; 1 bytes @ 0x3A
   928  005A                     	ds	1
   929  005B                     ??_main:
   930                           
   931                           ; 1 bytes @ 0x3B
   932  005B                     	ds	3
   933  005E                     main@i:
   934                           
   935                           ; 2 bytes @ 0x3E
   936  005E                     	ds	2
   937                           
   938                           	psect	maintext
   939  05BE                     __pmaintext:	
   940 ;;
   941 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   942 ;;
   943 ;; *************** function _main *****************
   944 ;; Defined at:
   945 ;;		line 55 in file "Master.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  i               2   62[BANK0 ] int 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : B00/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       2       0       0       0
   961 ;;      Temps:          0       3       0       0       0
   962 ;;      Totals:         0       5       0       0       0
   963 ;;Total ram usage:        5 bytes
   964 ;; Hardware stack levels required when called:    6
   965 ;; This function calls:
   966 ;;		_EUSART_conf
   967 ;;		_Lcd_Clear
   968 ;;		_Lcd_Init
   969 ;;		_Lcd_Set_Cursor
   970 ;;		_Lcd_Write_String
   971 ;;		_SendChar
   972 ;;		_SendString
   973 ;;		_WriteNumber
   974 ;;		_setup
   975 ;;		_spiRead
   976 ;;		_spiWrite
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _main
   984  05BE                     _main:
   985  05BE                     l2092:	
   986                           ;incstack = 0
   987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           
   989                           
   990                           ;Master.c: 56:         WriteNumber(2, 8, Sensor2, 0);
   991  05BE  120A  158A  26AC  120A  118A  	fcall	_setup
   992                           
   993                           ;Master.c: 57:         SendString(" S3: ");
   994  05C3  120A  118A  2790  120A  118A  	fcall	_Lcd_Init
   995                           
   996                           ;Master.c: 58:         WriteNumber(2, 13, Sensor3, 3);
   997  05C8  120A  158A  2636  120A  118A  	fcall	_EUSART_conf
   998                           
   999                           ;Master.c: 59: 
  1000  05CD  120A  158A  25EF  120A  118A  	fcall	_Lcd_Clear
  1001  05D2                     l2094:
  1002                           
  1003                           ;Master.c: 62:             SendChar(8);
  1004  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1005  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1006  05D4  1585               	bsf	5,3	;volatile
  1007  05D5                     l2096:
  1008                           
  1009                           ;Master.c: 63:         }
  1010  05D5  1085               	bcf	5,1	;volatile
  1011  05D6                     l2098:
  1012                           
  1013                           ;Master.c: 65: 
  1014  05D6  3003               	movlw	3
  1015  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1016  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1017  05D9  00DC               	movwf	??_main+1
  1018  05DA  3097               	movlw	151
  1019  05DB  00DB               	movwf	??_main
  1020  05DC                     u2507:
  1021  05DC  0BDB               	decfsz	??_main,f
  1022  05DD  2DDC               	goto	u2507
  1023  05DE  0BDC               	decfsz	??_main+1,f
  1024  05DF  2DDC               	goto	u2507
  1025  05E0                     l2100:
  1026                           
  1027                           ;Master.c: 66:     }
  1028  05E0  3001               	movlw	1
  1029  05E1  120A  158A  25CF  120A  118A  	fcall	_spiWrite
  1030  05E6                     l2102:
  1031                           
  1032                           ;Master.c: 67: }
  1033  05E6  120A  158A  25DC  120A  118A  	fcall	_spiRead
  1034  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1035  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1036  05ED  00DB               	movwf	??_main
  1037  05EE  085B               	movf	??_main,w
  1038  05EF  00E2               	movwf	_Sensor1
  1039  05F0                     l2104:
  1040                           
  1041                           ;Master.c: 68: 
  1042  05F0  3003               	movlw	3
  1043  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1044  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1045  05F3  00DC               	movwf	??_main+1
  1046  05F4  3097               	movlw	151
  1047  05F5  00DB               	movwf	??_main
  1048  05F6                     u2517:
  1049  05F6  0BDB               	decfsz	??_main,f
  1050  05F7  2DF6               	goto	u2517
  1051  05F8  0BDC               	decfsz	??_main+1,f
  1052  05F9  2DF6               	goto	u2517
  1053  05FA                     l2106:
  1054                           
  1055                           ;Master.c: 70: 
  1056  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1057  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1058  05FC  1485               	bsf	5,1	;volatile
  1059  05FD                     l2108:
  1060                           
  1061                           ;Master.c: 71: 
  1062  05FD  1105               	bcf	5,2	;volatile
  1063  05FE                     l2110:
  1064                           
  1065                           ;Master.c: 73: 
  1066  05FE  3003               	movlw	3
  1067  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0601  00DC               	movwf	??_main+1
  1070  0602  3097               	movlw	151
  1071  0603  00DB               	movwf	??_main
  1072  0604                     u2527:
  1073  0604  0BDB               	decfsz	??_main,f
  1074  0605  2E04               	goto	u2527
  1075  0606  0BDC               	decfsz	??_main+1,f
  1076  0607  2E04               	goto	u2527
  1077  0608                     l2112:
  1078                           
  1079                           ;Master.c: 74: void setup(void) {
  1080  0608  3002               	movlw	2
  1081  0609  120A  158A  25CF  120A  118A  	fcall	_spiWrite
  1082  060E                     l2114:
  1083                           
  1084                           ;Master.c: 75: 
  1085  060E  120A  158A  25DC  120A  118A  	fcall	_spiRead
  1086  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0615  00DB               	movwf	??_main
  1089  0616  085B               	movf	??_main,w
  1090  0617  00E1               	movwf	_Sensor2
  1091  0618                     l2116:
  1092                           
  1093                           ;Master.c: 76:     TRISC = 0;
  1094  0618  3003               	movlw	3
  1095  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1096  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  061B  00DC               	movwf	??_main+1
  1098  061C  3097               	movlw	151
  1099  061D  00DB               	movwf	??_main
  1100  061E                     u2537:
  1101  061E  0BDB               	decfsz	??_main,f
  1102  061F  2E1E               	goto	u2537
  1103  0620  0BDC               	decfsz	??_main+1,f
  1104  0621  2E1E               	goto	u2537
  1105  0622                     l2118:
  1106                           
  1107                           ;Master.c: 78:     TRISCbits.TRISC7 = 1;
  1108  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0624  1505               	bsf	5,2	;volatile
  1111  0625                     l2120:
  1112                           
  1113                           ;Master.c: 79:     TRISD = 0;
  1114  0625  1185               	bcf	5,3	;volatile
  1115  0626                     l2122:
  1116                           
  1117                           ;Master.c: 81:     ANSELH = 0;
  1118  0626  3003               	movlw	3
  1119  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0629  00DC               	movwf	??_main+1
  1122  062A  3097               	movlw	151
  1123  062B  00DB               	movwf	??_main
  1124  062C                     u2547:
  1125  062C  0BDB               	decfsz	??_main,f
  1126  062D  2E2C               	goto	u2547
  1127  062E  0BDC               	decfsz	??_main+1,f
  1128  062F  2E2C               	goto	u2547
  1129  0630                     l2124:
  1130                           
  1131                           ;Master.c: 82:     TRISA = 0;
  1132  0630  3002               	movlw	2
  1133  0631  120A  158A  25CF  120A  118A  	fcall	_spiWrite
  1134  0636                     l2126:
  1135                           
  1136                           ;Master.c: 83:     TRISB = 0;
  1137  0636  120A  158A  25DC  120A  118A  	fcall	_spiRead
  1138  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1139  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1140  063D  00DB               	movwf	??_main
  1141  063E  085B               	movf	??_main,w
  1142  063F  00E0               	movwf	_Sensor3
  1143  0640                     l2128:
  1144                           
  1145                           ;Master.c: 84:     Sensor1 = 0;
  1146  0640  3003               	movlw	3
  1147  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0643  00DC               	movwf	??_main+1
  1150  0644  3097               	movlw	151
  1151  0645  00DB               	movwf	??_main
  1152  0646                     u2557:
  1153  0646  0BDB               	decfsz	??_main,f
  1154  0647  2E46               	goto	u2557
  1155  0648  0BDC               	decfsz	??_main+1,f
  1156  0649  2E46               	goto	u2557
  1157  064A                     l2130:
  1158                           
  1159                           ;Master.c: 85:     Sensor2 = 0;
  1160  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1161  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1162  064C  0860               	movf	_Sensor3,w
  1163  064D  0086               	movwf	6	;volatile
  1164  064E                     l2132:
  1165                           
  1166                           ;Master.c: 86:     Sensor3 = 0;
  1167  064E  01F7               	clrf	Lcd_Set_Cursor@b
  1168  064F  0AF7               	incf	Lcd_Set_Cursor@b,f
  1169  0650  3001               	movlw	1
  1170  0651  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  1171  0656                     l2134:
  1172                           
  1173                           ;Master.c: 87: 
  1174  0656  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1175  0657  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  1176  065C                     l2136:
  1177                           
  1178                           ;Master.c: 89:     INTCONbits.GIE = 1;
  1179  065C  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1180  065D  120A  158A  268D  120A  118A  	fcall	_SendString
  1181  0662                     l2138:
  1182                           
  1183                           ;Master.c: 90:     INTCONbits.PEIE = 1;
  1184  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0664  01CD               	clrf	WriteNumber@columna
  1187  0665  0ACD               	incf	WriteNumber@columna,f
  1188  0666  0862               	movf	_Sensor1,w
  1189  0667  00DB               	movwf	??_main
  1190  0668  085B               	movf	??_main,w
  1191  0669  00CE               	movwf	WriteNumber@valor
  1192  066A  01CF               	clrf	WriteNumber@formato
  1193  066B  0ACF               	incf	WriteNumber@formato,f
  1194  066C  3002               	movlw	2
  1195  066D  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1196  0672                     l2140:
  1197                           
  1198                           ;Master.c: 91: 
  1199  0672  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1200  0673  120A  158A  268D  120A  118A  	fcall	_SendString
  1201  0678                     l2142:
  1202                           
  1203                           ;Master.c: 92: 
  1204  0678  3008               	movlw	8
  1205  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1206  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1207  067B  00DB               	movwf	??_main
  1208  067C  085B               	movf	??_main,w
  1209  067D  00CD               	movwf	WriteNumber@columna
  1210  067E  0861               	movf	_Sensor2,w
  1211  067F  00DC               	movwf	??_main+1
  1212  0680  085C               	movf	??_main+1,w
  1213  0681  00CE               	movwf	WriteNumber@valor
  1214  0682  01CF               	clrf	WriteNumber@formato
  1215  0683  3002               	movlw	2
  1216  0684  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1217  0689                     l2144:
  1218                           
  1219                           ;Master.c: 93:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  1220  0689  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1221  068A  120A  158A  268D  120A  118A  	fcall	_SendString
  1222  068F                     l2146:
  1223                           
  1224                           ;Master.c: 94: }
  1225  068F  300D               	movlw	13
  1226  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0692  00DB               	movwf	??_main
  1229  0693  085B               	movf	??_main,w
  1230  0694  00CD               	movwf	WriteNumber@columna
  1231  0695  0860               	movf	_Sensor3,w
  1232  0696  00DC               	movwf	??_main+1
  1233  0697  085C               	movf	??_main+1,w
  1234  0698  00CE               	movwf	WriteNumber@valor
  1235  0699  3003               	movlw	3
  1236  069A  00DD               	movwf	??_main+2
  1237  069B  085D               	movf	??_main+2,w
  1238  069C  00CF               	movwf	WriteNumber@formato
  1239  069D  3002               	movlw	2
  1240  069E  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1241  06A3                     l2148:
  1242                           
  1243                           ;Master.c: 96: 
  1244  06A3  3006               	movlw	6
  1245  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1246  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1247  06A6  00DD               	movwf	??_main+2
  1248  06A7  3013               	movlw	19
  1249  06A8  00DC               	movwf	??_main+1
  1250  06A9  30AD               	movlw	173
  1251  06AA  00DB               	movwf	??_main
  1252  06AB                     u2567:
  1253  06AB  0BDB               	decfsz	??_main,f
  1254  06AC  2EAB               	goto	u2567
  1255  06AD  0BDC               	decfsz	??_main+1,f
  1256  06AE  2EAB               	goto	u2567
  1257  06AF  0BDD               	decfsz	??_main+2,f
  1258  06B0  2EAB               	goto	u2567
  1259  06B1                     l2150:
  1260                           
  1261                           ;Master.c: 97: 
  1262  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1263  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1264  06B3  01DE               	clrf	main@i
  1265  06B4  01DF               	clrf	main@i+1
  1266  06B5                     l2156:
  1267                           
  1268                           ;Master.c: 98: 
  1269  06B5  3008               	movlw	8
  1270  06B6  120A  158A  25E5  120A  118A  	fcall	_SendChar
  1271  06BB                     l2158:
  1272                           
  1273                           ;Master.c: 99: 
  1274  06BB  3001               	movlw	1
  1275  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1276  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1277  06BE  07DE               	addwf	main@i,f
  1278  06BF  1803               	skipnc
  1279  06C0  0ADF               	incf	main@i+1,f
  1280  06C1  3000               	movlw	0
  1281  06C2  07DF               	addwf	main@i+1,f
  1282  06C3                     l2160:
  1283  06C3  085F               	movf	main@i+1,w
  1284  06C4  3A80               	xorlw	128
  1285  06C5  00FF               	movwf	btemp+1
  1286  06C6  3080               	movlw	128
  1287  06C7  027F               	subwf	btemp+1,w
  1288  06C8  1D03               	skipz
  1289  06C9  2ECC               	goto	u2495
  1290  06CA  301B               	movlw	27
  1291  06CB  025E               	subwf	main@i,w
  1292  06CC                     u2495:
  1293  06CC  1C03               	skipc
  1294  06CD  2ECF               	goto	u2491
  1295  06CE  2ED0               	goto	u2490
  1296  06CF                     u2491:
  1297  06CF  2EB5               	goto	l2156
  1298  06D0                     u2490:
  1299  06D0  2DD2               	goto	l2094
  1300  06D1  120A  118A  280C   	ljmp	start
  1301  06D4                     __end_of_main:
  1302                           
  1303                           	psect	text1
  1304  0DCF                     __ptext1:	
  1305 ;; *************** function _spiWrite *****************
  1306 ;; Defined at:
  1307 ;;		line 34 in file "SPI.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  dat             1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  dat             1    3[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    2
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _spiWrite
  1337  0DCF                     _spiWrite:
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _spiWrite: [wreg]
  1341                           ;spiWrite@dat stored from wreg
  1342  0DCF  00F3               	movwf	spiWrite@dat
  1343  0DD0                     l1752:
  1344                           
  1345                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1346  0DD0  0873               	movf	spiWrite@dat,w
  1347  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0DD3  0093               	movwf	19	;volatile
  1350  0DD4                     l208:
  1351  0DD4  0008               	return
  1352  0DD5                     __end_of_spiWrite:
  1353                           
  1354                           	psect	text2
  1355  0DDC                     __ptext2:	
  1356 ;; *************** function _spiRead *****************
  1357 ;; Defined at:
  1358 ;;		line 47 in file "SPI.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      unsigned char 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		_spiReceiveWait
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _spiRead
  1388  0DDC                     _spiRead:
  1389  0DDC                     l1754:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1392                           
  1393                           
  1394                           ;SPI.c: 49:     spiReceiveWait();
  1395  0DDC  120A  158A  25D5  120A  158A  	fcall	_spiReceiveWait
  1396  0DE1                     l1756:
  1397                           
  1398                           ;SPI.c: 50:     return(SSPBUF);
  1399  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0DE3  0813               	movf	19,w	;volatile
  1402  0DE4                     l216:
  1403  0DE4  0008               	return
  1404  0DE5                     __end_of_spiRead:
  1405                           
  1406                           	psect	text3
  1407  0DD5                     __ptext3:	
  1408 ;; *************** function _spiReceiveWait *****************
  1409 ;; Defined at:
  1410 ;;		line 29 in file "SPI.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		None
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    2
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_spiRead
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _spiReceiveWait
  1440  0DD5                     _spiReceiveWait:
  1441  0DD5                     l1444:	
  1442                           ;incstack = 0
  1443                           ; Regs used in _spiReceiveWait: []
  1444                           
  1445  0DD5                     l202:	
  1446                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1447                           
  1448  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1449  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1450  0DD7  1C14               	btfss	20,0	;volatile
  1451  0DD8  2DDA               	goto	u1121
  1452  0DD9  2DDB               	goto	u1120
  1453  0DDA                     u1121:
  1454  0DDA  2DD5               	goto	l202
  1455  0DDB                     u1120:
  1456  0DDB                     l205:
  1457  0DDB  0008               	return
  1458  0DDC                     __end_of_spiReceiveWait:
  1459                           
  1460                           	psect	text4
  1461  0EAC                     __ptext4:	
  1462 ;; *************** function _setup *****************
  1463 ;; Defined at:
  1464 ;;		line 110 in file "Master.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0
  1481 ;;      Totals:         0       0       0       0       0
  1482 ;;Total ram usage:        0 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    3
  1485 ;; This function calls:
  1486 ;;		_spiInit
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _setup
  1494  0EAC                     _setup:
  1495  0EAC                     l1706:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1498                           
  1499  0EAC  1683               	bsf	3,5	;RP0=1, select bank1
  1500  0EAD  1303               	bcf	3,6	;RP1=0, select bank1
  1501  0EAE  0187               	clrf	7	;volatile
  1502  0EAF                     l1708:
  1503  0EAF  1607               	bsf	7,4	;volatile
  1504  0EB0                     l1710:
  1505  0EB0  1787               	bsf	7,7	;volatile
  1506  0EB1  0188               	clrf	8	;volatile
  1507  0EB2  1683               	bsf	3,5	;RP0=1, select bank3
  1508  0EB3  1703               	bsf	3,6	;RP1=1, select bank3
  1509  0EB4  0188               	clrf	8	;volatile
  1510  0EB5  0189               	clrf	9	;volatile
  1511  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0EB8  0185               	clrf	5	;volatile
  1514  0EB9  0186               	clrf	6	;volatile
  1515  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0EBC  01E2               	clrf	_Sensor1
  1518  0EBD  01E1               	clrf	_Sensor2
  1519  0EBE  01E0               	clrf	_Sensor3
  1520  0EBF                     l1712:
  1521  0EBF  178B               	bsf	11,7	;volatile
  1522  0EC0                     l1714:
  1523  0EC0  170B               	bsf	11,6	;volatile
  1524  0EC1                     l1716:
  1525  0EC1  01F3               	clrf	spiInit@sDataSample
  1526  0EC2  01F4               	clrf	spiInit@sClockIdle
  1527  0EC3  01F5               	clrf	spiInit@sTransmitEdge
  1528  0EC4  3020               	movlw	32
  1529  0EC5  120A  158A  2620  120A  158A  	fcall	_spiInit
  1530  0ECA                     l75:
  1531  0ECA  0008               	return
  1532  0ECB                     __end_of_setup:
  1533                           
  1534                           	psect	text5
  1535  0E20                     __ptext5:	
  1536 ;; *************** function _spiInit *****************
  1537 ;; Defined at:
  1538 ;;		line 12 in file "SPI.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  sType           1    wreg     enum E1264
  1541 ;;  sDataSample     1    3[COMMON] enum E1272
  1542 ;;  sClockIdle      1    4[COMMON] enum E1276
  1543 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  sType           1    6[COMMON] enum E1264
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         3       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0
  1558 ;;      Totals:         4       0       0       0       0
  1559 ;;Total ram usage:        4 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    2
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_setup
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _spiInit
  1571  0E20                     _spiInit:
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1575                           ;spiInit@sType stored from wreg
  1576  0E20  00F6               	movwf	spiInit@sType
  1577  0E21                     l1434:
  1578                           
  1579                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1580  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0E23  1287               	bcf	7,5	;volatile
  1583                           
  1584                           ;SPI.c: 15:     if(sType & 0b00000100)
  1585  0E24  1D76               	btfss	spiInit@sType,2
  1586  0E25  2E27               	goto	u1111
  1587  0E26  2E28               	goto	u1110
  1588  0E27                     u1111:
  1589  0E27  2E2C               	goto	l1440
  1590  0E28                     u1110:
  1591  0E28                     l1436:
  1592                           
  1593                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1594  0E28  0875               	movf	spiInit@sTransmitEdge,w
  1595  0E29  0094               	movwf	20	;volatile
  1596  0E2A                     l1438:
  1597                           
  1598                           ;SPI.c: 18:         TRISC3 = 1;
  1599  0E2A  1587               	bsf	7,3	;volatile
  1600                           
  1601                           ;SPI.c: 19:     }
  1602  0E2B  2E30               	goto	l198
  1603  0E2C                     l1440:
  1604                           
  1605                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1606  0E2C  0873               	movf	spiInit@sDataSample,w
  1607  0E2D  0475               	iorwf	spiInit@sTransmitEdge,w
  1608  0E2E  0094               	movwf	20	;volatile
  1609  0E2F                     l1442:
  1610                           
  1611                           ;SPI.c: 23:         TRISC3 = 0;
  1612  0E2F  1187               	bcf	7,3	;volatile
  1613  0E30                     l198:	
  1614                           ;SPI.c: 24:     }
  1615                           
  1616                           
  1617                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1618  0E30  0876               	movf	spiInit@sType,w
  1619  0E31  0474               	iorwf	spiInit@sClockIdle,w
  1620  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0E34  0094               	movwf	20	;volatile
  1623  0E35                     l199:
  1624  0E35  0008               	return
  1625  0E36                     __end_of_spiInit:
  1626                           
  1627                           	psect	text6
  1628  037B                     __ptext6:	
  1629 ;; *************** function _WriteNumber *****************
  1630 ;; Defined at:
  1631 ;;		line 147 in file "Master.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  fila            1    wreg     unsigned char 
  1634 ;;  columna         1   45[BANK0 ] unsigned char 
  1635 ;;  valor           1   46[BANK0 ] unsigned char 
  1636 ;;  formato         1   47[BANK0 ] unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  fila            1   58[BANK0 ] unsigned char 
  1639 ;;  temp            2   56[BANK0 ] unsigned int 
  1640 ;;  dec             1   55[BANK0 ] unsigned char 
  1641 ;;  unidad          1   54[BANK0 ] unsigned char 
  1642 ;;  cent            1   53[BANK0 ] unsigned char 
  1643 ;;  cor             1   52[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       3       0       0       0
  1654 ;;      Locals:         0       7       0       0       0
  1655 ;;      Temps:          0       4       0       0       0
  1656 ;;      Totals:         0      14       0       0       0
  1657 ;;Total ram usage:       14 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    5
  1660 ;; This function calls:
  1661 ;;		_Lcd_Set_Cursor
  1662 ;;		_Lcd_Write_Char
  1663 ;;		_Lcd_Write_String
  1664 ;;		_SendChar
  1665 ;;		_SendString
  1666 ;;		___flmul
  1667 ;;		___fltol
  1668 ;;		___lwdiv
  1669 ;;		___wmul
  1670 ;;		___xxtofl
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _WriteNumber
  1678  037B                     _WriteNumber:
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _WriteNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1682                           ;WriteNumber@fila stored from wreg
  1683  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1684  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1685  037D  00DA               	movwf	WriteNumber@fila
  1686  037E                     l2016:
  1687                           
  1688                           ;Master.c: 156:     uint16_t temp;;Master.c: 157:     uint8_t unidad, dec, cent;;Master.
      +                          c: 158:     uint8_t cor;;Master.c: 160:     if (formato == 3) {
  1689  037E  3003               	movlw	3
  1690  037F  064F               	xorwf	WriteNumber@formato,w
  1691  0380  1D03               	btfss	3,2
  1692  0381  2B83               	goto	u2331
  1693  0382  2B84               	goto	u2330
  1694  0383                     u2331:
  1695  0383  2C14               	goto	l2030
  1696  0384                     u2330:
  1697  0384                     l2018:
  1698                           
  1699                           ;Master.c: 161:         cor = 1;
  1700  0384  01D4               	clrf	WriteNumber@cor
  1701  0385  0AD4               	incf	WriteNumber@cor,f
  1702  0386                     l2020:
  1703                           
  1704                           ;Master.c: 162:         if (valor > 68) {
  1705  0386  3045               	movlw	69
  1706  0387  024E               	subwf	WriteNumber@valor,w
  1707  0388  1C03               	skipc
  1708  0389  2B8B               	goto	u2341
  1709  038A  2B8C               	goto	u2340
  1710  038B                     u2341:
  1711  038B  2BCB               	goto	l2024
  1712  038C                     u2340:
  1713  038C                     l2022:
  1714                           
  1715                           ;Master.c: 168:             temp = 0.803 * (valor - 68);
  1716  038C  084E               	movf	WriteNumber@valor,w
  1717  038D  3EBC               	addlw	188
  1718  038E  00F3               	movwf	___xxtofl@val
  1719  038F  30FF               	movlw	255
  1720  0390  1803               	skipnc
  1721  0391  3000               	movlw	0
  1722  0392  00F4               	movwf	___xxtofl@val+1
  1723  0393  01F5               	clrf	___xxtofl@val+2
  1724  0394  1BF4               	btfsc	___xxtofl@val+1,7
  1725  0395  03F5               	decf	___xxtofl@val+2,f
  1726  0396  0875               	movf	___xxtofl@val+2,w
  1727  0397  00F6               	movwf	___xxtofl@val+3
  1728  0398  3001               	movlw	1
  1729  0399  120A  118A  26D4  120A  118A  	fcall	___xxtofl
  1730  039E  0876               	movf	?___xxtofl+3,w
  1731  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1732  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1733  03A1  00B1               	movwf	___flmul@a+3
  1734  03A2  0875               	movf	?___xxtofl+2,w
  1735  03A3  00B0               	movwf	___flmul@a+2
  1736  03A4  0874               	movf	?___xxtofl+1,w
  1737  03A5  00AF               	movwf	___flmul@a+1
  1738  03A6  0873               	movf	?___xxtofl,w
  1739  03A7  00AE               	movwf	___flmul@a
  1740  03A8  303F               	movlw	63
  1741  03A9  00AD               	movwf	___flmul@b+3
  1742  03AA  304D               	movlw	77
  1743  03AB  00AC               	movwf	___flmul@b+2
  1744  03AC  3091               	movlw	145
  1745  03AD  00AB               	movwf	___flmul@b+1
  1746  03AE  3068               	movlw	104
  1747  03AF  00AA               	movwf	___flmul@b
  1748  03B0  120A  118A  201A  120A  118A  	fcall	___flmul
  1749  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1750  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1751  03B7  082D               	movf	?___flmul+3,w
  1752  03B8  00C7               	movwf	___fltol@f1+3
  1753  03B9  082C               	movf	?___flmul+2,w
  1754  03BA  00C6               	movwf	___fltol@f1+2
  1755  03BB  082B               	movf	?___flmul+1,w
  1756  03BC  00C5               	movwf	___fltol@f1+1
  1757  03BD  082A               	movf	?___flmul,w
  1758  03BE  00C4               	movwf	___fltol@f1
  1759  03BF  120A  158A  2784  120A  118A  	fcall	___fltol
  1760  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1761  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1762  03C6  0845               	movf	?___fltol+1,w
  1763  03C7  00D9               	movwf	WriteNumber@temp+1
  1764  03C8  0844               	movf	?___fltol,w
  1765  03C9  00D8               	movwf	WriteNumber@temp
  1766                           
  1767                           ;Master.c: 169:         } else if (valor < 68) {
  1768  03CA  2C62               	goto	l2040
  1769  03CB                     l2024:
  1770  03CB  3044               	movlw	68
  1771  03CC  024E               	subwf	WriteNumber@valor,w
  1772  03CD  1803               	skipnc
  1773  03CE  2BD0               	goto	u2351
  1774  03CF  2BD1               	goto	u2350
  1775  03D0                     u2351:
  1776  03D0  2C11               	goto	l2028
  1777  03D1                     u2350:
  1778  03D1                     l2026:
  1779                           
  1780                           ;Master.c: 170:             temp = 0.803 * (69 - valor);
  1781  03D1  3045               	movlw	69
  1782  03D2  00D0               	movwf	??_WriteNumber
  1783  03D3  084E               	movf	WriteNumber@valor,w
  1784  03D4  0250               	subwf	??_WriteNumber,w
  1785  03D5  00F3               	movwf	___xxtofl@val
  1786  03D6  01F4               	clrf	___xxtofl@val+1
  1787  03D7  1C03               	skipc
  1788  03D8  03F4               	decf	___xxtofl@val+1,f
  1789  03D9  01F5               	clrf	___xxtofl@val+2
  1790  03DA  1BF4               	btfsc	___xxtofl@val+1,7
  1791  03DB  03F5               	decf	___xxtofl@val+2,f
  1792  03DC  0875               	movf	___xxtofl@val+2,w
  1793  03DD  00F6               	movwf	___xxtofl@val+3
  1794  03DE  3001               	movlw	1
  1795  03DF  120A  118A  26D4  120A  118A  	fcall	___xxtofl
  1796  03E4  0876               	movf	?___xxtofl+3,w
  1797  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1798  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1799  03E7  00B1               	movwf	___flmul@a+3
  1800  03E8  0875               	movf	?___xxtofl+2,w
  1801  03E9  00B0               	movwf	___flmul@a+2
  1802  03EA  0874               	movf	?___xxtofl+1,w
  1803  03EB  00AF               	movwf	___flmul@a+1
  1804  03EC  0873               	movf	?___xxtofl,w
  1805  03ED  00AE               	movwf	___flmul@a
  1806  03EE  303F               	movlw	63
  1807  03EF  00AD               	movwf	___flmul@b+3
  1808  03F0  304D               	movlw	77
  1809  03F1  00AC               	movwf	___flmul@b+2
  1810  03F2  3091               	movlw	145
  1811  03F3  00AB               	movwf	___flmul@b+1
  1812  03F4  3068               	movlw	104
  1813  03F5  00AA               	movwf	___flmul@b
  1814  03F6  120A  118A  201A  120A  118A  	fcall	___flmul
  1815  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1816  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1817  03FD  082D               	movf	?___flmul+3,w
  1818  03FE  00C7               	movwf	___fltol@f1+3
  1819  03FF  082C               	movf	?___flmul+2,w
  1820  0400  00C6               	movwf	___fltol@f1+2
  1821  0401  082B               	movf	?___flmul+1,w
  1822  0402  00C5               	movwf	___fltol@f1+1
  1823  0403  082A               	movf	?___flmul,w
  1824  0404  00C4               	movwf	___fltol@f1
  1825  0405  120A  158A  2784  120A  118A  	fcall	___fltol
  1826  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1827  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1828  040C  0845               	movf	?___fltol+1,w
  1829  040D  00D9               	movwf	WriteNumber@temp+1
  1830  040E  0844               	movf	?___fltol,w
  1831  040F  00D8               	movwf	WriteNumber@temp
  1832                           
  1833                           ;Master.c: 171:         } else {
  1834  0410  2C62               	goto	l2040
  1835  0411                     l2028:
  1836                           
  1837                           ;Master.c: 172:             temp = 0;
  1838  0411  01D8               	clrf	WriteNumber@temp
  1839  0412  01D9               	clrf	WriteNumber@temp+1
  1840  0413  2C62               	goto	l2040
  1841  0414                     l2030:
  1842  0414  034F               	decf	WriteNumber@formato,w
  1843  0415  1D03               	btfss	3,2
  1844  0416  2C18               	goto	u2361
  1845  0417  2C19               	goto	u2360
  1846  0418                     u2361:
  1847  0418  2C5A               	goto	l2036
  1848  0419                     u2360:
  1849  0419                     l2032:
  1850                           
  1851                           ;Master.c: 176:         cor = 0;
  1852  0419  01D4               	clrf	WriteNumber@cor
  1853  041A                     l2034:
  1854                           
  1855                           ;Master.c: 177:         temp = valor * 1.961;
  1856  041A  084E               	movf	WriteNumber@valor,w
  1857  041B  00D0               	movwf	??_WriteNumber
  1858  041C  01D1               	clrf	??_WriteNumber+1
  1859  041D  01D2               	clrf	??_WriteNumber+2
  1860  041E  01D3               	clrf	??_WriteNumber+3
  1861  041F  0853               	movf	??_WriteNumber+3,w
  1862  0420  00F6               	movwf	___xxtofl@val+3
  1863  0421  0852               	movf	??_WriteNumber+2,w
  1864  0422  00F5               	movwf	___xxtofl@val+2
  1865  0423  0851               	movf	??_WriteNumber+1,w
  1866  0424  00F4               	movwf	___xxtofl@val+1
  1867  0425  0850               	movf	??_WriteNumber,w
  1868  0426  00F3               	movwf	___xxtofl@val
  1869  0427  3001               	movlw	1
  1870  0428  120A  118A  26D4  120A  118A  	fcall	___xxtofl
  1871  042D  0876               	movf	?___xxtofl+3,w
  1872  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1873  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0430  00B1               	movwf	___flmul@a+3
  1875  0431  0875               	movf	?___xxtofl+2,w
  1876  0432  00B0               	movwf	___flmul@a+2
  1877  0433  0874               	movf	?___xxtofl+1,w
  1878  0434  00AF               	movwf	___flmul@a+1
  1879  0435  0873               	movf	?___xxtofl,w
  1880  0436  00AE               	movwf	___flmul@a
  1881  0437  303F               	movlw	63
  1882  0438  00AD               	movwf	___flmul@b+3
  1883  0439  30FB               	movlw	251
  1884  043A  00AC               	movwf	___flmul@b+2
  1885  043B  3002               	movlw	2
  1886  043C  00AB               	movwf	___flmul@b+1
  1887  043D  300C               	movlw	12
  1888  043E  00AA               	movwf	___flmul@b
  1889  043F  120A  118A  201A  120A  118A  	fcall	___flmul
  1890  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0446  082D               	movf	?___flmul+3,w
  1893  0447  00C7               	movwf	___fltol@f1+3
  1894  0448  082C               	movf	?___flmul+2,w
  1895  0449  00C6               	movwf	___fltol@f1+2
  1896  044A  082B               	movf	?___flmul+1,w
  1897  044B  00C5               	movwf	___fltol@f1+1
  1898  044C  082A               	movf	?___flmul,w
  1899  044D  00C4               	movwf	___fltol@f1
  1900  044E  120A  158A  2784  120A  118A  	fcall	___fltol
  1901  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0455  0845               	movf	?___fltol+1,w
  1904  0456  00D9               	movwf	WriteNumber@temp+1
  1905  0457  0844               	movf	?___fltol,w
  1906  0458  00D8               	movwf	WriteNumber@temp
  1907                           
  1908                           ;Master.c: 179:     } else {
  1909  0459  2C62               	goto	l2040
  1910  045A                     l2036:
  1911                           
  1912                           ;Master.c: 180:         cor = 0;
  1913  045A  01D4               	clrf	WriteNumber@cor
  1914  045B                     l2038:
  1915                           
  1916                           ;Master.c: 181:         temp = valor;
  1917  045B  084E               	movf	WriteNumber@valor,w
  1918  045C  00D0               	movwf	??_WriteNumber
  1919  045D  01D1               	clrf	??_WriteNumber+1
  1920  045E  0850               	movf	??_WriteNumber,w
  1921  045F  00D8               	movwf	WriteNumber@temp
  1922  0460  0851               	movf	??_WriteNumber+1,w
  1923  0461  00D9               	movwf	WriteNumber@temp+1
  1924  0462                     l2040:
  1925                           
  1926                           ;Master.c: 185:     unidad = temp / 100;
  1927  0462  3064               	movlw	100
  1928  0463  00F3               	movwf	___lwdiv@divisor
  1929  0464  3000               	movlw	0
  1930  0465  00F4               	movwf	___lwdiv@divisor+1
  1931  0466  0859               	movf	WriteNumber@temp+1,w
  1932  0467  00F6               	movwf	___lwdiv@dividend+1
  1933  0468  0858               	movf	WriteNumber@temp,w
  1934  0469  00F5               	movwf	___lwdiv@dividend
  1935  046A  120A  158A  273E  120A  118A  	fcall	___lwdiv
  1936  046F  0873               	movf	?___lwdiv,w
  1937  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0472  00D0               	movwf	??_WriteNumber
  1940  0473  0850               	movf	??_WriteNumber,w
  1941  0474  00D6               	movwf	WriteNumber@unidad
  1942  0475                     l2042:
  1943                           
  1944                           ;Master.c: 186:     temp = temp - unidad * 100;
  1945  0475  0856               	movf	WriteNumber@unidad,w
  1946  0476  00D0               	movwf	??_WriteNumber
  1947  0477  01D1               	clrf	??_WriteNumber+1
  1948  0478  0850               	movf	??_WriteNumber,w
  1949  0479  00F3               	movwf	___wmul@multiplier
  1950  047A  0851               	movf	??_WriteNumber+1,w
  1951  047B  00F4               	movwf	___wmul@multiplier+1
  1952  047C  309C               	movlw	156
  1953  047D  00F5               	movwf	___wmul@multiplicand
  1954  047E  30FF               	movlw	255
  1955  047F  00F6               	movwf	___wmul@multiplicand+1
  1956  0480  120A  158A  26F0  120A  118A  	fcall	___wmul
  1957  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0487  0858               	movf	WriteNumber@temp,w
  1960  0488  0773               	addwf	?___wmul,w
  1961  0489  00D8               	movwf	WriteNumber@temp
  1962  048A  0859               	movf	WriteNumber@temp+1,w
  1963  048B  1803               	skipnc
  1964  048C  0A59               	incf	WriteNumber@temp+1,w
  1965  048D  0774               	addwf	?___wmul+1,w
  1966  048E  00D9               	movwf	WriteNumber@temp+1
  1967  048F                     l2044:
  1968                           
  1969                           ;Master.c: 187:     dec = temp / 10;
  1970  048F  300A               	movlw	10
  1971  0490  00F3               	movwf	___lwdiv@divisor
  1972  0491  3000               	movlw	0
  1973  0492  00F4               	movwf	___lwdiv@divisor+1
  1974  0493  0859               	movf	WriteNumber@temp+1,w
  1975  0494  00F6               	movwf	___lwdiv@dividend+1
  1976  0495  0858               	movf	WriteNumber@temp,w
  1977  0496  00F5               	movwf	___lwdiv@dividend
  1978  0497  120A  158A  273E  120A  118A  	fcall	___lwdiv
  1979  049C  0873               	movf	?___lwdiv,w
  1980  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1981  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1982  049F  00D0               	movwf	??_WriteNumber
  1983  04A0  0850               	movf	??_WriteNumber,w
  1984  04A1  00D7               	movwf	WriteNumber@dec
  1985  04A2                     l2046:
  1986                           
  1987                           ;Master.c: 188:     temp = temp - dec * 10;
  1988  04A2  0857               	movf	WriteNumber@dec,w
  1989  04A3  00D0               	movwf	??_WriteNumber
  1990  04A4  01D1               	clrf	??_WriteNumber+1
  1991  04A5  0850               	movf	??_WriteNumber,w
  1992  04A6  00F3               	movwf	___wmul@multiplier
  1993  04A7  0851               	movf	??_WriteNumber+1,w
  1994  04A8  00F4               	movwf	___wmul@multiplier+1
  1995  04A9  30F6               	movlw	246
  1996  04AA  00F5               	movwf	___wmul@multiplicand
  1997  04AB  30FF               	movlw	255
  1998  04AC  00F6               	movwf	___wmul@multiplicand+1
  1999  04AD  120A  158A  26F0  120A  118A  	fcall	___wmul
  2000  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2001  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2002  04B4  0858               	movf	WriteNumber@temp,w
  2003  04B5  0773               	addwf	?___wmul,w
  2004  04B6  00D8               	movwf	WriteNumber@temp
  2005  04B7  0859               	movf	WriteNumber@temp+1,w
  2006  04B8  1803               	skipnc
  2007  04B9  0A59               	incf	WriteNumber@temp+1,w
  2008  04BA  0774               	addwf	?___wmul+1,w
  2009  04BB  00D9               	movwf	WriteNumber@temp+1
  2010  04BC                     l2048:
  2011                           
  2012                           ;Master.c: 189:     cent = temp;
  2013  04BC  0858               	movf	WriteNumber@temp,w
  2014  04BD  00D0               	movwf	??_WriteNumber
  2015  04BE  0850               	movf	??_WriteNumber,w
  2016  04BF  00D5               	movwf	WriteNumber@cent
  2017  04C0                     l2050:
  2018                           
  2019                           ;Master.c: 194:     unidad = unidad + 48;
  2020  04C0  0856               	movf	WriteNumber@unidad,w
  2021  04C1  3E30               	addlw	48
  2022  04C2  00D0               	movwf	??_WriteNumber
  2023  04C3  0850               	movf	??_WriteNumber,w
  2024  04C4  00D6               	movwf	WriteNumber@unidad
  2025  04C5                     l2052:
  2026                           
  2027                           ;Master.c: 195:     dec = dec + 48;
  2028  04C5  0857               	movf	WriteNumber@dec,w
  2029  04C6  3E30               	addlw	48
  2030  04C7  00D0               	movwf	??_WriteNumber
  2031  04C8  0850               	movf	??_WriteNumber,w
  2032  04C9  00D7               	movwf	WriteNumber@dec
  2033  04CA                     l2054:
  2034                           
  2035                           ;Master.c: 196:     cent = cent + 48;
  2036  04CA  0855               	movf	WriteNumber@cent,w
  2037  04CB  3E30               	addlw	48
  2038  04CC  00D0               	movwf	??_WriteNumber
  2039  04CD  0850               	movf	??_WriteNumber,w
  2040  04CE  00D5               	movwf	WriteNumber@cent
  2041  04CF                     l2056:
  2042                           
  2043                           ;Master.c: 200:     if ((formato == 3)&&(valor < 68)) {
  2044  04CF  3003               	movlw	3
  2045  04D0  064F               	xorwf	WriteNumber@formato,w
  2046  04D1  1D03               	btfss	3,2
  2047  04D2  2CD4               	goto	u2371
  2048  04D3  2CD5               	goto	u2370
  2049  04D4                     u2371:
  2050  04D4  2CF2               	goto	l2066
  2051  04D5                     u2370:
  2052  04D5                     l2058:
  2053  04D5  3044               	movlw	68
  2054  04D6  024E               	subwf	WriteNumber@valor,w
  2055  04D7  1803               	skipnc
  2056  04D8  2CDA               	goto	u2381
  2057  04D9  2CDB               	goto	u2380
  2058  04DA                     u2381:
  2059  04DA  2CF2               	goto	l2066
  2060  04DB                     u2380:
  2061  04DB                     l2060:
  2062                           
  2063                           ;Master.c: 201:         Lcd_Set_Cursor(fila, columna);
  2064  04DB  084D               	movf	WriteNumber@columna,w
  2065  04DC  00D0               	movwf	??_WriteNumber
  2066  04DD  0850               	movf	??_WriteNumber,w
  2067  04DE  00F7               	movwf	Lcd_Set_Cursor@b
  2068  04DF  085A               	movf	WriteNumber@fila,w
  2069  04E0  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2070  04E5                     l2062:
  2071                           
  2072                           ;Master.c: 202:         Lcd_Write_String("-");
  2073  04E5  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2074  04E6  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2075  04EB                     l2064:
  2076                           
  2077                           ;Master.c: 203:         SendString("-");
  2078  04EB  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2079  04EC  120A  158A  268D  120A  118A  	fcall	_SendString
  2080                           
  2081                           ;Master.c: 204:     } else if ((formato == 3)&&(valor >= 68)) {
  2082  04F1  2D14               	goto	l95
  2083  04F2                     l2066:
  2084  04F2  3003               	movlw	3
  2085  04F3  064F               	xorwf	WriteNumber@formato,w
  2086  04F4  1D03               	btfss	3,2
  2087  04F5  2CF7               	goto	u2391
  2088  04F6  2CF8               	goto	u2390
  2089  04F7                     u2391:
  2090  04F7  2D14               	goto	l95
  2091  04F8                     u2390:
  2092  04F8                     l2068:
  2093  04F8  3044               	movlw	68
  2094  04F9  024E               	subwf	WriteNumber@valor,w
  2095  04FA  1C03               	skipc
  2096  04FB  2CFD               	goto	u2401
  2097  04FC  2CFE               	goto	u2400
  2098  04FD                     u2401:
  2099  04FD  2D14               	goto	l95
  2100  04FE                     u2400:
  2101  04FE                     l2070:
  2102                           
  2103                           ;Master.c: 205:         Lcd_Set_Cursor(fila, columna);
  2104  04FE  084D               	movf	WriteNumber@columna,w
  2105  04FF  00D0               	movwf	??_WriteNumber
  2106  0500  0850               	movf	??_WriteNumber,w
  2107  0501  00F7               	movwf	Lcd_Set_Cursor@b
  2108  0502  085A               	movf	WriteNumber@fila,w
  2109  0503  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2110  0508                     l2072:
  2111                           
  2112                           ;Master.c: 206:         Lcd_Write_String(" ");
  2113  0508  3021               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  2114  0509  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2115  050E                     l2074:
  2116                           
  2117                           ;Master.c: 207:         SendString(" ");
  2118  050E  3021               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  2119  050F  120A  158A  268D  120A  118A  	fcall	_SendString
  2120  0514                     l95:
  2121                           
  2122                           ;Master.c: 209:     Lcd_Set_Cursor(fila, columna + cor);
  2123  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0516  0854               	movf	WriteNumber@cor,w
  2126  0517  074D               	addwf	WriteNumber@columna,w
  2127  0518  00D0               	movwf	??_WriteNumber
  2128  0519  0850               	movf	??_WriteNumber,w
  2129  051A  00F7               	movwf	Lcd_Set_Cursor@b
  2130  051B  085A               	movf	WriteNumber@fila,w
  2131  051C  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2132                           
  2133                           ;Master.c: 210:     Lcd_Write_Char(unidad);
  2134  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0523  0856               	movf	WriteNumber@unidad,w
  2137  0524  120A  158A  260A  120A  118A  	fcall	_Lcd_Write_Char
  2138                           
  2139                           ;Master.c: 211:     SendChar(unidad);
  2140  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2141  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2142  052B  0856               	movf	WriteNumber@unidad,w
  2143  052C  120A  158A  25E5  120A  118A  	fcall	_SendChar
  2144  0531                     l2076:
  2145                           
  2146                           ;Master.c: 212:     if ((formato == 1)) {
  2147  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0533  034F               	decf	WriteNumber@formato,w
  2150  0534  1D03               	btfss	3,2
  2151  0535  2D37               	goto	u2411
  2152  0536  2D38               	goto	u2410
  2153  0537                     u2411:
  2154  0537  2D50               	goto	l97
  2155  0538                     u2410:
  2156  0538                     l2078:
  2157                           
  2158                           ;Master.c: 213:         Lcd_Set_Cursor(fila, columna + 1 + cor);
  2159  0538  0854               	movf	WriteNumber@cor,w
  2160  0539  074D               	addwf	WriteNumber@columna,w
  2161  053A  3E01               	addlw	1
  2162  053B  00D0               	movwf	??_WriteNumber
  2163  053C  0850               	movf	??_WriteNumber,w
  2164  053D  00F7               	movwf	Lcd_Set_Cursor@b
  2165  053E  085A               	movf	WriteNumber@fila,w
  2166  053F  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2167  0544                     l2080:
  2168                           
  2169                           ;Master.c: 214:         Lcd_Write_String(".");
  2170  0544  3025               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2171  0545  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2172  054A                     l2082:
  2173                           
  2174                           ;Master.c: 215:         SendString(".");
  2175  054A  3025               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2176  054B  120A  158A  268D  120A  118A  	fcall	_SendString
  2177  0550                     l97:	
  2178                           ;Master.c: 216:     }
  2179                           
  2180                           
  2181                           ;Master.c: 217:     Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 1);
  2182  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0552  084F               	movf	WriteNumber@formato,w
  2185  0553  1D03               	btfss	3,2
  2186  0554  2D56               	goto	u2421
  2187  0555  2D58               	goto	u2420
  2188  0556                     u2421:
  2189  0556  3001               	movlw	1
  2190  0557  2D59               	goto	u2430
  2191  0558                     u2420:
  2192  0558  3000               	movlw	0
  2193  0559                     u2430:
  2194  0559  074D               	addwf	WriteNumber@columna,w
  2195  055A  3E01               	addlw	1
  2196  055B  00D0               	movwf	??_WriteNumber
  2197  055C  0850               	movf	??_WriteNumber,w
  2198  055D  00F7               	movwf	Lcd_Set_Cursor@b
  2199  055E  085A               	movf	WriteNumber@fila,w
  2200  055F  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2201                           
  2202                           ;Master.c: 218:     Lcd_Write_Char(dec);
  2203  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0566  0857               	movf	WriteNumber@dec,w
  2206  0567  120A  158A  260A  120A  118A  	fcall	_Lcd_Write_Char
  2207                           
  2208                           ;Master.c: 219:     SendChar(dec);
  2209  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2210  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2211  056E  0857               	movf	WriteNumber@dec,w
  2212  056F  120A  158A  25E5  120A  118A  	fcall	_SendChar
  2213                           
  2214                           ;Master.c: 220:     Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 2);
  2215  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0576  084F               	movf	WriteNumber@formato,w
  2218  0577  1D03               	btfss	3,2
  2219  0578  2D7A               	goto	u2441
  2220  0579  2D7C               	goto	u2440
  2221  057A                     u2441:
  2222  057A  3001               	movlw	1
  2223  057B  2D7D               	goto	u2450
  2224  057C                     u2440:
  2225  057C  3000               	movlw	0
  2226  057D                     u2450:
  2227  057D  074D               	addwf	WriteNumber@columna,w
  2228  057E  3E02               	addlw	2
  2229  057F  00D0               	movwf	??_WriteNumber
  2230  0580  0850               	movf	??_WriteNumber,w
  2231  0581  00F7               	movwf	Lcd_Set_Cursor@b
  2232  0582  085A               	movf	WriteNumber@fila,w
  2233  0583  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2234                           
  2235                           ;Master.c: 221:     Lcd_Write_Char(cent);
  2236  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2238  058A  0855               	movf	WriteNumber@cent,w
  2239  058B  120A  158A  260A  120A  118A  	fcall	_Lcd_Write_Char
  2240                           
  2241                           ;Master.c: 222:     SendChar(cent);
  2242  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0592  0855               	movf	WriteNumber@cent,w
  2245  0593  120A  158A  25E5  120A  118A  	fcall	_SendChar
  2246  0598                     l2084:
  2247                           
  2248                           ;Master.c: 223:     if (formato == 1) {
  2249  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2251  059A  034F               	decf	WriteNumber@formato,w
  2252  059B  1D03               	btfss	3,2
  2253  059C  2D9E               	goto	u2461
  2254  059D  2D9F               	goto	u2460
  2255  059E                     u2461:
  2256  059E  2DBD               	goto	l99
  2257  059F                     u2460:
  2258  059F                     l2086:
  2259                           
  2260                           ;Master.c: 224:         Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 3);
  2261  059F  084F               	movf	WriteNumber@formato,w
  2262  05A0  1D03               	btfss	3,2
  2263  05A1  2DA3               	goto	u2471
  2264  05A2  2DA5               	goto	u2470
  2265  05A3                     u2471:
  2266  05A3  3001               	movlw	1
  2267  05A4  2DA6               	goto	u2480
  2268  05A5                     u2470:
  2269  05A5  3000               	movlw	0
  2270  05A6                     u2480:
  2271  05A6  074D               	addwf	WriteNumber@columna,w
  2272  05A7  3E03               	addlw	3
  2273  05A8  00D0               	movwf	??_WriteNumber
  2274  05A9  0850               	movf	??_WriteNumber,w
  2275  05AA  00F7               	movwf	Lcd_Set_Cursor@b
  2276  05AB  085A               	movf	WriteNumber@fila,w
  2277  05AC  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2278  05B1                     l2088:
  2279                           
  2280                           ;Master.c: 225:         Lcd_Write_String("V");
  2281  05B1  3027               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2282  05B2  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2283  05B7                     l2090:
  2284                           
  2285                           ;Master.c: 226:         SendString("V");
  2286  05B7  3027               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2287  05B8  120A  158A  268D  120A  118A  	fcall	_SendString
  2288  05BD                     l99:
  2289  05BD  0008               	return
  2290  05BE                     __end_of_WriteNumber:
  2291                           
  2292                           	psect	text7
  2293  06D4                     __ptext7:	
  2294 ;; *************** function ___xxtofl *****************
  2295 ;; Defined at:
  2296 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  sign            1    wreg     unsigned char 
  2299 ;;  val             4    3[COMMON] long 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  sign            1    4[BANK0 ] unsigned char 
  2302 ;;  arg             4    6[BANK0 ] unsigned long 
  2303 ;;  exp             1    5[BANK0 ] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  4    3[COMMON] unsigned char 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         4       0       0       0       0
  2314 ;;      Locals:         0       6       0       0       0
  2315 ;;      Temps:          0       4       0       0       0
  2316 ;;      Totals:         4      10       0       0       0
  2317 ;;Total ram usage:       14 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_WriteNumber
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function ___xxtofl
  2329  06D4                     ___xxtofl:
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2333                           ;___xxtofl@sign stored from wreg
  2334  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2335  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  2336  06D6  00A4               	movwf	___xxtofl@sign
  2337  06D7                     l1972:
  2338  06D7  0824               	movf	___xxtofl@sign,w
  2339  06D8  1903               	btfsc	3,2
  2340  06D9  2EDB               	goto	u2191
  2341  06DA  2EDC               	goto	u2190
  2342  06DB                     u2191:
  2343  06DB  2EF0               	goto	l1978
  2344  06DC                     u2190:
  2345  06DC                     l1974:
  2346  06DC  1FF6               	btfss	___xxtofl@val+3,7
  2347  06DD  2EDF               	goto	u2201
  2348  06DE  2EE0               	goto	u2200
  2349  06DF                     u2201:
  2350  06DF  2EF0               	goto	l1978
  2351  06E0                     u2200:
  2352  06E0                     l1976:
  2353  06E0  0973               	comf	___xxtofl@val,w
  2354  06E1  00A6               	movwf	___xxtofl@arg
  2355  06E2  0974               	comf	___xxtofl@val+1,w
  2356  06E3  00A7               	movwf	___xxtofl@arg+1
  2357  06E4  0975               	comf	___xxtofl@val+2,w
  2358  06E5  00A8               	movwf	___xxtofl@arg+2
  2359  06E6  0976               	comf	___xxtofl@val+3,w
  2360  06E7  00A9               	movwf	___xxtofl@arg+3
  2361  06E8  0AA6               	incf	___xxtofl@arg,f
  2362  06E9  1903               	skipnz
  2363  06EA  0AA7               	incf	___xxtofl@arg+1,f
  2364  06EB  1903               	skipnz
  2365  06EC  0AA8               	incf	___xxtofl@arg+2,f
  2366  06ED  1903               	skipnz
  2367  06EE  0AA9               	incf	___xxtofl@arg+3,f
  2368  06EF  2EF8               	goto	l735
  2369  06F0                     l1978:
  2370  06F0  0876               	movf	___xxtofl@val+3,w
  2371  06F1  00A9               	movwf	___xxtofl@arg+3
  2372  06F2  0875               	movf	___xxtofl@val+2,w
  2373  06F3  00A8               	movwf	___xxtofl@arg+2
  2374  06F4  0874               	movf	___xxtofl@val+1,w
  2375  06F5  00A7               	movwf	___xxtofl@arg+1
  2376  06F6  0873               	movf	___xxtofl@val,w
  2377  06F7  00A6               	movwf	___xxtofl@arg
  2378  06F8                     l735:
  2379  06F8  0876               	movf	___xxtofl@val+3,w
  2380  06F9  0475               	iorwf	___xxtofl@val+2,w
  2381  06FA  0474               	iorwf	___xxtofl@val+1,w
  2382  06FB  0473               	iorwf	___xxtofl@val,w
  2383  06FC  1D03               	skipz
  2384  06FD  2EFF               	goto	u2211
  2385  06FE  2F00               	goto	u2210
  2386  06FF                     u2211:
  2387  06FF  2F09               	goto	l1984
  2388  0700                     u2210:
  2389  0700                     l1980:
  2390  0700  3000               	movlw	0
  2391  0701  00F6               	movwf	?___xxtofl+3
  2392  0702  3000               	movlw	0
  2393  0703  00F5               	movwf	?___xxtofl+2
  2394  0704  3000               	movlw	0
  2395  0705  00F4               	movwf	?___xxtofl+1
  2396  0706  3000               	movlw	0
  2397  0707  00F3               	movwf	?___xxtofl
  2398  0708  2F8F               	goto	l737
  2399  0709                     l1984:
  2400  0709  3096               	movlw	150
  2401  070A  00A0               	movwf	??___xxtofl
  2402  070B  0820               	movf	??___xxtofl,w
  2403  070C  00A5               	movwf	___xxtofl@exp
  2404  070D  2F1B               	goto	l1988
  2405  070E                     l1986:
  2406  070E  3001               	movlw	1
  2407  070F  00A0               	movwf	??___xxtofl
  2408  0710  0820               	movf	??___xxtofl,w
  2409  0711  07A5               	addwf	___xxtofl@exp,f
  2410  0712  3001               	movlw	1
  2411  0713                     u2225:
  2412  0713  1003               	clrc
  2413  0714  0CA9               	rrf	___xxtofl@arg+3,f
  2414  0715  0CA8               	rrf	___xxtofl@arg+2,f
  2415  0716  0CA7               	rrf	___xxtofl@arg+1,f
  2416  0717  0CA6               	rrf	___xxtofl@arg,f
  2417  0718  3EFF               	addlw	-1
  2418  0719  1D03               	skipz
  2419  071A  2F13               	goto	u2225
  2420  071B                     l1988:
  2421  071B  30FE               	movlw	254
  2422  071C  0529               	andwf	___xxtofl@arg+3,w
  2423  071D  1D03               	btfss	3,2
  2424  071E  2F20               	goto	u2231
  2425  071F  2F21               	goto	u2230
  2426  0720                     u2231:
  2427  0720  2F0E               	goto	l1986
  2428  0721                     u2230:
  2429  0721  2F3D               	goto	l741
  2430  0722                     l1990:
  2431  0722  3001               	movlw	1
  2432  0723  00A0               	movwf	??___xxtofl
  2433  0724  0820               	movf	??___xxtofl,w
  2434  0725  07A5               	addwf	___xxtofl@exp,f
  2435  0726                     l1992:
  2436  0726  3001               	movlw	1
  2437  0727  07A6               	addwf	___xxtofl@arg,f
  2438  0728  3000               	movlw	0
  2439  0729  1803               	skipnc
  2440  072A  3001               	movlw	1
  2441  072B  07A7               	addwf	___xxtofl@arg+1,f
  2442  072C  3000               	movlw	0
  2443  072D  1803               	skipnc
  2444  072E  3001               	movlw	1
  2445  072F  07A8               	addwf	___xxtofl@arg+2,f
  2446  0730  3000               	movlw	0
  2447  0731  1803               	skipnc
  2448  0732  3001               	movlw	1
  2449  0733  07A9               	addwf	___xxtofl@arg+3,f
  2450  0734                     l1994:
  2451  0734  3001               	movlw	1
  2452  0735                     u2245:
  2453  0735  1003               	clrc
  2454  0736  0CA9               	rrf	___xxtofl@arg+3,f
  2455  0737  0CA8               	rrf	___xxtofl@arg+2,f
  2456  0738  0CA7               	rrf	___xxtofl@arg+1,f
  2457  0739  0CA6               	rrf	___xxtofl@arg,f
  2458  073A  3EFF               	addlw	-1
  2459  073B  1D03               	skipz
  2460  073C  2F35               	goto	u2245
  2461  073D                     l741:
  2462  073D  30FF               	movlw	255
  2463  073E  0529               	andwf	___xxtofl@arg+3,w
  2464  073F  1D03               	btfss	3,2
  2465  0740  2F42               	goto	u2251
  2466  0741  2F43               	goto	u2250
  2467  0742                     u2251:
  2468  0742  2F22               	goto	l1990
  2469  0743                     u2250:
  2470  0743  2F4F               	goto	l1998
  2471  0744                     l1996:
  2472  0744  3001               	movlw	1
  2473  0745  02A5               	subwf	___xxtofl@exp,f
  2474  0746  3001               	movlw	1
  2475  0747  00A0               	movwf	??___xxtofl
  2476  0748                     u2265:
  2477  0748  1003               	clrc
  2478  0749  0DA6               	rlf	___xxtofl@arg,f
  2479  074A  0DA7               	rlf	___xxtofl@arg+1,f
  2480  074B  0DA8               	rlf	___xxtofl@arg+2,f
  2481  074C  0DA9               	rlf	___xxtofl@arg+3,f
  2482  074D  0BA0               	decfsz	??___xxtofl,f
  2483  074E  2F48               	goto	u2265
  2484  074F                     l1998:
  2485  074F  1BA8               	btfsc	___xxtofl@arg+2,7
  2486  0750  2F52               	goto	u2271
  2487  0751  2F53               	goto	u2270
  2488  0752                     u2271:
  2489  0752  2F59               	goto	l748
  2490  0753                     u2270:
  2491  0753                     l2000:
  2492  0753  3002               	movlw	2
  2493  0754  0225               	subwf	___xxtofl@exp,w
  2494  0755  1803               	skipnc
  2495  0756  2F58               	goto	u2281
  2496  0757  2F59               	goto	u2280
  2497  0758                     u2281:
  2498  0758  2F44               	goto	l1996
  2499  0759                     u2280:
  2500  0759                     l748:
  2501  0759  1825               	btfsc	___xxtofl@exp,0
  2502  075A  2F5C               	goto	u2291
  2503  075B  2F5D               	goto	u2290
  2504  075C                     u2291:
  2505  075C  2F65               	goto	l749
  2506  075D                     u2290:
  2507  075D                     l2002:
  2508  075D  30FF               	movlw	255
  2509  075E  05A6               	andwf	___xxtofl@arg,f
  2510  075F  30FF               	movlw	255
  2511  0760  05A7               	andwf	___xxtofl@arg+1,f
  2512  0761  307F               	movlw	127
  2513  0762  05A8               	andwf	___xxtofl@arg+2,f
  2514  0763  30FF               	movlw	255
  2515  0764  05A9               	andwf	___xxtofl@arg+3,f
  2516  0765                     l749:
  2517  0765  1003               	clrc
  2518  0766  0CA5               	rrf	___xxtofl@exp,f
  2519  0767                     l2004:
  2520  0767  0825               	movf	___xxtofl@exp,w
  2521  0768  00A0               	movwf	??___xxtofl
  2522  0769  01A1               	clrf	??___xxtofl+1
  2523  076A  01A2               	clrf	??___xxtofl+2
  2524  076B  01A3               	clrf	??___xxtofl+3
  2525  076C  3018               	movlw	24
  2526  076D                     u2305:
  2527  076D  1003               	clrc
  2528  076E  0DA0               	rlf	??___xxtofl,f
  2529  076F  0DA1               	rlf	??___xxtofl+1,f
  2530  0770  0DA2               	rlf	??___xxtofl+2,f
  2531  0771  0DA3               	rlf	??___xxtofl+3,f
  2532  0772                     u2300:
  2533  0772  3EFF               	addlw	-1
  2534  0773  1D03               	skipz
  2535  0774  2F6D               	goto	u2305
  2536  0775  0820               	movf	??___xxtofl,w
  2537  0776  04A6               	iorwf	___xxtofl@arg,f
  2538  0777  0821               	movf	??___xxtofl+1,w
  2539  0778  04A7               	iorwf	___xxtofl@arg+1,f
  2540  0779  0822               	movf	??___xxtofl+2,w
  2541  077A  04A8               	iorwf	___xxtofl@arg+2,f
  2542  077B  0823               	movf	??___xxtofl+3,w
  2543  077C  04A9               	iorwf	___xxtofl@arg+3,f
  2544  077D                     l2006:
  2545  077D  0824               	movf	___xxtofl@sign,w
  2546  077E  1903               	btfsc	3,2
  2547  077F  2F81               	goto	u2311
  2548  0780  2F82               	goto	u2310
  2549  0781                     u2311:
  2550  0781  2F87               	goto	l2012
  2551  0782                     u2310:
  2552  0782                     l2008:
  2553  0782  1FF6               	btfss	___xxtofl@val+3,7
  2554  0783  2F85               	goto	u2321
  2555  0784  2F86               	goto	u2320
  2556  0785                     u2321:
  2557  0785  2F87               	goto	l2012
  2558  0786                     u2320:
  2559  0786                     l2010:
  2560  0786  17A9               	bsf	___xxtofl@arg+3,7
  2561  0787                     l2012:
  2562  0787  0829               	movf	___xxtofl@arg+3,w
  2563  0788  00F6               	movwf	?___xxtofl+3
  2564  0789  0828               	movf	___xxtofl@arg+2,w
  2565  078A  00F5               	movwf	?___xxtofl+2
  2566  078B  0827               	movf	___xxtofl@arg+1,w
  2567  078C  00F4               	movwf	?___xxtofl+1
  2568  078D  0826               	movf	___xxtofl@arg,w
  2569  078E  00F3               	movwf	?___xxtofl
  2570  078F                     l737:
  2571  078F  0008               	return
  2572  0790                     __end_of___xxtofl:
  2573                           
  2574                           	psect	text8
  2575  0EF0                     __ptext8:	
  2576 ;; *************** function ___wmul *****************
  2577 ;; Defined at:
  2578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  multiplier      2    3[COMMON] unsigned int 
  2581 ;;  multiplicand    2    5[COMMON] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  product         2    7[COMMON] unsigned int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    3[COMMON] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         4       0       0       0       0
  2594 ;;      Locals:         2       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    2
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_WriteNumber
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           
  2608                           ;psect for function ___wmul
  2609  0EF0                     ___wmul:
  2610  0EF0                     l1446:	
  2611                           ;incstack = 0
  2612                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2613                           
  2614  0EF0  01F7               	clrf	___wmul@product
  2615  0EF1  01F8               	clrf	___wmul@product+1
  2616  0EF2                     l1448:
  2617  0EF2  1C73               	btfss	___wmul@multiplier,0
  2618  0EF3  2EF5               	goto	u1131
  2619  0EF4  2EF6               	goto	u1130
  2620  0EF5                     u1131:
  2621  0EF5  2EFC               	goto	l302
  2622  0EF6                     u1130:
  2623  0EF6                     l1450:
  2624  0EF6  0875               	movf	___wmul@multiplicand,w
  2625  0EF7  07F7               	addwf	___wmul@product,f
  2626  0EF8  1803               	skipnc
  2627  0EF9  0AF8               	incf	___wmul@product+1,f
  2628  0EFA  0876               	movf	___wmul@multiplicand+1,w
  2629  0EFB  07F8               	addwf	___wmul@product+1,f
  2630  0EFC                     l302:
  2631  0EFC  3001               	movlw	1
  2632  0EFD                     u1145:
  2633  0EFD  1003               	clrc
  2634  0EFE  0DF5               	rlf	___wmul@multiplicand,f
  2635  0EFF  0DF6               	rlf	___wmul@multiplicand+1,f
  2636  0F00  3EFF               	addlw	-1
  2637  0F01  1D03               	skipz
  2638  0F02  2EFD               	goto	u1145
  2639  0F03                     l1452:
  2640  0F03  3001               	movlw	1
  2641  0F04                     u1155:
  2642  0F04  1003               	clrc
  2643  0F05  0CF4               	rrf	___wmul@multiplier+1,f
  2644  0F06  0CF3               	rrf	___wmul@multiplier,f
  2645  0F07  3EFF               	addlw	-1
  2646  0F08  1D03               	skipz
  2647  0F09  2F04               	goto	u1155
  2648  0F0A                     l1454:
  2649  0F0A  0873               	movf	___wmul@multiplier,w
  2650  0F0B  0474               	iorwf	___wmul@multiplier+1,w
  2651  0F0C  1D03               	btfss	3,2
  2652  0F0D  2F0F               	goto	u1161
  2653  0F0E  2F10               	goto	u1160
  2654  0F0F                     u1161:
  2655  0F0F  2EF2               	goto	l1448
  2656  0F10                     u1160:
  2657  0F10                     l1456:
  2658  0F10  0878               	movf	___wmul@product+1,w
  2659  0F11  00F4               	movwf	?___wmul+1
  2660  0F12  0877               	movf	___wmul@product,w
  2661  0F13  00F3               	movwf	?___wmul
  2662  0F14                     l304:
  2663  0F14  0008               	return
  2664  0F15                     __end_of___wmul:
  2665                           
  2666                           	psect	text9
  2667  0F3E                     __ptext9:	
  2668 ;; *************** function ___lwdiv *****************
  2669 ;; Defined at:
  2670 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  divisor         2    3[COMMON] unsigned int 
  2673 ;;  dividend        2    5[COMMON] unsigned int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  quotient        2    1[BANK0 ] unsigned int 
  2676 ;;  counter         1    0[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    3[COMMON] unsigned int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         4       0       0       0       0
  2687 ;;      Locals:         0       3       0       0       0
  2688 ;;      Temps:          1       0       0       0       0
  2689 ;;      Totals:         5       3       0       0       0
  2690 ;;Total ram usage:        8 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    2
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_WriteNumber
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function ___lwdiv
  2702  0F3E                     ___lwdiv:
  2703  0F3E                     l1946:	
  2704                           ;incstack = 0
  2705                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2706                           
  2707  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0F40  01A1               	clrf	___lwdiv@quotient
  2710  0F41  01A2               	clrf	___lwdiv@quotient+1
  2711  0F42                     l1948:
  2712  0F42  0873               	movf	___lwdiv@divisor,w
  2713  0F43  0474               	iorwf	___lwdiv@divisor+1,w
  2714  0F44  1903               	btfsc	3,2
  2715  0F45  2F47               	goto	u2121
  2716  0F46  2F48               	goto	u2120
  2717  0F47                     u2121:
  2718  0F47  2F7F               	goto	l1968
  2719  0F48                     u2120:
  2720  0F48                     l1950:
  2721  0F48  01A0               	clrf	___lwdiv@counter
  2722  0F49  0AA0               	incf	___lwdiv@counter,f
  2723  0F4A  2F56               	goto	l1956
  2724  0F4B                     l1952:
  2725  0F4B  3001               	movlw	1
  2726  0F4C                     u2135:
  2727  0F4C  1003               	clrc
  2728  0F4D  0DF3               	rlf	___lwdiv@divisor,f
  2729  0F4E  0DF4               	rlf	___lwdiv@divisor+1,f
  2730  0F4F  3EFF               	addlw	-1
  2731  0F50  1D03               	skipz
  2732  0F51  2F4C               	goto	u2135
  2733  0F52                     l1954:
  2734  0F52  3001               	movlw	1
  2735  0F53  00F7               	movwf	??___lwdiv
  2736  0F54  0877               	movf	??___lwdiv,w
  2737  0F55  07A0               	addwf	___lwdiv@counter,f
  2738  0F56                     l1956:
  2739  0F56  1FF4               	btfss	___lwdiv@divisor+1,7
  2740  0F57  2F59               	goto	u2141
  2741  0F58  2F5A               	goto	u2140
  2742  0F59                     u2141:
  2743  0F59  2F4B               	goto	l1952
  2744  0F5A                     u2140:
  2745  0F5A                     l1958:
  2746  0F5A  3001               	movlw	1
  2747  0F5B                     u2155:
  2748  0F5B  1003               	clrc
  2749  0F5C  0DA1               	rlf	___lwdiv@quotient,f
  2750  0F5D  0DA2               	rlf	___lwdiv@quotient+1,f
  2751  0F5E  3EFF               	addlw	-1
  2752  0F5F  1D03               	skipz
  2753  0F60  2F5B               	goto	u2155
  2754  0F61  0874               	movf	___lwdiv@divisor+1,w
  2755  0F62  0276               	subwf	___lwdiv@dividend+1,w
  2756  0F63  1D03               	skipz
  2757  0F64  2F67               	goto	u2165
  2758  0F65  0873               	movf	___lwdiv@divisor,w
  2759  0F66  0275               	subwf	___lwdiv@dividend,w
  2760  0F67                     u2165:
  2761  0F67  1C03               	skipc
  2762  0F68  2F6A               	goto	u2161
  2763  0F69  2F6B               	goto	u2160
  2764  0F6A                     u2161:
  2765  0F6A  2F72               	goto	l1964
  2766  0F6B                     u2160:
  2767  0F6B                     l1960:
  2768  0F6B  0873               	movf	___lwdiv@divisor,w
  2769  0F6C  02F5               	subwf	___lwdiv@dividend,f
  2770  0F6D  0874               	movf	___lwdiv@divisor+1,w
  2771  0F6E  1C03               	skipc
  2772  0F6F  03F6               	decf	___lwdiv@dividend+1,f
  2773  0F70  02F6               	subwf	___lwdiv@dividend+1,f
  2774  0F71                     l1962:
  2775  0F71  1421               	bsf	___lwdiv@quotient,0
  2776  0F72                     l1964:
  2777  0F72  3001               	movlw	1
  2778  0F73                     u2175:
  2779  0F73  1003               	clrc
  2780  0F74  0CF4               	rrf	___lwdiv@divisor+1,f
  2781  0F75  0CF3               	rrf	___lwdiv@divisor,f
  2782  0F76  3EFF               	addlw	-1
  2783  0F77  1D03               	skipz
  2784  0F78  2F73               	goto	u2175
  2785  0F79                     l1966:
  2786  0F79  3001               	movlw	1
  2787  0F7A  02A0               	subwf	___lwdiv@counter,f
  2788  0F7B  1D03               	btfss	3,2
  2789  0F7C  2F7E               	goto	u2181
  2790  0F7D  2F7F               	goto	u2180
  2791  0F7E                     u2181:
  2792  0F7E  2F5A               	goto	l1958
  2793  0F7F                     u2180:
  2794  0F7F                     l1968:
  2795  0F7F  0822               	movf	___lwdiv@quotient+1,w
  2796  0F80  00F4               	movwf	?___lwdiv+1
  2797  0F81  0821               	movf	___lwdiv@quotient,w
  2798  0F82  00F3               	movwf	?___lwdiv
  2799  0F83                     l574:
  2800  0F83  0008               	return
  2801  0F84                     __end_of___lwdiv:
  2802                           
  2803                           	psect	text10
  2804  0F84                     __ptext10:	
  2805 ;; *************** function ___fltol *****************
  2806 ;; Defined at:
  2807 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  f1              4   36[BANK0 ] unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  exp1            1    8[COMMON] unsigned char 
  2812 ;;  sign1           1    7[COMMON] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  4   36[BANK0 ] long 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       4       0       0       0
  2823 ;;      Locals:         2       0       0       0       0
  2824 ;;      Temps:          0       5       0       0       0
  2825 ;;      Totals:         2       9       0       0       0
  2826 ;;Total ram usage:       11 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_WriteNumber
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function ___fltol
  2838  0F84                     ___fltol:
  2839  0F84                     l1910:	
  2840                           ;incstack = 0
  2841                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2842                           
  2843  0F84  1003               	clrc
  2844  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0F87  0D46               	rlf	___fltol@f1+2,w
  2847  0F88  0D47               	rlf	___fltol@f1+3,w
  2848  0F89  00C8               	movwf	??___fltol
  2849  0F8A  0848               	movf	??___fltol,w
  2850  0F8B  00F8               	movwf	___fltol@exp1
  2851  0F8C  0878               	movf	___fltol@exp1,w
  2852  0F8D  1D03               	btfss	3,2
  2853  0F8E  2F90               	goto	u2021
  2854  0F8F  2F91               	goto	u2020
  2855  0F90                     u2021:
  2856  0F90  2F9A               	goto	l1916
  2857  0F91                     u2020:
  2858  0F91                     l1912:
  2859  0F91  3000               	movlw	0
  2860  0F92  00C7               	movwf	?___fltol+3
  2861  0F93  3000               	movlw	0
  2862  0F94  00C6               	movwf	?___fltol+2
  2863  0F95  3000               	movlw	0
  2864  0F96  00C5               	movwf	?___fltol+1
  2865  0F97  3000               	movlw	0
  2866  0F98  00C4               	movwf	?___fltol
  2867  0F99  2FFF               	goto	l488
  2868  0F9A                     l1916:
  2869  0F9A  0844               	movf	___fltol@f1,w
  2870  0F9B  00C8               	movwf	??___fltol
  2871  0F9C  0845               	movf	___fltol@f1+1,w
  2872  0F9D  00C9               	movwf	??___fltol+1
  2873  0F9E  0846               	movf	___fltol@f1+2,w
  2874  0F9F  00CA               	movwf	??___fltol+2
  2875  0FA0  0847               	movf	___fltol@f1+3,w
  2876  0FA1  00CB               	movwf	??___fltol+3
  2877  0FA2  301F               	movlw	31
  2878  0FA3                     u2035:
  2879  0FA3  1003               	clrc
  2880  0FA4  0CCB               	rrf	??___fltol+3,f
  2881  0FA5  0CCA               	rrf	??___fltol+2,f
  2882  0FA6  0CC9               	rrf	??___fltol+1,f
  2883  0FA7  0CC8               	rrf	??___fltol,f
  2884  0FA8                     u2030:
  2885  0FA8  3EFF               	addlw	-1
  2886  0FA9  1D03               	skipz
  2887  0FAA  2FA3               	goto	u2035
  2888  0FAB  0848               	movf	??___fltol,w
  2889  0FAC  00CC               	movwf	??___fltol+4
  2890  0FAD  084C               	movf	??___fltol+4,w
  2891  0FAE  00F7               	movwf	___fltol@sign1
  2892  0FAF                     l1918:
  2893  0FAF  17C6               	bsf	___fltol@f1+2,7
  2894  0FB0                     l1920:
  2895  0FB0  30FF               	movlw	255
  2896  0FB1  05C4               	andwf	___fltol@f1,f
  2897  0FB2  30FF               	movlw	255
  2898  0FB3  05C5               	andwf	___fltol@f1+1,f
  2899  0FB4  30FF               	movlw	255
  2900  0FB5  05C6               	andwf	___fltol@f1+2,f
  2901  0FB6  3000               	movlw	0
  2902  0FB7  05C7               	andwf	___fltol@f1+3,f
  2903  0FB8                     l1922:
  2904  0FB8  3096               	movlw	150
  2905  0FB9  02F8               	subwf	___fltol@exp1,f
  2906  0FBA                     l1924:
  2907  0FBA  1FF8               	btfss	___fltol@exp1,7
  2908  0FBB  2FBD               	goto	u2041
  2909  0FBC  2FBE               	goto	u2040
  2910  0FBD                     u2041:
  2911  0FBD  2FD8               	goto	l1934
  2912  0FBE                     u2040:
  2913  0FBE                     l1926:
  2914  0FBE  0878               	movf	___fltol@exp1,w
  2915  0FBF  3A80               	xorlw	128
  2916  0FC0  3E97               	addlw	151
  2917  0FC1  1803               	skipnc
  2918  0FC2  2FC4               	goto	u2051
  2919  0FC3  2FC5               	goto	u2050
  2920  0FC4                     u2051:
  2921  0FC4  2FC6               	goto	l1932
  2922  0FC5                     u2050:
  2923  0FC5  2F91               	goto	l1912
  2924  0FC6                     l1932:
  2925  0FC6  3001               	movlw	1
  2926  0FC7                     u2065:
  2927  0FC7  1003               	clrc
  2928  0FC8  0CC7               	rrf	___fltol@f1+3,f
  2929  0FC9  0CC6               	rrf	___fltol@f1+2,f
  2930  0FCA  0CC5               	rrf	___fltol@f1+1,f
  2931  0FCB  0CC4               	rrf	___fltol@f1,f
  2932  0FCC  3EFF               	addlw	-1
  2933  0FCD  1D03               	skipz
  2934  0FCE  2FC7               	goto	u2065
  2935  0FCF  3001               	movlw	1
  2936  0FD0  00C8               	movwf	??___fltol
  2937  0FD1  0848               	movf	??___fltol,w
  2938  0FD2  07F8               	addwf	___fltol@exp1,f
  2939  0FD3  1D03               	btfss	3,2
  2940  0FD4  2FD6               	goto	u2071
  2941  0FD5  2FD7               	goto	u2070
  2942  0FD6                     u2071:
  2943  0FD6  2FC6               	goto	l1932
  2944  0FD7                     u2070:
  2945  0FD7  2FEF               	goto	l1942
  2946  0FD8                     l1934:
  2947  0FD8  3020               	movlw	32
  2948  0FD9  0278               	subwf	___fltol@exp1,w
  2949  0FDA  1C03               	skipc
  2950  0FDB  2FDD               	goto	u2081
  2951  0FDC  2FDE               	goto	u2080
  2952  0FDD                     u2081:
  2953  0FDD  2FEA               	goto	l495
  2954  0FDE                     u2080:
  2955  0FDE  2F91               	goto	l1912
  2956  0FDF                     l1940:
  2957  0FDF  3001               	movlw	1
  2958  0FE0  00C8               	movwf	??___fltol
  2959  0FE1                     u2095:
  2960  0FE1  1003               	clrc
  2961  0FE2  0DC4               	rlf	___fltol@f1,f
  2962  0FE3  0DC5               	rlf	___fltol@f1+1,f
  2963  0FE4  0DC6               	rlf	___fltol@f1+2,f
  2964  0FE5  0DC7               	rlf	___fltol@f1+3,f
  2965  0FE6  0BC8               	decfsz	??___fltol,f
  2966  0FE7  2FE1               	goto	u2095
  2967  0FE8  3001               	movlw	1
  2968  0FE9  02F8               	subwf	___fltol@exp1,f
  2969  0FEA                     l495:
  2970  0FEA  0878               	movf	___fltol@exp1,w
  2971  0FEB  1D03               	btfss	3,2
  2972  0FEC  2FEE               	goto	u2101
  2973  0FED  2FEF               	goto	u2100
  2974  0FEE                     u2101:
  2975  0FEE  2FDF               	goto	l1940
  2976  0FEF                     u2100:
  2977  0FEF                     l1942:
  2978  0FEF  0877               	movf	___fltol@sign1,w
  2979  0FF0  1903               	btfsc	3,2
  2980  0FF1  2FF3               	goto	u2111
  2981  0FF2  2FF4               	goto	u2110
  2982  0FF3                     u2111:
  2983  0FF3  2FFF               	goto	l498
  2984  0FF4                     u2110:
  2985  0FF4                     l1944:
  2986  0FF4  09C4               	comf	___fltol@f1,f
  2987  0FF5  09C5               	comf	___fltol@f1+1,f
  2988  0FF6  09C6               	comf	___fltol@f1+2,f
  2989  0FF7  09C7               	comf	___fltol@f1+3,f
  2990  0FF8  0AC4               	incf	___fltol@f1,f
  2991  0FF9  1903               	skipnz
  2992  0FFA  0AC5               	incf	___fltol@f1+1,f
  2993  0FFB  1903               	skipnz
  2994  0FFC  0AC6               	incf	___fltol@f1+2,f
  2995  0FFD  1903               	skipnz
  2996  0FFE  0AC7               	incf	___fltol@f1+3,f
  2997  0FFF                     l498:
  2998  0FFF                     l488:
  2999  0FFF  0008               	return
  3000  1000                     __end_of___fltol:
  3001                           
  3002                           	psect	text11
  3003  001A                     __ptext11:	
  3004 ;; *************** function ___flmul *****************
  3005 ;; Defined at:
  3006 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  b               4   10[BANK0 ] long 
  3009 ;;  a               4   14[BANK0 ] long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  prod            4   30[BANK0 ] struct .
  3012 ;;  grs             4   24[BANK0 ] unsigned long 
  3013 ;;  temp            2   34[BANK0 ] struct .
  3014 ;;  bexp            1   29[BANK0 ] unsigned char 
  3015 ;;  aexp            1   28[BANK0 ] unsigned char 
  3016 ;;  sign            1   23[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  4   10[BANK0 ] unsigned char 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       8       0       0       0
  3027 ;;      Locals:         0      13       0       0       0
  3028 ;;      Temps:          0       5       0       0       0
  3029 ;;      Totals:         0      26       0       0       0
  3030 ;;Total ram usage:       26 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    3
  3033 ;; This function calls:
  3034 ;;		__Umul8_16
  3035 ;; This function is called by:
  3036 ;;		_WriteNumber
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function ___flmul
  3042  001A                     ___flmul:
  3043  001A                     l1522:	
  3044                           ;incstack = 0
  3045                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3046                           
  3047  001A  1283               	bcf	3,5	;RP0=0, select bank0
  3048  001B  1303               	bcf	3,6	;RP1=0, select bank0
  3049  001C  082D               	movf	___flmul@b+3,w
  3050  001D  3980               	andlw	128
  3051  001E  00B2               	movwf	??___flmul
  3052  001F  0832               	movf	??___flmul,w
  3053  0020  00B7               	movwf	___flmul@sign
  3054  0021                     l1524:
  3055  0021  082D               	movf	___flmul@b+3,w
  3056  0022  00B2               	movwf	??___flmul
  3057  0023  0732               	addwf	??___flmul,w
  3058  0024  00B3               	movwf	??___flmul+1
  3059  0025  0833               	movf	??___flmul+1,w
  3060  0026  00BD               	movwf	___flmul@bexp
  3061  0027                     l1526:
  3062  0027  1FAC               	btfss	___flmul@b+2,7
  3063  0028  282A               	goto	u1341
  3064  0029  282B               	goto	u1340
  3065  002A                     u1341:
  3066  002A  282C               	goto	l1530
  3067  002B                     u1340:
  3068  002B                     l1528:
  3069  002B  143D               	bsf	___flmul@bexp,0
  3070  002C                     l1530:
  3071  002C  083D               	movf	___flmul@bexp,w
  3072  002D  1903               	btfsc	3,2
  3073  002E  2830               	goto	u1351
  3074  002F  2831               	goto	u1350
  3075  0030                     u1351:
  3076  0030  2840               	goto	l1538
  3077  0031                     u1350:
  3078  0031                     l1532:
  3079  0031  0A3D               	incf	___flmul@bexp,w
  3080  0032  1D03               	btfss	3,2
  3081  0033  2835               	goto	u1361
  3082  0034  2836               	goto	u1360
  3083  0035                     u1361:
  3084  0035  283E               	goto	l1536
  3085  0036                     u1360:
  3086  0036                     l1534:
  3087  0036  3000               	movlw	0
  3088  0037  00AD               	movwf	___flmul@b+3
  3089  0038  3000               	movlw	0
  3090  0039  00AC               	movwf	___flmul@b+2
  3091  003A  3000               	movlw	0
  3092  003B  00AB               	movwf	___flmul@b+1
  3093  003C  3000               	movlw	0
  3094  003D  00AA               	movwf	___flmul@b
  3095  003E                     l1536:
  3096  003E  17AC               	bsf	___flmul@b+2,7
  3097  003F  2848               	goto	l1540
  3098  0040                     l1538:
  3099  0040  3000               	movlw	0
  3100  0041  00AD               	movwf	___flmul@b+3
  3101  0042  3000               	movlw	0
  3102  0043  00AC               	movwf	___flmul@b+2
  3103  0044  3000               	movlw	0
  3104  0045  00AB               	movwf	___flmul@b+1
  3105  0046  3000               	movlw	0
  3106  0047  00AA               	movwf	___flmul@b
  3107  0048                     l1540:
  3108  0048  0831               	movf	___flmul@a+3,w
  3109  0049  3980               	andlw	128
  3110  004A  00B2               	movwf	??___flmul
  3111  004B  0832               	movf	??___flmul,w
  3112  004C  06B7               	xorwf	___flmul@sign,f
  3113  004D                     l1542:
  3114  004D  0831               	movf	___flmul@a+3,w
  3115  004E  00B2               	movwf	??___flmul
  3116  004F  0732               	addwf	??___flmul,w
  3117  0050  00B3               	movwf	??___flmul+1
  3118  0051  0833               	movf	??___flmul+1,w
  3119  0052  00BC               	movwf	___flmul@aexp
  3120  0053                     l1544:
  3121  0053  1FB0               	btfss	___flmul@a+2,7
  3122  0054  2856               	goto	u1371
  3123  0055  2857               	goto	u1370
  3124  0056                     u1371:
  3125  0056  2858               	goto	l1548
  3126  0057                     u1370:
  3127  0057                     l1546:
  3128  0057  143C               	bsf	___flmul@aexp,0
  3129  0058                     l1548:
  3130  0058  083C               	movf	___flmul@aexp,w
  3131  0059  1903               	btfsc	3,2
  3132  005A  285C               	goto	u1381
  3133  005B  285D               	goto	u1380
  3134  005C                     u1381:
  3135  005C  286C               	goto	l1556
  3136  005D                     u1380:
  3137  005D                     l1550:
  3138  005D  0A3C               	incf	___flmul@aexp,w
  3139  005E  1D03               	btfss	3,2
  3140  005F  2861               	goto	u1391
  3141  0060  2862               	goto	u1390
  3142  0061                     u1391:
  3143  0061  286A               	goto	l1554
  3144  0062                     u1390:
  3145  0062                     l1552:
  3146  0062  3000               	movlw	0
  3147  0063  00B1               	movwf	___flmul@a+3
  3148  0064  3000               	movlw	0
  3149  0065  00B0               	movwf	___flmul@a+2
  3150  0066  3000               	movlw	0
  3151  0067  00AF               	movwf	___flmul@a+1
  3152  0068  3000               	movlw	0
  3153  0069  00AE               	movwf	___flmul@a
  3154  006A                     l1554:
  3155  006A  17B0               	bsf	___flmul@a+2,7
  3156  006B  2874               	goto	l1558
  3157  006C                     l1556:
  3158  006C  3000               	movlw	0
  3159  006D  00B1               	movwf	___flmul@a+3
  3160  006E  3000               	movlw	0
  3161  006F  00B0               	movwf	___flmul@a+2
  3162  0070  3000               	movlw	0
  3163  0071  00AF               	movwf	___flmul@a+1
  3164  0072  3000               	movlw	0
  3165  0073  00AE               	movwf	___flmul@a
  3166  0074                     l1558:
  3167  0074  083C               	movf	___flmul@aexp,w
  3168  0075  1903               	btfsc	3,2
  3169  0076  2878               	goto	u1401
  3170  0077  2879               	goto	u1400
  3171  0078                     u1401:
  3172  0078  287E               	goto	l1562
  3173  0079                     u1400:
  3174  0079                     l1560:
  3175  0079  083D               	movf	___flmul@bexp,w
  3176  007A  1D03               	btfss	3,2
  3177  007B  287D               	goto	u1411
  3178  007C  287E               	goto	u1410
  3179  007D                     u1411:
  3180  007D  2887               	goto	l1566
  3181  007E                     u1410:
  3182  007E                     l1562:
  3183  007E  3000               	movlw	0
  3184  007F  00AD               	movwf	?___flmul+3
  3185  0080  3000               	movlw	0
  3186  0081  00AC               	movwf	?___flmul+2
  3187  0082  3000               	movlw	0
  3188  0083  00AB               	movwf	?___flmul+1
  3189  0084  3000               	movlw	0
  3190  0085  00AA               	movwf	?___flmul
  3191  0086  2B7A               	goto	l691
  3192  0087                     l1566:
  3193  0087  082A               	movf	___flmul@b,w
  3194  0088  00B2               	movwf	??___flmul
  3195  0089  0832               	movf	??___flmul,w
  3196  008A  00F3               	movwf	__Umul8_16@multiplicand
  3197  008B  0830               	movf	___flmul@a+2,w
  3198  008C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3199  0091  0874               	movf	?__Umul8_16+1,w
  3200  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0094  00C3               	movwf	___flmul@temp+1
  3203  0095  0873               	movf	?__Umul8_16,w
  3204  0096  00C2               	movwf	___flmul@temp
  3205  0097                     l1568:
  3206  0097  0842               	movf	___flmul@temp,w
  3207  0098  00B2               	movwf	??___flmul
  3208  0099  01B3               	clrf	??___flmul+1
  3209  009A  01B4               	clrf	??___flmul+2
  3210  009B  01B5               	clrf	??___flmul+3
  3211  009C  0835               	movf	??___flmul+3,w
  3212  009D  00BB               	movwf	___flmul@grs+3
  3213  009E  0834               	movf	??___flmul+2,w
  3214  009F  00BA               	movwf	___flmul@grs+2
  3215  00A0  0833               	movf	??___flmul+1,w
  3216  00A1  00B9               	movwf	___flmul@grs+1
  3217  00A2  0832               	movf	??___flmul,w
  3218  00A3  00B8               	movwf	___flmul@grs
  3219  00A4                     l1570:
  3220  00A4  0843               	movf	___flmul@temp+1,w
  3221  00A5  00B2               	movwf	??___flmul
  3222  00A6  01B3               	clrf	??___flmul+1
  3223  00A7  01B4               	clrf	??___flmul+2
  3224  00A8  01B5               	clrf	??___flmul+3
  3225  00A9  0835               	movf	??___flmul+3,w
  3226  00AA  00C1               	movwf	___flmul@prod+3
  3227  00AB  0834               	movf	??___flmul+2,w
  3228  00AC  00C0               	movwf	___flmul@prod+2
  3229  00AD  0833               	movf	??___flmul+1,w
  3230  00AE  00BF               	movwf	___flmul@prod+1
  3231  00AF  0832               	movf	??___flmul,w
  3232  00B0  00BE               	movwf	___flmul@prod
  3233  00B1  082B               	movf	___flmul@b+1,w
  3234  00B2  00B2               	movwf	??___flmul
  3235  00B3  0832               	movf	??___flmul,w
  3236  00B4  00F3               	movwf	__Umul8_16@multiplicand
  3237  00B5  082F               	movf	___flmul@a+1,w
  3238  00B6  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3239  00BB  0874               	movf	?__Umul8_16+1,w
  3240  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3241  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3242  00BE  00C3               	movwf	___flmul@temp+1
  3243  00BF  0873               	movf	?__Umul8_16,w
  3244  00C0  00C2               	movwf	___flmul@temp
  3245  00C1                     l1572:
  3246  00C1  0842               	movf	___flmul@temp,w
  3247  00C2  00B2               	movwf	??___flmul
  3248  00C3  01B3               	clrf	??___flmul+1
  3249  00C4  01B4               	clrf	??___flmul+2
  3250  00C5  01B5               	clrf	??___flmul+3
  3251  00C6  0832               	movf	??___flmul,w
  3252  00C7  07B8               	addwf	___flmul@grs,f
  3253  00C8  0833               	movf	??___flmul+1,w
  3254  00C9  1103               	clrz
  3255  00CA  1803               	skipnc
  3256  00CB  3E01               	addlw	1
  3257  00CC  1903               	skipnz
  3258  00CD  28CF               	goto	u1421
  3259  00CE  07B9               	addwf	___flmul@grs+1,f
  3260  00CF                     u1421:
  3261  00CF  0834               	movf	??___flmul+2,w
  3262  00D0  1103               	clrz
  3263  00D1  1803               	skipnc
  3264  00D2  3E01               	addlw	1
  3265  00D3  1903               	skipnz
  3266  00D4  28D6               	goto	u1422
  3267  00D5  07BA               	addwf	___flmul@grs+2,f
  3268  00D6                     u1422:
  3269  00D6  0835               	movf	??___flmul+3,w
  3270  00D7  1103               	clrz
  3271  00D8  1803               	skipnc
  3272  00D9  3E01               	addlw	1
  3273  00DA  1903               	skipnz
  3274  00DB  28DD               	goto	u1423
  3275  00DC  07BB               	addwf	___flmul@grs+3,f
  3276  00DD                     u1423:
  3277  00DD                     l1574:
  3278  00DD  0843               	movf	___flmul@temp+1,w
  3279  00DE  00B2               	movwf	??___flmul
  3280  00DF  01B3               	clrf	??___flmul+1
  3281  00E0  01B4               	clrf	??___flmul+2
  3282  00E1  01B5               	clrf	??___flmul+3
  3283  00E2  0832               	movf	??___flmul,w
  3284  00E3  07BE               	addwf	___flmul@prod,f
  3285  00E4  0833               	movf	??___flmul+1,w
  3286  00E5  1103               	clrz
  3287  00E6  1803               	skipnc
  3288  00E7  3E01               	addlw	1
  3289  00E8  1903               	skipnz
  3290  00E9  28EB               	goto	u1431
  3291  00EA  07BF               	addwf	___flmul@prod+1,f
  3292  00EB                     u1431:
  3293  00EB  0834               	movf	??___flmul+2,w
  3294  00EC  1103               	clrz
  3295  00ED  1803               	skipnc
  3296  00EE  3E01               	addlw	1
  3297  00EF  1903               	skipnz
  3298  00F0  28F2               	goto	u1432
  3299  00F1  07C0               	addwf	___flmul@prod+2,f
  3300  00F2                     u1432:
  3301  00F2  0835               	movf	??___flmul+3,w
  3302  00F3  1103               	clrz
  3303  00F4  1803               	skipnc
  3304  00F5  3E01               	addlw	1
  3305  00F6  1903               	skipnz
  3306  00F7  28F9               	goto	u1433
  3307  00F8  07C1               	addwf	___flmul@prod+3,f
  3308  00F9                     u1433:
  3309  00F9  082C               	movf	___flmul@b+2,w
  3310  00FA  00B2               	movwf	??___flmul
  3311  00FB  0832               	movf	??___flmul,w
  3312  00FC  00F3               	movwf	__Umul8_16@multiplicand
  3313  00FD  082E               	movf	___flmul@a,w
  3314  00FE  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3315  0103  0874               	movf	?__Umul8_16+1,w
  3316  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0106  00C3               	movwf	___flmul@temp+1
  3319  0107  0873               	movf	?__Umul8_16,w
  3320  0108  00C2               	movwf	___flmul@temp
  3321  0109                     l1576:
  3322  0109  0842               	movf	___flmul@temp,w
  3323  010A  00B2               	movwf	??___flmul
  3324  010B  01B3               	clrf	??___flmul+1
  3325  010C  01B4               	clrf	??___flmul+2
  3326  010D  01B5               	clrf	??___flmul+3
  3327  010E  0832               	movf	??___flmul,w
  3328  010F  07B8               	addwf	___flmul@grs,f
  3329  0110  0833               	movf	??___flmul+1,w
  3330  0111  1103               	clrz
  3331  0112  1803               	skipnc
  3332  0113  3E01               	addlw	1
  3333  0114  1903               	skipnz
  3334  0115  2917               	goto	u1441
  3335  0116  07B9               	addwf	___flmul@grs+1,f
  3336  0117                     u1441:
  3337  0117  0834               	movf	??___flmul+2,w
  3338  0118  1103               	clrz
  3339  0119  1803               	skipnc
  3340  011A  3E01               	addlw	1
  3341  011B  1903               	skipnz
  3342  011C  291E               	goto	u1442
  3343  011D  07BA               	addwf	___flmul@grs+2,f
  3344  011E                     u1442:
  3345  011E  0835               	movf	??___flmul+3,w
  3346  011F  1103               	clrz
  3347  0120  1803               	skipnc
  3348  0121  3E01               	addlw	1
  3349  0122  1903               	skipnz
  3350  0123  2925               	goto	u1443
  3351  0124  07BB               	addwf	___flmul@grs+3,f
  3352  0125                     u1443:
  3353  0125                     l1578:
  3354  0125  0843               	movf	___flmul@temp+1,w
  3355  0126  00B2               	movwf	??___flmul
  3356  0127  01B3               	clrf	??___flmul+1
  3357  0128  01B4               	clrf	??___flmul+2
  3358  0129  01B5               	clrf	??___flmul+3
  3359  012A  0832               	movf	??___flmul,w
  3360  012B  07BE               	addwf	___flmul@prod,f
  3361  012C  0833               	movf	??___flmul+1,w
  3362  012D  1103               	clrz
  3363  012E  1803               	skipnc
  3364  012F  3E01               	addlw	1
  3365  0130  1903               	skipnz
  3366  0131  2933               	goto	u1451
  3367  0132  07BF               	addwf	___flmul@prod+1,f
  3368  0133                     u1451:
  3369  0133  0834               	movf	??___flmul+2,w
  3370  0134  1103               	clrz
  3371  0135  1803               	skipnc
  3372  0136  3E01               	addlw	1
  3373  0137  1903               	skipnz
  3374  0138  293A               	goto	u1452
  3375  0139  07C0               	addwf	___flmul@prod+2,f
  3376  013A                     u1452:
  3377  013A  0835               	movf	??___flmul+3,w
  3378  013B  1103               	clrz
  3379  013C  1803               	skipnc
  3380  013D  3E01               	addlw	1
  3381  013E  1903               	skipnz
  3382  013F  2941               	goto	u1453
  3383  0140  07C1               	addwf	___flmul@prod+3,f
  3384  0141                     u1453:
  3385  0141                     l1580:
  3386  0141  3008               	movlw	8
  3387  0142  00B2               	movwf	??___flmul
  3388  0143                     u1465:
  3389  0143  1003               	clrc
  3390  0144  0DB8               	rlf	___flmul@grs,f
  3391  0145  0DB9               	rlf	___flmul@grs+1,f
  3392  0146  0DBA               	rlf	___flmul@grs+2,f
  3393  0147  0DBB               	rlf	___flmul@grs+3,f
  3394  0148  0BB2               	decfsz	??___flmul,f
  3395  0149  2943               	goto	u1465
  3396  014A                     l1582:
  3397  014A  082B               	movf	___flmul@b+1,w
  3398  014B  00B2               	movwf	??___flmul
  3399  014C  0832               	movf	??___flmul,w
  3400  014D  00F3               	movwf	__Umul8_16@multiplicand
  3401  014E  082E               	movf	___flmul@a,w
  3402  014F  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3403  0154  0874               	movf	?__Umul8_16+1,w
  3404  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0157  00C3               	movwf	___flmul@temp+1
  3407  0158  0873               	movf	?__Umul8_16,w
  3408  0159  00C2               	movwf	___flmul@temp
  3409  015A                     l1584:
  3410  015A  0842               	movf	___flmul@temp,w
  3411  015B  00B2               	movwf	??___flmul
  3412  015C  0843               	movf	___flmul@temp+1,w
  3413  015D  00B3               	movwf	??___flmul+1
  3414  015E  01B4               	clrf	??___flmul+2
  3415  015F  01B5               	clrf	??___flmul+3
  3416  0160  0832               	movf	??___flmul,w
  3417  0161  07B8               	addwf	___flmul@grs,f
  3418  0162  0833               	movf	??___flmul+1,w
  3419  0163  1103               	clrz
  3420  0164  1803               	skipnc
  3421  0165  3E01               	addlw	1
  3422  0166  1903               	skipnz
  3423  0167  2969               	goto	u1471
  3424  0168  07B9               	addwf	___flmul@grs+1,f
  3425  0169                     u1471:
  3426  0169  0834               	movf	??___flmul+2,w
  3427  016A  1103               	clrz
  3428  016B  1803               	skipnc
  3429  016C  3E01               	addlw	1
  3430  016D  1903               	skipnz
  3431  016E  2970               	goto	u1472
  3432  016F  07BA               	addwf	___flmul@grs+2,f
  3433  0170                     u1472:
  3434  0170  0835               	movf	??___flmul+3,w
  3435  0171  1103               	clrz
  3436  0172  1803               	skipnc
  3437  0173  3E01               	addlw	1
  3438  0174  1903               	skipnz
  3439  0175  2977               	goto	u1473
  3440  0176  07BB               	addwf	___flmul@grs+3,f
  3441  0177                     u1473:
  3442  0177                     l1586:
  3443  0177  082A               	movf	___flmul@b,w
  3444  0178  00B2               	movwf	??___flmul
  3445  0179  0832               	movf	??___flmul,w
  3446  017A  00F3               	movwf	__Umul8_16@multiplicand
  3447  017B  082F               	movf	___flmul@a+1,w
  3448  017C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3449  0181  0874               	movf	?__Umul8_16+1,w
  3450  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0184  00C3               	movwf	___flmul@temp+1
  3453  0185  0873               	movf	?__Umul8_16,w
  3454  0186  00C2               	movwf	___flmul@temp
  3455  0187                     l1588:
  3456  0187  0842               	movf	___flmul@temp,w
  3457  0188  00B2               	movwf	??___flmul
  3458  0189  0843               	movf	___flmul@temp+1,w
  3459  018A  00B3               	movwf	??___flmul+1
  3460  018B  01B4               	clrf	??___flmul+2
  3461  018C  01B5               	clrf	??___flmul+3
  3462  018D  0832               	movf	??___flmul,w
  3463  018E  07B8               	addwf	___flmul@grs,f
  3464  018F  0833               	movf	??___flmul+1,w
  3465  0190  1103               	clrz
  3466  0191  1803               	skipnc
  3467  0192  3E01               	addlw	1
  3468  0193  1903               	skipnz
  3469  0194  2996               	goto	u1481
  3470  0195  07B9               	addwf	___flmul@grs+1,f
  3471  0196                     u1481:
  3472  0196  0834               	movf	??___flmul+2,w
  3473  0197  1103               	clrz
  3474  0198  1803               	skipnc
  3475  0199  3E01               	addlw	1
  3476  019A  1903               	skipnz
  3477  019B  299D               	goto	u1482
  3478  019C  07BA               	addwf	___flmul@grs+2,f
  3479  019D                     u1482:
  3480  019D  0835               	movf	??___flmul+3,w
  3481  019E  1103               	clrz
  3482  019F  1803               	skipnc
  3483  01A0  3E01               	addlw	1
  3484  01A1  1903               	skipnz
  3485  01A2  29A4               	goto	u1483
  3486  01A3  07BB               	addwf	___flmul@grs+3,f
  3487  01A4                     u1483:
  3488  01A4                     l1590:
  3489  01A4  3008               	movlw	8
  3490  01A5  00B2               	movwf	??___flmul
  3491  01A6                     u1495:
  3492  01A6  1003               	clrc
  3493  01A7  0DB8               	rlf	___flmul@grs,f
  3494  01A8  0DB9               	rlf	___flmul@grs+1,f
  3495  01A9  0DBA               	rlf	___flmul@grs+2,f
  3496  01AA  0DBB               	rlf	___flmul@grs+3,f
  3497  01AB  0BB2               	decfsz	??___flmul,f
  3498  01AC  29A6               	goto	u1495
  3499  01AD  082A               	movf	___flmul@b,w
  3500  01AE  00B2               	movwf	??___flmul
  3501  01AF  0832               	movf	??___flmul,w
  3502  01B0  00F3               	movwf	__Umul8_16@multiplicand
  3503  01B1  082E               	movf	___flmul@a,w
  3504  01B2  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3505  01B7  0874               	movf	?__Umul8_16+1,w
  3506  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3507  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3508  01BA  00C3               	movwf	___flmul@temp+1
  3509  01BB  0873               	movf	?__Umul8_16,w
  3510  01BC  00C2               	movwf	___flmul@temp
  3511  01BD                     l1592:
  3512  01BD  0842               	movf	___flmul@temp,w
  3513  01BE  00B2               	movwf	??___flmul
  3514  01BF  0843               	movf	___flmul@temp+1,w
  3515  01C0  00B3               	movwf	??___flmul+1
  3516  01C1  01B4               	clrf	??___flmul+2
  3517  01C2  01B5               	clrf	??___flmul+3
  3518  01C3  0832               	movf	??___flmul,w
  3519  01C4  07B8               	addwf	___flmul@grs,f
  3520  01C5  0833               	movf	??___flmul+1,w
  3521  01C6  1103               	clrz
  3522  01C7  1803               	skipnc
  3523  01C8  3E01               	addlw	1
  3524  01C9  1903               	skipnz
  3525  01CA  29CC               	goto	u1501
  3526  01CB  07B9               	addwf	___flmul@grs+1,f
  3527  01CC                     u1501:
  3528  01CC  0834               	movf	??___flmul+2,w
  3529  01CD  1103               	clrz
  3530  01CE  1803               	skipnc
  3531  01CF  3E01               	addlw	1
  3532  01D0  1903               	skipnz
  3533  01D1  29D3               	goto	u1502
  3534  01D2  07BA               	addwf	___flmul@grs+2,f
  3535  01D3                     u1502:
  3536  01D3  0835               	movf	??___flmul+3,w
  3537  01D4  1103               	clrz
  3538  01D5  1803               	skipnc
  3539  01D6  3E01               	addlw	1
  3540  01D7  1903               	skipnz
  3541  01D8  29DA               	goto	u1503
  3542  01D9  07BB               	addwf	___flmul@grs+3,f
  3543  01DA                     u1503:
  3544  01DA                     l1594:
  3545  01DA  082B               	movf	___flmul@b+1,w
  3546  01DB  00B2               	movwf	??___flmul
  3547  01DC  0832               	movf	??___flmul,w
  3548  01DD  00F3               	movwf	__Umul8_16@multiplicand
  3549  01DE  0830               	movf	___flmul@a+2,w
  3550  01DF  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3551  01E4  0874               	movf	?__Umul8_16+1,w
  3552  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3553  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3554  01E7  00C3               	movwf	___flmul@temp+1
  3555  01E8  0873               	movf	?__Umul8_16,w
  3556  01E9  00C2               	movwf	___flmul@temp
  3557  01EA  0842               	movf	___flmul@temp,w
  3558  01EB  00B2               	movwf	??___flmul
  3559  01EC  0843               	movf	___flmul@temp+1,w
  3560  01ED  00B3               	movwf	??___flmul+1
  3561  01EE  01B4               	clrf	??___flmul+2
  3562  01EF  01B5               	clrf	??___flmul+3
  3563  01F0  0832               	movf	??___flmul,w
  3564  01F1  07BE               	addwf	___flmul@prod,f
  3565  01F2  0833               	movf	??___flmul+1,w
  3566  01F3  1103               	clrz
  3567  01F4  1803               	skipnc
  3568  01F5  3E01               	addlw	1
  3569  01F6  1903               	skipnz
  3570  01F7  29F9               	goto	u1511
  3571  01F8  07BF               	addwf	___flmul@prod+1,f
  3572  01F9                     u1511:
  3573  01F9  0834               	movf	??___flmul+2,w
  3574  01FA  1103               	clrz
  3575  01FB  1803               	skipnc
  3576  01FC  3E01               	addlw	1
  3577  01FD  1903               	skipnz
  3578  01FE  2A00               	goto	u1512
  3579  01FF  07C0               	addwf	___flmul@prod+2,f
  3580  0200                     u1512:
  3581  0200  0835               	movf	??___flmul+3,w
  3582  0201  1103               	clrz
  3583  0202  1803               	skipnc
  3584  0203  3E01               	addlw	1
  3585  0204  1903               	skipnz
  3586  0205  2A07               	goto	u1513
  3587  0206  07C1               	addwf	___flmul@prod+3,f
  3588  0207                     u1513:
  3589  0207                     l1596:
  3590  0207  082C               	movf	___flmul@b+2,w
  3591  0208  00B2               	movwf	??___flmul
  3592  0209  0832               	movf	??___flmul,w
  3593  020A  00F3               	movwf	__Umul8_16@multiplicand
  3594  020B  082F               	movf	___flmul@a+1,w
  3595  020C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3596  0211  0874               	movf	?__Umul8_16+1,w
  3597  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0214  00C3               	movwf	___flmul@temp+1
  3600  0215  0873               	movf	?__Umul8_16,w
  3601  0216  00C2               	movwf	___flmul@temp
  3602  0217                     l1598:
  3603  0217  0842               	movf	___flmul@temp,w
  3604  0218  00B2               	movwf	??___flmul
  3605  0219  0843               	movf	___flmul@temp+1,w
  3606  021A  00B3               	movwf	??___flmul+1
  3607  021B  01B4               	clrf	??___flmul+2
  3608  021C  01B5               	clrf	??___flmul+3
  3609  021D  0832               	movf	??___flmul,w
  3610  021E  07BE               	addwf	___flmul@prod,f
  3611  021F  0833               	movf	??___flmul+1,w
  3612  0220  1103               	clrz
  3613  0221  1803               	skipnc
  3614  0222  3E01               	addlw	1
  3615  0223  1903               	skipnz
  3616  0224  2A26               	goto	u1521
  3617  0225  07BF               	addwf	___flmul@prod+1,f
  3618  0226                     u1521:
  3619  0226  0834               	movf	??___flmul+2,w
  3620  0227  1103               	clrz
  3621  0228  1803               	skipnc
  3622  0229  3E01               	addlw	1
  3623  022A  1903               	skipnz
  3624  022B  2A2D               	goto	u1522
  3625  022C  07C0               	addwf	___flmul@prod+2,f
  3626  022D                     u1522:
  3627  022D  0835               	movf	??___flmul+3,w
  3628  022E  1103               	clrz
  3629  022F  1803               	skipnc
  3630  0230  3E01               	addlw	1
  3631  0231  1903               	skipnz
  3632  0232  2A34               	goto	u1523
  3633  0233  07C1               	addwf	___flmul@prod+3,f
  3634  0234                     u1523:
  3635  0234  082C               	movf	___flmul@b+2,w
  3636  0235  00B2               	movwf	??___flmul
  3637  0236  0832               	movf	??___flmul,w
  3638  0237  00F3               	movwf	__Umul8_16@multiplicand
  3639  0238  0830               	movf	___flmul@a+2,w
  3640  0239  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3641  023E  0874               	movf	?__Umul8_16+1,w
  3642  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0241  00C3               	movwf	___flmul@temp+1
  3645  0242  0873               	movf	?__Umul8_16,w
  3646  0243  00C2               	movwf	___flmul@temp
  3647  0244                     l1600:
  3648  0244  0842               	movf	___flmul@temp,w
  3649  0245  00B2               	movwf	??___flmul
  3650  0246  0843               	movf	___flmul@temp+1,w
  3651  0247  00B3               	movwf	??___flmul+1
  3652  0248  01B4               	clrf	??___flmul+2
  3653  0249  01B5               	clrf	??___flmul+3
  3654  024A  3008               	movlw	8
  3655  024B                     u1535:
  3656  024B  1003               	clrc
  3657  024C  0DB2               	rlf	??___flmul,f
  3658  024D  0DB3               	rlf	??___flmul+1,f
  3659  024E  0DB4               	rlf	??___flmul+2,f
  3660  024F  0DB5               	rlf	??___flmul+3,f
  3661  0250                     u1530:
  3662  0250  3EFF               	addlw	-1
  3663  0251  1D03               	skipz
  3664  0252  2A4B               	goto	u1535
  3665  0253  0832               	movf	??___flmul,w
  3666  0254  07BE               	addwf	___flmul@prod,f
  3667  0255  0833               	movf	??___flmul+1,w
  3668  0256  1103               	clrz
  3669  0257  1803               	skipnc
  3670  0258  3E01               	addlw	1
  3671  0259  1903               	skipnz
  3672  025A  2A5C               	goto	u1541
  3673  025B  07BF               	addwf	___flmul@prod+1,f
  3674  025C                     u1541:
  3675  025C  0834               	movf	??___flmul+2,w
  3676  025D  1103               	clrz
  3677  025E  1803               	skipnc
  3678  025F  3E01               	addlw	1
  3679  0260  1903               	skipnz
  3680  0261  2A63               	goto	u1542
  3681  0262  07C0               	addwf	___flmul@prod+2,f
  3682  0263                     u1542:
  3683  0263  0835               	movf	??___flmul+3,w
  3684  0264  1103               	clrz
  3685  0265  1803               	skipnc
  3686  0266  3E01               	addlw	1
  3687  0267  1903               	skipnz
  3688  0268  2A6A               	goto	u1543
  3689  0269  07C1               	addwf	___flmul@prod+3,f
  3690  026A                     u1543:
  3691  026A                     l1602:
  3692  026A  0838               	movf	___flmul@grs,w
  3693  026B  00B2               	movwf	??___flmul
  3694  026C  0839               	movf	___flmul@grs+1,w
  3695  026D  00B3               	movwf	??___flmul+1
  3696  026E  083A               	movf	___flmul@grs+2,w
  3697  026F  00B4               	movwf	??___flmul+2
  3698  0270  083B               	movf	___flmul@grs+3,w
  3699  0271  00B5               	movwf	??___flmul+3
  3700  0272  3018               	movlw	24
  3701  0273                     u1555:
  3702  0273  1003               	clrc
  3703  0274  0CB5               	rrf	??___flmul+3,f
  3704  0275  0CB4               	rrf	??___flmul+2,f
  3705  0276  0CB3               	rrf	??___flmul+1,f
  3706  0277  0CB2               	rrf	??___flmul,f
  3707  0278                     u1550:
  3708  0278  3EFF               	addlw	-1
  3709  0279  1D03               	skipz
  3710  027A  2A73               	goto	u1555
  3711  027B  0832               	movf	??___flmul,w
  3712  027C  07BE               	addwf	___flmul@prod,f
  3713  027D  0833               	movf	??___flmul+1,w
  3714  027E  1103               	clrz
  3715  027F  1803               	skipnc
  3716  0280  3E01               	addlw	1
  3717  0281  1903               	skipnz
  3718  0282  2A84               	goto	u1561
  3719  0283  07BF               	addwf	___flmul@prod+1,f
  3720  0284                     u1561:
  3721  0284  0834               	movf	??___flmul+2,w
  3722  0285  1103               	clrz
  3723  0286  1803               	skipnc
  3724  0287  3E01               	addlw	1
  3725  0288  1903               	skipnz
  3726  0289  2A8B               	goto	u1562
  3727  028A  07C0               	addwf	___flmul@prod+2,f
  3728  028B                     u1562:
  3729  028B  0835               	movf	??___flmul+3,w
  3730  028C  1103               	clrz
  3731  028D  1803               	skipnc
  3732  028E  3E01               	addlw	1
  3733  028F  1903               	skipnz
  3734  0290  2A92               	goto	u1563
  3735  0291  07C1               	addwf	___flmul@prod+3,f
  3736  0292                     u1563:
  3737  0292                     l1604:
  3738  0292  3008               	movlw	8
  3739  0293  00B2               	movwf	??___flmul
  3740  0294                     u1575:
  3741  0294  1003               	clrc
  3742  0295  0DB8               	rlf	___flmul@grs,f
  3743  0296  0DB9               	rlf	___flmul@grs+1,f
  3744  0297  0DBA               	rlf	___flmul@grs+2,f
  3745  0298  0DBB               	rlf	___flmul@grs+3,f
  3746  0299  0BB2               	decfsz	??___flmul,f
  3747  029A  2A94               	goto	u1575
  3748  029B                     l1606:
  3749  029B  083D               	movf	___flmul@bexp,w
  3750  029C  073C               	addwf	___flmul@aexp,w
  3751  029D  00B2               	movwf	??___flmul
  3752  029E  01B3               	clrf	??___flmul+1
  3753  029F  0DB3               	rlf	??___flmul+1,f
  3754  02A0  0832               	movf	??___flmul,w
  3755  02A1  3E82               	addlw	130
  3756  02A2  00C2               	movwf	___flmul@temp
  3757  02A3  0833               	movf	??___flmul+1,w
  3758  02A4  1803               	skipnc
  3759  02A5  3E01               	addlw	1
  3760  02A6  3EFF               	addlw	255
  3761  02A7  00C3               	movwf	___flmul@temp+1
  3762  02A8  2AC6               	goto	l1618
  3763  02A9                     l1608:
  3764  02A9  3001               	movlw	1
  3765  02AA  00B2               	movwf	??___flmul
  3766  02AB                     u1585:
  3767  02AB  1003               	clrc
  3768  02AC  0DBE               	rlf	___flmul@prod,f
  3769  02AD  0DBF               	rlf	___flmul@prod+1,f
  3770  02AE  0DC0               	rlf	___flmul@prod+2,f
  3771  02AF  0DC1               	rlf	___flmul@prod+3,f
  3772  02B0  0BB2               	decfsz	??___flmul,f
  3773  02B1  2AAB               	goto	u1585
  3774  02B2                     l1610:
  3775  02B2  1FBB               	btfss	___flmul@grs+3,7
  3776  02B3  2AB5               	goto	u1591
  3777  02B4  2AB6               	goto	u1590
  3778  02B5                     u1591:
  3779  02B5  2AB7               	goto	l1614
  3780  02B6                     u1590:
  3781  02B6                     l1612:
  3782  02B6  143E               	bsf	___flmul@prod,0
  3783  02B7                     l1614:
  3784  02B7  3001               	movlw	1
  3785  02B8  00B2               	movwf	??___flmul
  3786  02B9                     u1605:
  3787  02B9  1003               	clrc
  3788  02BA  0DB8               	rlf	___flmul@grs,f
  3789  02BB  0DB9               	rlf	___flmul@grs+1,f
  3790  02BC  0DBA               	rlf	___flmul@grs+2,f
  3791  02BD  0DBB               	rlf	___flmul@grs+3,f
  3792  02BE  0BB2               	decfsz	??___flmul,f
  3793  02BF  2AB9               	goto	u1605
  3794  02C0                     l1616:
  3795  02C0  30FF               	movlw	255
  3796  02C1  07C2               	addwf	___flmul@temp,f
  3797  02C2  1803               	skipnc
  3798  02C3  0AC3               	incf	___flmul@temp+1,f
  3799  02C4  30FF               	movlw	255
  3800  02C5  07C3               	addwf	___flmul@temp+1,f
  3801  02C6                     l1618:
  3802  02C6  1FC0               	btfss	___flmul@prod+2,7
  3803  02C7  2AC9               	goto	u1611
  3804  02C8  2ACA               	goto	u1610
  3805  02C9                     u1611:
  3806  02C9  2AA9               	goto	l1608
  3807  02CA                     u1610:
  3808  02CA                     l1620:
  3809  02CA  01BC               	clrf	___flmul@aexp
  3810  02CB                     l1622:
  3811  02CB  1FBB               	btfss	___flmul@grs+3,7
  3812  02CC  2ACE               	goto	u1621
  3813  02CD  2ACF               	goto	u1620
  3814  02CE                     u1621:
  3815  02CE  2AEB               	goto	l1630
  3816  02CF                     u1620:
  3817  02CF                     l1624:
  3818  02CF  30FF               	movlw	255
  3819  02D0  0538               	andwf	___flmul@grs,w
  3820  02D1  00B2               	movwf	??___flmul
  3821  02D2  30FF               	movlw	255
  3822  02D3  0539               	andwf	___flmul@grs+1,w
  3823  02D4  00B3               	movwf	??___flmul+1
  3824  02D5  30FF               	movlw	255
  3825  02D6  053A               	andwf	___flmul@grs+2,w
  3826  02D7  00B4               	movwf	??___flmul+2
  3827  02D8  307F               	movlw	127
  3828  02D9  053B               	andwf	___flmul@grs+3,w
  3829  02DA  00B5               	movwf	??___flmul+3
  3830  02DB  0835               	movf	??___flmul+3,w
  3831  02DC  0434               	iorwf	??___flmul+2,w
  3832  02DD  0433               	iorwf	??___flmul+1,w
  3833  02DE  0432               	iorwf	??___flmul,w
  3834  02DF  1903               	skipnz
  3835  02E0  2AE2               	goto	u1631
  3836  02E1  2AE3               	goto	u1630
  3837  02E2                     u1631:
  3838  02E2  2AE6               	goto	l697
  3839  02E3                     u1630:
  3840  02E3                     l1626:
  3841  02E3  01BC               	clrf	___flmul@aexp
  3842  02E4  0ABC               	incf	___flmul@aexp,f
  3843  02E5  2AEB               	goto	l1630
  3844  02E6                     l697:
  3845  02E6  1C3E               	btfss	___flmul@prod,0
  3846  02E7  2AE9               	goto	u1641
  3847  02E8  2AEA               	goto	u1640
  3848  02E9                     u1641:
  3849  02E9  2AEB               	goto	l1630
  3850  02EA                     u1640:
  3851  02EA  2AE3               	goto	l1626
  3852  02EB                     l1630:
  3853  02EB  083C               	movf	___flmul@aexp,w
  3854  02EC  1903               	btfsc	3,2
  3855  02ED  2AEF               	goto	u1651
  3856  02EE  2AF0               	goto	u1650
  3857  02EF                     u1651:
  3858  02EF  2B21               	goto	l1640
  3859  02F0                     u1650:
  3860  02F0                     l1632:
  3861  02F0  3001               	movlw	1
  3862  02F1  07BE               	addwf	___flmul@prod,f
  3863  02F2  3000               	movlw	0
  3864  02F3  1803               	skipnc
  3865  02F4  3001               	movlw	1
  3866  02F5  07BF               	addwf	___flmul@prod+1,f
  3867  02F6  3000               	movlw	0
  3868  02F7  1803               	skipnc
  3869  02F8  3001               	movlw	1
  3870  02F9  07C0               	addwf	___flmul@prod+2,f
  3871  02FA  3000               	movlw	0
  3872  02FB  1803               	skipnc
  3873  02FC  3001               	movlw	1
  3874  02FD  07C1               	addwf	___flmul@prod+3,f
  3875  02FE                     l1634:
  3876  02FE  1C41               	btfss	___flmul@prod+3,0
  3877  02FF  2B01               	goto	u1661
  3878  0300  2B02               	goto	u1660
  3879  0301                     u1661:
  3880  0301  2B21               	goto	l1640
  3881  0302                     u1660:
  3882  0302                     l1636:
  3883  0302  083E               	movf	___flmul@prod,w
  3884  0303  00B2               	movwf	??___flmul
  3885  0304  083F               	movf	___flmul@prod+1,w
  3886  0305  00B3               	movwf	??___flmul+1
  3887  0306  0840               	movf	___flmul@prod+2,w
  3888  0307  00B4               	movwf	??___flmul+2
  3889  0308  0841               	movf	___flmul@prod+3,w
  3890  0309  00B5               	movwf	??___flmul+3
  3891  030A  3001               	movlw	1
  3892  030B  00B6               	movwf	??___flmul+4
  3893  030C                     u1675:
  3894  030C  0D35               	rlf	??___flmul+3,w
  3895  030D  0CB5               	rrf	??___flmul+3,f
  3896  030E  0CB4               	rrf	??___flmul+2,f
  3897  030F  0CB3               	rrf	??___flmul+1,f
  3898  0310  0CB2               	rrf	??___flmul,f
  3899  0311                     u1670:
  3900  0311  0BB6               	decfsz	??___flmul+4,f
  3901  0312  2B0C               	goto	u1675
  3902  0313  0835               	movf	??___flmul+3,w
  3903  0314  00C1               	movwf	___flmul@prod+3
  3904  0315  0834               	movf	??___flmul+2,w
  3905  0316  00C0               	movwf	___flmul@prod+2
  3906  0317  0833               	movf	??___flmul+1,w
  3907  0318  00BF               	movwf	___flmul@prod+1
  3908  0319  0832               	movf	??___flmul,w
  3909  031A  00BE               	movwf	___flmul@prod
  3910  031B                     l1638:
  3911  031B  3001               	movlw	1
  3912  031C  07C2               	addwf	___flmul@temp,f
  3913  031D  1803               	skipnc
  3914  031E  0AC3               	incf	___flmul@temp+1,f
  3915  031F  3000               	movlw	0
  3916  0320  07C3               	addwf	___flmul@temp+1,f
  3917  0321                     l1640:
  3918  0321  0843               	movf	___flmul@temp+1,w
  3919  0322  3A80               	xorlw	128
  3920  0323  00FF               	movwf	btemp+1
  3921  0324  3080               	movlw	128
  3922  0325  027F               	subwf	btemp+1,w
  3923  0326  1D03               	skipz
  3924  0327  2B2A               	goto	u1685
  3925  0328  30FF               	movlw	255
  3926  0329  0242               	subwf	___flmul@temp,w
  3927  032A                     u1685:
  3928  032A  1C03               	skipc
  3929  032B  2B2D               	goto	u1681
  3930  032C  2B2E               	goto	u1680
  3931  032D                     u1681:
  3932  032D  2B39               	goto	l1644
  3933  032E                     u1680:
  3934  032E                     l1642:
  3935  032E  307F               	movlw	127
  3936  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0331  00C1               	movwf	___flmul@prod+3
  3939  0332  3080               	movlw	128
  3940  0333  00C0               	movwf	___flmul@prod+2
  3941  0334  3000               	movlw	0
  3942  0335  00BF               	movwf	___flmul@prod+1
  3943  0336  3000               	movlw	0
  3944  0337  00BE               	movwf	___flmul@prod
  3945  0338  2B6E               	goto	l703
  3946  0339                     l1644:
  3947  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3948  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3949  033B  0843               	movf	___flmul@temp+1,w
  3950  033C  3A80               	xorlw	128
  3951  033D  00FF               	movwf	btemp+1
  3952  033E  3080               	movlw	128
  3953  033F  027F               	subwf	btemp+1,w
  3954  0340  1D03               	skipz
  3955  0341  2B44               	goto	u1695
  3956  0342  3001               	movlw	1
  3957  0343  0242               	subwf	___flmul@temp,w
  3958  0344                     u1695:
  3959  0344  1803               	skipnc
  3960  0345  2B47               	goto	u1691
  3961  0346  2B48               	goto	u1690
  3962  0347                     u1691:
  3963  0347  2B54               	goto	l1650
  3964  0348                     u1690:
  3965  0348                     l1646:
  3966  0348  3000               	movlw	0
  3967  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3968  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3969  034B  00C1               	movwf	___flmul@prod+3
  3970  034C  3000               	movlw	0
  3971  034D  00C0               	movwf	___flmul@prod+2
  3972  034E  3000               	movlw	0
  3973  034F  00BF               	movwf	___flmul@prod+1
  3974  0350  3000               	movlw	0
  3975  0351  00BE               	movwf	___flmul@prod
  3976  0352                     l1648:
  3977  0352  01B7               	clrf	___flmul@sign
  3978  0353  2B6E               	goto	l703
  3979  0354                     l1650:
  3980  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0356  0842               	movf	___flmul@temp,w
  3983  0357  00B2               	movwf	??___flmul
  3984  0358  0832               	movf	??___flmul,w
  3985  0359  00BD               	movwf	___flmul@bexp
  3986  035A  30FF               	movlw	255
  3987  035B  05BE               	andwf	___flmul@prod,f
  3988  035C  30FF               	movlw	255
  3989  035D  05BF               	andwf	___flmul@prod+1,f
  3990  035E  307F               	movlw	127
  3991  035F  05C0               	andwf	___flmul@prod+2,f
  3992  0360  3000               	movlw	0
  3993  0361  05C1               	andwf	___flmul@prod+3,f
  3994  0362                     l1652:
  3995  0362  1C3D               	btfss	___flmul@bexp,0
  3996  0363  2B65               	goto	u1701
  3997  0364  2B66               	goto	u1700
  3998  0365                     u1701:
  3999  0365  2B67               	goto	l1656
  4000  0366                     u1700:
  4001  0366                     l1654:
  4002  0366  17C0               	bsf	___flmul@prod+2,7
  4003  0367                     l1656:
  4004  0367  083D               	movf	___flmul@bexp,w
  4005  0368  00B2               	movwf	??___flmul
  4006  0369  1003               	clrc
  4007  036A  0C32               	rrf	??___flmul,w
  4008  036B  00B3               	movwf	??___flmul+1
  4009  036C  0833               	movf	??___flmul+1,w
  4010  036D  00C1               	movwf	___flmul@prod+3
  4011  036E                     l703:
  4012  036E  0837               	movf	___flmul@sign,w
  4013  036F  00B2               	movwf	??___flmul
  4014  0370  0832               	movf	??___flmul,w
  4015  0371  04C1               	iorwf	___flmul@prod+3,f
  4016  0372                     l1658:
  4017  0372  0841               	movf	___flmul@prod+3,w
  4018  0373  00AD               	movwf	?___flmul+3
  4019  0374  0840               	movf	___flmul@prod+2,w
  4020  0375  00AC               	movwf	?___flmul+2
  4021  0376  083F               	movf	___flmul@prod+1,w
  4022  0377  00AB               	movwf	?___flmul+1
  4023  0378  083E               	movf	___flmul@prod,w
  4024  0379  00AA               	movwf	?___flmul
  4025  037A                     l691:
  4026  037A  0008               	return
  4027  037B                     __end_of___flmul:
  4028                           
  4029                           	psect	text12
  4030  0F15                     __ptext12:	
  4031 ;; *************** function __Umul8_16 *****************
  4032 ;; Defined at:
  4033 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  multiplier      1    wreg     unsigned char 
  4036 ;;  multiplicand    1    3[COMMON] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  multiplier      1    4[BANK0 ] unsigned char 
  4039 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  4040 ;;  product         2    0[BANK0 ] unsigned int 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2    3[COMMON] unsigned int 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4050 ;;      Params:         2       0       0       0       0
  4051 ;;      Locals:         0       5       0       0       0
  4052 ;;      Temps:          2       0       0       0       0
  4053 ;;      Totals:         4       5       0       0       0
  4054 ;;Total ram usage:        9 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    2
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		___flmul
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function __Umul8_16
  4066  0F15                     __Umul8_16:
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4070                           ;__Umul8_16@multiplier stored from wreg
  4071  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0F17  00A4               	movwf	__Umul8_16@multiplier
  4074  0F18                     l1396:
  4075  0F18  01A0               	clrf	__Umul8_16@product
  4076  0F19  01A1               	clrf	__Umul8_16@product+1
  4077  0F1A                     l1398:
  4078  0F1A  0873               	movf	__Umul8_16@multiplicand,w
  4079  0F1B  00F5               	movwf	??__Umul8_16
  4080  0F1C  01F6               	clrf	??__Umul8_16+1
  4081  0F1D  0875               	movf	??__Umul8_16,w
  4082  0F1E  00A2               	movwf	__Umul8_16@word_mpld
  4083  0F1F  0876               	movf	??__Umul8_16+1,w
  4084  0F20  00A3               	movwf	__Umul8_16@word_mpld+1
  4085  0F21                     l1400:
  4086  0F21  1C24               	btfss	__Umul8_16@multiplier,0
  4087  0F22  2F24               	goto	u1041
  4088  0F23  2F25               	goto	u1040
  4089  0F24                     u1041:
  4090  0F24  2F2B               	goto	l710
  4091  0F25                     u1040:
  4092  0F25                     l1402:
  4093  0F25  0822               	movf	__Umul8_16@word_mpld,w
  4094  0F26  07A0               	addwf	__Umul8_16@product,f
  4095  0F27  1803               	skipnc
  4096  0F28  0AA1               	incf	__Umul8_16@product+1,f
  4097  0F29  0823               	movf	__Umul8_16@word_mpld+1,w
  4098  0F2A  07A1               	addwf	__Umul8_16@product+1,f
  4099  0F2B                     l710:
  4100  0F2B  3001               	movlw	1
  4101  0F2C                     u1055:
  4102  0F2C  1003               	clrc
  4103  0F2D  0DA2               	rlf	__Umul8_16@word_mpld,f
  4104  0F2E  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  4105  0F2F  3EFF               	addlw	-1
  4106  0F30  1D03               	skipz
  4107  0F31  2F2C               	goto	u1055
  4108  0F32  1003               	clrc
  4109  0F33  0CA4               	rrf	__Umul8_16@multiplier,f
  4110  0F34                     l1404:
  4111  0F34  0824               	movf	__Umul8_16@multiplier,w
  4112  0F35  1D03               	btfss	3,2
  4113  0F36  2F38               	goto	u1061
  4114  0F37  2F39               	goto	u1060
  4115  0F38                     u1061:
  4116  0F38  2F21               	goto	l1400
  4117  0F39                     u1060:
  4118  0F39                     l1406:
  4119  0F39  0821               	movf	__Umul8_16@product+1,w
  4120  0F3A  00F4               	movwf	?__Umul8_16+1
  4121  0F3B  0820               	movf	__Umul8_16@product,w
  4122  0F3C  00F3               	movwf	?__Umul8_16
  4123  0F3D                     l712:
  4124  0F3D  0008               	return
  4125  0F3E                     __end_of__Umul8_16:
  4126                           
  4127                           	psect	text13
  4128  0E8D                     __ptext13:	
  4129 ;; *************** function _SendString *****************
  4130 ;; Defined at:
  4131 ;;		line 23 in file "EUSART.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  X               1    wreg     PTR unsigned char 
  4134 ;;		 -> STR_12(2), STR_10(2), STR_8(2), STR_6(2), 
  4135 ;;		 -> STR_4(6), STR_3(6), STR_2(5), 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  X               1    5[COMMON] PTR unsigned char 
  4138 ;;		 -> STR_12(2), STR_10(2), STR_8(2), STR_6(2), 
  4139 ;;		 -> STR_4(6), STR_3(6), STR_2(5), 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4149 ;;      Params:         0       0       0       0       0
  4150 ;;      Locals:         1       0       0       0       0
  4151 ;;      Temps:          1       0       0       0       0
  4152 ;;      Totals:         2       0       0       0       0
  4153 ;;Total ram usage:        2 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    3
  4156 ;; This function calls:
  4157 ;;		_SendChar
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;;		_WriteNumber
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _SendString
  4166  0E8D                     _SendString:
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in _SendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4170                           ;SendString@X stored from wreg
  4171  0E8D  00F5               	movwf	SendString@X
  4172  0E8E                     l1426:
  4173                           
  4174                           ;EUSART.c: 24:     while (*X)
  4175  0E8E  2E9F               	goto	l1432
  4176  0E8F                     l1428:
  4177                           
  4178                           ;EUSART.c: 25:         SendChar(*X++);
  4179  0E8F  0875               	movf	SendString@X,w
  4180  0E90  0084               	movwf	4
  4181  0E91  120A  158A  2000  120A  158A  	fcall	stringdir
  4182  0E96  120A  158A  25E5  120A  158A  	fcall	_SendChar
  4183  0E9B                     l1430:
  4184  0E9B  3001               	movlw	1
  4185  0E9C  00F4               	movwf	??_SendString
  4186  0E9D  0874               	movf	??_SendString,w
  4187  0E9E  07F5               	addwf	SendString@X,f
  4188  0E9F                     l1432:
  4189                           
  4190                           ;EUSART.c: 24:     while (*X)
  4191  0E9F  0875               	movf	SendString@X,w
  4192  0EA0  0084               	movwf	4
  4193  0EA1  120A  158A  2000  120A  158A  	fcall	stringdir
  4194  0EA6  3A00               	xorlw	0
  4195  0EA7  1D03               	skipz
  4196  0EA8  2EAA               	goto	u1101
  4197  0EA9  2EAB               	goto	u1100
  4198  0EAA                     u1101:
  4199  0EAA  2E8F               	goto	l1428
  4200  0EAB                     u1100:
  4201  0EAB                     l175:
  4202  0EAB  0008               	return
  4203  0EAC                     __end_of_SendString:
  4204                           
  4205                           	psect	text14
  4206  0DE5                     __ptext14:	
  4207 ;; *************** function _SendChar *****************
  4208 ;; Defined at:
  4209 ;;		line 18 in file "EUSART.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  X               1    wreg     unsigned char 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  X               1    3[COMMON] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4223 ;;      Params:         0       0       0       0       0
  4224 ;;      Locals:         1       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0
  4226 ;;      Totals:         1       0       0       0       0
  4227 ;;Total ram usage:        1 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    2
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;;		_WriteNumber
  4235 ;;		_SendString
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _SendChar
  4241  0DE5                     _SendChar:
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _SendChar: [wreg]
  4245                           ;SendChar@X stored from wreg
  4246  0DE5  00F3               	movwf	SendChar@X
  4247  0DE6                     l1372:
  4248  0DE6                     l166:	
  4249                           ;EUSART.c: 19:     while (!TXIF);
  4250                           
  4251  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0DE8  1E0C               	btfss	12,4	;volatile
  4254  0DE9  2DEB               	goto	u1031
  4255  0DEA  2DEC               	goto	u1030
  4256  0DEB                     u1031:
  4257  0DEB  2DE6               	goto	l166
  4258  0DEC                     u1030:
  4259  0DEC                     l1374:
  4260                           
  4261                           ;EUSART.c: 20:     TXREG = X;
  4262  0DEC  0873               	movf	SendChar@X,w
  4263  0DED  0099               	movwf	25	;volatile
  4264  0DEE                     l169:
  4265  0DEE  0008               	return
  4266  0DEF                     __end_of_SendChar:
  4267                           
  4268                           	psect	text15
  4269  0ECB                     __ptext15:	
  4270 ;; *************** function _Lcd_Write_String *****************
  4271 ;; Defined at:
  4272 ;;		line 54 in file "LCD8.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  a               1    wreg     PTR unsigned char 
  4275 ;;		 -> STR_11(2), STR_9(2), STR_7(2), STR_5(2), 
  4276 ;;		 -> STR_1(17), 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  a               1    8[COMMON] PTR unsigned char 
  4279 ;;		 -> STR_11(2), STR_9(2), STR_7(2), STR_5(2), 
  4280 ;;		 -> STR_1(17), 
  4281 ;;  i               2    6[COMMON] int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         0       0       0       0       0
  4292 ;;      Locals:         3       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0
  4294 ;;      Totals:         3       0       0       0       0
  4295 ;;Total ram usage:        3 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    4
  4298 ;; This function calls:
  4299 ;;		_Lcd_Write_Char
  4300 ;; This function is called by:
  4301 ;;		_main
  4302 ;;		_WriteNumber
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _Lcd_Write_String
  4308  0ECB                     _Lcd_Write_String:
  4309                           
  4310                           ;incstack = 0
  4311                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4312                           ;Lcd_Write_String@a stored from wreg
  4313  0ECB  00F8               	movwf	Lcd_Write_String@a
  4314  0ECC                     l1418:
  4315                           
  4316                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  4317  0ECC  01F6               	clrf	Lcd_Write_String@i
  4318  0ECD  01F7               	clrf	Lcd_Write_String@i+1
  4319  0ECE  2EE2               	goto	l1424
  4320  0ECF                     l1420:
  4321                           
  4322                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  4323  0ECF  0876               	movf	Lcd_Write_String@i,w
  4324  0ED0  0778               	addwf	Lcd_Write_String@a,w
  4325  0ED1  0084               	movwf	4
  4326  0ED2  120A  158A  2000  120A  158A  	fcall	stringdir
  4327  0ED7  120A  158A  260A  120A  158A  	fcall	_Lcd_Write_Char
  4328  0EDC                     l1422:
  4329  0EDC  3001               	movlw	1
  4330  0EDD  07F6               	addwf	Lcd_Write_String@i,f
  4331  0EDE  1803               	skipnc
  4332  0EDF  0AF7               	incf	Lcd_Write_String@i+1,f
  4333  0EE0  3000               	movlw	0
  4334  0EE1  07F7               	addwf	Lcd_Write_String@i+1,f
  4335  0EE2                     l1424:
  4336  0EE2  0876               	movf	Lcd_Write_String@i,w
  4337  0EE3  0778               	addwf	Lcd_Write_String@a,w
  4338  0EE4  0084               	movwf	4
  4339  0EE5  120A  158A  2000  120A  158A  	fcall	stringdir
  4340  0EEA  3A00               	xorlw	0
  4341  0EEB  1D03               	skipz
  4342  0EEC  2EEE               	goto	u1091
  4343  0EED  2EEF               	goto	u1090
  4344  0EEE                     u1091:
  4345  0EEE  2ECF               	goto	l1420
  4346  0EEF                     u1090:
  4347  0EEF                     l134:
  4348  0EEF  0008               	return
  4349  0EF0                     __end_of_Lcd_Write_String:
  4350                           
  4351                           	psect	text16
  4352  0E0A                     __ptext16:	
  4353 ;; *************** function _Lcd_Write_Char *****************
  4354 ;; Defined at:
  4355 ;;		line 46 in file "LCD8.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  a               1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  a               1    5[COMMON] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         0       0       0       0       0
  4370 ;;      Locals:         1       0       0       0       0
  4371 ;;      Temps:          1       0       0       0       0
  4372 ;;      Totals:         2       0       0       0       0
  4373 ;;Total ram usage:        2 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    3
  4376 ;; This function calls:
  4377 ;;		_Lcd_Port
  4378 ;; This function is called by:
  4379 ;;		_WriteNumber
  4380 ;;		_Lcd_Write_String
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _Lcd_Write_Char
  4386  0E0A                     _Lcd_Write_Char:
  4387                           
  4388                           ;incstack = 0
  4389                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4390                           ;Lcd_Write_Char@a stored from wreg
  4391  0E0A  00F5               	movwf	Lcd_Write_Char@a
  4392  0E0B                     l1376:
  4393                           
  4394                           ;LCD8.c: 47:     RA4 = 1;
  4395  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0E0D  1605               	bsf	5,4	;volatile
  4398  0E0E                     l1378:
  4399                           
  4400                           ;LCD8.c: 48:     Lcd_Port(a);
  4401  0E0E  0875               	movf	Lcd_Write_Char@a,w
  4402  0E0F  120A  158A  25C9  120A  158A  	fcall	_Lcd_Port
  4403  0E14                     l1380:
  4404                           
  4405                           ;LCD8.c: 49:     RA5 = 1;
  4406  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0E16  1685               	bsf	5,5	;volatile
  4409  0E17                     l1382:
  4410                           
  4411                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4412  0E17  301A               	movlw	26
  4413  0E18  00F4               	movwf	??_Lcd_Write_Char
  4414  0E19                     u2577:
  4415  0E19  0BF4               	decfsz	??_Lcd_Write_Char,f
  4416  0E1A  2E19               	goto	u2577
  4417  0E1B  0000               	nop
  4418  0E1C                     l1384:
  4419                           
  4420                           ;LCD8.c: 51:     RA5 = 0;
  4421  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0E1E  1285               	bcf	5,5	;volatile
  4424  0E1F                     l128:
  4425  0E1F  0008               	return
  4426  0E20                     __end_of_Lcd_Write_Char:
  4427                           
  4428                           	psect	text17
  4429  0E52                     __ptext17:	
  4430 ;; *************** function _Lcd_Set_Cursor *****************
  4431 ;; Defined at:
  4432 ;;		line 21 in file "LCD8.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  a               1    wreg     unsigned char 
  4435 ;;  b               1    7[COMMON] unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  a               1    8[COMMON] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, pclath, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4447 ;;      Params:         1       0       0       0       0
  4448 ;;      Locals:         1       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0
  4450 ;;      Totals:         2       0       0       0       0
  4451 ;;Total ram usage:        2 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    4
  4454 ;; This function calls:
  4455 ;;		_Lcd_Cmd
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;;		_WriteNumber
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _Lcd_Set_Cursor
  4464  0E52                     _Lcd_Set_Cursor:
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4468                           ;Lcd_Set_Cursor@a stored from wreg
  4469  0E52  00F8               	movwf	Lcd_Set_Cursor@a
  4470  0E53                     l1410:
  4471                           
  4472                           ;LCD8.c: 22:     if (a == 1) {
  4473  0E53  0378               	decf	Lcd_Set_Cursor@a,w
  4474  0E54  1D03               	btfss	3,2
  4475  0E55  2E57               	goto	u1071
  4476  0E56  2E58               	goto	u1070
  4477  0E57                     u1071:
  4478  0E57  2E60               	goto	l1414
  4479  0E58                     u1070:
  4480  0E58                     l1412:
  4481                           
  4482                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  4483  0E58  0877               	movf	Lcd_Set_Cursor@b,w
  4484  0E59  3E7F               	addlw	127
  4485  0E5A  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4486                           
  4487                           ;LCD8.c: 24:     } else if (a == 2) {
  4488  0E5F  2E6D               	goto	l122
  4489  0E60                     l1414:
  4490  0E60  3002               	movlw	2
  4491  0E61  0678               	xorwf	Lcd_Set_Cursor@a,w
  4492  0E62  1D03               	btfss	3,2
  4493  0E63  2E65               	goto	u1081
  4494  0E64  2E66               	goto	u1080
  4495  0E65                     u1081:
  4496  0E65  2E6D               	goto	l122
  4497  0E66                     u1080:
  4498  0E66                     l1416:
  4499                           
  4500                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  4501  0E66  0877               	movf	Lcd_Set_Cursor@b,w
  4502  0E67  3EBF               	addlw	191
  4503  0E68  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4504  0E6D                     l122:
  4505  0E6D  0008               	return
  4506  0E6E                     __end_of_Lcd_Set_Cursor:
  4507                           
  4508                           	psect	text18
  4509  0790                     __ptext18:	
  4510 ;; *************** function _Lcd_Init *****************
  4511 ;; Defined at:
  4512 ;;		line 29 in file "LCD8.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4526 ;;      Params:         0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0
  4528 ;;      Temps:          2       0       0       0       0
  4529 ;;      Totals:         2       0       0       0       0
  4530 ;;Total ram usage:        2 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    4
  4533 ;; This function calls:
  4534 ;;		_Lcd_Cmd
  4535 ;;		_Lcd_Port
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           
  4542                           ;psect for function _Lcd_Init
  4543  0790                     _Lcd_Init:
  4544  0790                     l1718:	
  4545                           ;incstack = 0
  4546                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4547                           
  4548                           
  4549                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4550  0790  3027               	movlw	39
  4551  0791  00F8               	movwf	??_Lcd_Init+1
  4552  0792  30F5               	movlw	245
  4553  0793  00F7               	movwf	??_Lcd_Init
  4554  0794                     u2587:
  4555  0794  0BF7               	decfsz	??_Lcd_Init,f
  4556  0795  2F94               	goto	u2587
  4557  0796  0BF8               	decfsz	??_Lcd_Init+1,f
  4558  0797  2F94               	goto	u2587
  4559  0798                     l1720:
  4560                           
  4561                           ;LCD8.c: 31:     Lcd_Port(0x00);
  4562  0798  3000               	movlw	0
  4563  0799  120A  158A  25C9  120A  118A  	fcall	_Lcd_Port
  4564  079E                     l1722:
  4565                           
  4566                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4567  079E  3034               	movlw	52
  4568  079F  00F8               	movwf	??_Lcd_Init+1
  4569  07A0  30F1               	movlw	241
  4570  07A1  00F7               	movwf	??_Lcd_Init
  4571  07A2                     u2597:
  4572  07A2  0BF7               	decfsz	??_Lcd_Init,f
  4573  07A3  2FA2               	goto	u2597
  4574  07A4  0BF8               	decfsz	??_Lcd_Init+1,f
  4575  07A5  2FA2               	goto	u2597
  4576  07A6  2FA7               	nop2
  4577                           
  4578                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  4579  07A7  3030               	movlw	48
  4580  07A8  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4581  07AD                     l1724:
  4582                           
  4583                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4584  07AD  300D               	movlw	13
  4585  07AE  00F8               	movwf	??_Lcd_Init+1
  4586  07AF  30FB               	movlw	251
  4587  07B0  00F7               	movwf	??_Lcd_Init
  4588  07B1                     u2607:
  4589  07B1  0BF7               	decfsz	??_Lcd_Init,f
  4590  07B2  2FB1               	goto	u2607
  4591  07B3  0BF8               	decfsz	??_Lcd_Init+1,f
  4592  07B4  2FB1               	goto	u2607
  4593  07B5  2FB6               	nop2
  4594  07B6                     l1726:
  4595                           
  4596                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  4597  07B6  3030               	movlw	48
  4598  07B7  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4599                           
  4600                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  4601  07BC  306A               	movlw	106
  4602  07BD  00F7               	movwf	??_Lcd_Init
  4603  07BE                     u2617:
  4604  07BE  0BF7               	decfsz	??_Lcd_Init,f
  4605  07BF  2FBE               	goto	u2617
  4606  07C0  0000               	nop
  4607  07C1                     l1728:
  4608                           
  4609                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  4610  07C1  3030               	movlw	48
  4611  07C2  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4612  07C7                     l1730:
  4613                           
  4614                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  4615  07C7  3038               	movlw	56
  4616  07C8  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4617  07CD                     l1732:
  4618                           
  4619                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  4620  07CD  3010               	movlw	16
  4621  07CE  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4622  07D3                     l1734:
  4623                           
  4624                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  4625  07D3  3001               	movlw	1
  4626  07D4  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4627  07D9                     l1736:
  4628                           
  4629                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  4630  07D9  3006               	movlw	6
  4631  07DA  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4632  07DF                     l1738:
  4633                           
  4634                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  4635  07DF  300C               	movlw	12
  4636  07E0  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4637  07E5                     l125:
  4638  07E5  0008               	return
  4639  07E6                     __end_of_Lcd_Init:
  4640                           
  4641                           	psect	text19
  4642  0DEF                     __ptext19:	
  4643 ;; *************** function _Lcd_Clear *****************
  4644 ;; Defined at:
  4645 ;;		line 16 in file "LCD8.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4659 ;;      Params:         0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0
  4662 ;;      Totals:         0       0       0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    4
  4666 ;; This function calls:
  4667 ;;		_Lcd_Cmd
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _Lcd_Clear
  4675  0DEF                     _Lcd_Clear:
  4676  0DEF                     l1750:	
  4677                           ;incstack = 0
  4678                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4679                           
  4680                           
  4681                           ;LCD8.c: 17:     Lcd_Cmd(0);
  4682  0DEF  3000               	movlw	0
  4683  0DF0  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4684                           
  4685                           ;LCD8.c: 18:     Lcd_Cmd(1);
  4686  0DF5  3001               	movlw	1
  4687  0DF6  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4688  0DFB                     l116:
  4689  0DFB  0008               	return
  4690  0DFC                     __end_of_Lcd_Clear:
  4691                           
  4692                           	psect	text20
  4693  07E6                     __ptext20:	
  4694 ;; *************** function _Lcd_Cmd *****************
  4695 ;; Defined at:
  4696 ;;		line 8 in file "LCD8.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  a               1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  a               1    6[COMMON] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       0       0       0       0
  4711 ;;      Locals:         1       0       0       0       0
  4712 ;;      Temps:          2       0       0       0       0
  4713 ;;      Totals:         3       0       0       0       0
  4714 ;;Total ram usage:        3 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    3
  4717 ;; This function calls:
  4718 ;;		_Lcd_Port
  4719 ;; This function is called by:
  4720 ;;		_Lcd_Clear
  4721 ;;		_Lcd_Set_Cursor
  4722 ;;		_Lcd_Init
  4723 ;;		_Lcd_Shift_Right
  4724 ;;		_Lcd_Shift_Left
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _Lcd_Cmd
  4730  07E6                     _Lcd_Cmd:
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4734                           ;Lcd_Cmd@a stored from wreg
  4735  07E6  00F6               	movwf	Lcd_Cmd@a
  4736  07E7                     l1386:
  4737                           
  4738                           ;LCD8.c: 9:     RA4 = 0;
  4739  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  4740  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  4741  07E9  1205               	bcf	5,4	;volatile
  4742  07EA                     l1388:
  4743                           
  4744                           ;LCD8.c: 10:     Lcd_Port(a);
  4745  07EA  0876               	movf	Lcd_Cmd@a,w
  4746  07EB  120A  158A  25C9  120A  118A  	fcall	_Lcd_Port
  4747  07F0                     l1390:
  4748                           
  4749                           ;LCD8.c: 11:     RA5 = 1;
  4750  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  4751  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  4752  07F2  1685               	bsf	5,5	;volatile
  4753  07F3                     l1392:
  4754                           
  4755                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4756  07F3  300B               	movlw	11
  4757  07F4  00F5               	movwf	??_Lcd_Cmd+1
  4758  07F5  3062               	movlw	98
  4759  07F6  00F4               	movwf	??_Lcd_Cmd
  4760  07F7                     u2627:
  4761  07F7  0BF4               	decfsz	??_Lcd_Cmd,f
  4762  07F8  2FF7               	goto	u2627
  4763  07F9  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4764  07FA  2FF7               	goto	u2627
  4765  07FB  0000               	nop
  4766  07FC                     l1394:
  4767                           
  4768                           ;LCD8.c: 13:     RA5 = 0;
  4769  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  4770  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  4771  07FE  1285               	bcf	5,5	;volatile
  4772  07FF                     l113:
  4773  07FF  0008               	return
  4774  0800                     __end_of_Lcd_Cmd:
  4775                           
  4776                           	psect	text21
  4777  0DC9                     __ptext21:	
  4778 ;; *************** function _Lcd_Port *****************
  4779 ;; Defined at:
  4780 ;;		line 4 in file "LCD8.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  a               1    wreg     unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  a               1    3[COMMON] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0
  4797 ;;      Totals:         1       0       0       0       0
  4798 ;;Total ram usage:        1 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    2
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_Lcd_Cmd
  4805 ;;		_Lcd_Init
  4806 ;;		_Lcd_Write_Char
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _Lcd_Port
  4812  0DC9                     _Lcd_Port:
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in _Lcd_Port: [wreg]
  4816                           ;Lcd_Port@a stored from wreg
  4817  0DC9  00F3               	movwf	Lcd_Port@a
  4818  0DCA                     l1370:
  4819                           
  4820                           ;LCD8.c: 5:     PORTD = a;
  4821  0DCA  0873               	movf	Lcd_Port@a,w
  4822  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0DCD  0088               	movwf	8	;volatile
  4825  0DCE                     l110:
  4826  0DCE  0008               	return
  4827  0DCF                     __end_of_Lcd_Port:
  4828                           
  4829                           	psect	text22
  4830  0E36                     __ptext22:	
  4831 ;; *************** function _EUSART_conf *****************
  4832 ;; Defined at:
  4833 ;;		line 3 in file "EUSART.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      void 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4847 ;;      Params:         0       0       0       0       0
  4848 ;;      Locals:         0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0
  4850 ;;      Totals:         0       0       0       0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    2
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _EUSART_conf
  4863  0E36                     _EUSART_conf:
  4864  0E36                     l1740:	
  4865                           ;incstack = 0
  4866                           ; Regs used in _EUSART_conf: [wreg+status,2]
  4867                           
  4868                           
  4869                           ;EUSART.c: 4:     TXSTAbits.TXEN = 1;
  4870  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0E38  1698               	bsf	24,5	;volatile
  4873                           
  4874                           ;EUSART.c: 5:     PIE1bits.RCIE = 0;
  4875  0E39  128C               	bcf	12,5	;volatile
  4876                           
  4877                           ;EUSART.c: 6:     PIE1bits.TXIE = 0;
  4878  0E3A  120C               	bcf	12,4	;volatile
  4879                           
  4880                           ;EUSART.c: 7:     TXSTAbits.SYNC = 0;
  4881  0E3B  1218               	bcf	24,4	;volatile
  4882                           
  4883                           ;EUSART.c: 8:     RCSTAbits.SPEN = 1;
  4884  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0E3E  1798               	bsf	24,7	;volatile
  4887                           
  4888                           ;EUSART.c: 9:     TXSTAbits.TX9 = 0;
  4889  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  4890  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  4891  0E41  1318               	bcf	24,6	;volatile
  4892                           
  4893                           ;EUSART.c: 10:     RCSTAbits.RC9 = 0;
  4894  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0E44  1318               	bcf	24,6	;volatile
  4897                           
  4898                           ;EUSART.c: 11:     BAUDCTLbits.BRG16 = 0;
  4899  0E45  1683               	bsf	3,5	;RP0=1, select bank3
  4900  0E46  1703               	bsf	3,6	;RP1=1, select bank3
  4901  0E47  1187               	bcf	7,3	;volatile
  4902  0E48                     l1742:
  4903                           
  4904                           ;EUSART.c: 12:     SPBRG = ((8000000 / 16) / 9600) - 1;
  4905  0E48  3033               	movlw	51
  4906  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  4907  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  4908  0E4B  0099               	movwf	25	;volatile
  4909  0E4C                     l1744:
  4910                           
  4911                           ;EUSART.c: 13:     TXSTAbits.BRGH = 1;
  4912  0E4C  1518               	bsf	24,2	;volatile
  4913  0E4D                     l1746:
  4914                           
  4915                           ;EUSART.c: 14:     SPBRGH = 0;
  4916  0E4D  019A               	clrf	26	;volatile
  4917  0E4E                     l1748:
  4918                           
  4919                           ;EUSART.c: 15:     RCSTAbits.CREN = 1;
  4920  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0E50  1618               	bsf	24,4	;volatile
  4923  0E51                     l163:
  4924  0E51  0008               	return
  4925  0E52                     __end_of_EUSART_conf:
  4926                           
  4927                           	psect	text23
  4928  0E6E                     __ptext23:	
  4929 ;; *************** function _oli *****************
  4930 ;; Defined at:
  4931 ;;		line 136 in file "Master.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, pclath, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0
  4947 ;;      Temps:          3       0       0       0       0
  4948 ;;      Totals:         3       0       0       0       0
  4949 ;;Total ram usage:        3 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    1
  4952 ;; This function calls:
  4953 ;;		_Receive
  4954 ;; This function is called by:
  4955 ;;		Interrupt level 1
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _oli
  4961  0E6E                     _oli:
  4962  0E6E                     i1l1352:
  4963  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0E70  1A8C               	btfsc	12,5	;volatile
  4966  0E71  2E73               	goto	u102_21
  4967  0E72  2E74               	goto	u102_20
  4968  0E73                     u102_21:
  4969  0E73  2E85               	goto	i1l80
  4970  0E74                     u102_20:
  4971  0E74                     i1l1354:
  4972  0E74  120A  158A  25FC  120A  158A  	fcall	_Receive
  4973  0E79  00F0               	movwf	??_oli
  4974  0E7A  0870               	movf	??_oli,w
  4975  0E7B  00F9               	movwf	_comando
  4976  0E7C                     i1l1356:
  4977  0E7C  30C7               	movlw	199
  4978  0E7D  00F0               	movwf	??_oli
  4979  0E7E                     u263_27:
  4980  0E7E  0BF0               	decfsz	??_oli,f
  4981  0E7F  2E7E               	goto	u263_27
  4982  0E80  2E81               	nop2
  4983  0E81                     i1l1358:
  4984  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0E83  128C               	bcf	12,5	;volatile
  4987  0E84  2E86               	goto	i1l83
  4988  0E85                     i1l80:
  4989  0E85  080C               	movf	12,w	;volatile
  4990  0E86                     i1l83:
  4991  0E86  0872               	movf	??_oli+2,w
  4992  0E87  008A               	movwf	10
  4993  0E88  0E71               	swapf	??_oli+1,w
  4994  0E89  0083               	movwf	3
  4995  0E8A  0EFE               	swapf	btemp,f
  4996  0E8B  0E7E               	swapf	btemp,w
  4997  0E8C  0009               	retfie
  4998  0E8D                     __end_of_oli:
  4999                           
  5000                           	psect	intentry
  5001  0004                     __pintentry:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _oli: [wreg+pclath+cstack]
  5004                           
  5005  0004                     interrupt_function:
  5006  007E                     saved_w	set	btemp
  5007  0004  00FE               	movwf	btemp
  5008  0005  0E03               	swapf	3,w
  5009  0006  00F1               	movwf	??_oli+1
  5010  0007  080A               	movf	10,w
  5011  0008  00F2               	movwf	??_oli+2
  5012  0009  120A  158A  2E6E   	ljmp	_oli
  5013                           
  5014                           	psect	text24
  5015  0DFC                     __ptext24:	
  5016 ;; *************** function _Receive *****************
  5017 ;; Defined at:
  5018 ;;		line 28 in file "EUSART.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      unsigned char 
  5025 ;; Registers used:
  5026 ;;		wreg
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_oli
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _Receive
  5047  0DFC                     _Receive:
  5048  0DFC                     i1l1274:	
  5049                           ;incstack = 0
  5050                           ; Regs used in _Receive: [wreg]
  5051                           
  5052                           
  5053                           ;EUSART.c: 29:     if (RCSTAbits.OERR) {
  5054  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0DFE  1C98               	btfss	24,1	;volatile
  5057  0DFF  2E01               	goto	u99_21
  5058  0E00  2E02               	goto	u99_20
  5059  0E01                     u99_21:
  5060  0E01  2E04               	goto	i1l179
  5061  0E02                     u99_20:
  5062  0E02                     i1l1276:
  5063                           
  5064                           ;EUSART.c: 30:         RCSTAbits.CREN = 0;
  5065  0E02  1218               	bcf	24,4	;volatile
  5066                           
  5067                           ;EUSART.c: 31:         RCSTAbits.CREN = 1;
  5068  0E03  1618               	bsf	24,4	;volatile
  5069  0E04                     i1l179:	
  5070                           ;EUSART.c: 34:     }
  5071                           
  5072                           
  5073                           ;EUSART.c: 33:     while (PIR1bits.RCIF == 0) {
  5074  0E04  1E8C               	btfss	12,5	;volatile
  5075  0E05  2E07               	goto	u100_21
  5076  0E06  2E08               	goto	u100_20
  5077  0E07                     u100_21:
  5078  0E07  2E04               	goto	i1l179
  5079  0E08                     u100_20:
  5080  0E08                     i1l1278:
  5081                           
  5082                           ;EUSART.c: 35:     return RCREG;
  5083  0E08  081A               	movf	26,w	;volatile
  5084  0E09                     i1l182:
  5085  0E09  0008               	return
  5086  0E0A                     __end_of_Receive:
  5087  007E                     btemp	set	126	;btemp
  5088  007E                     wtemp0	set	126
  5089                           
  5090                           	psect	config
  5091                           
  5092                           ;Config register CONFIG1 @ 0x2007
  5093                           ;	Oscillator Selection bits
  5094                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  5095                           ;	Watchdog Timer Enable bit
  5096                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5097                           ;	Power-up Timer Enable bit
  5098                           ;	PWRTE = OFF, PWRT disabled
  5099                           ;	RE3/MCLR pin function select bit
  5100                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5101                           ;	Code Protection bit
  5102                           ;	CP = OFF, Program memory code protection is disabled
  5103                           ;	Data Code Protection bit
  5104                           ;	CPD = OFF, Data memory code protection is disabled
  5105                           ;	Brown Out Reset Selection bits
  5106                           ;	BOREN = OFF, BOR disabled
  5107                           ;	Internal External Switchover bit
  5108                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5109                           ;	Fail-Safe Clock Monitor Enabled bit
  5110                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5111                           ;	Low Voltage Programming Enable bit
  5112                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5113                           ;	In-Circuit Debugger Mode bit
  5114                           ;	DEBUG = 0x1, unprogrammed default
  5115  2007                     	org	8199
  5116  2007  20F1               	dw	8433
  5117                           
  5118                           ;Config register CONFIG2 @ 0x2008
  5119                           ;	Brown-out Reset Selection bit
  5120                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5121                           ;	Flash Program Memory Self Write Enable bits
  5122                           ;	WRT = OFF, Write protection off
  5123  2008                     	org	8200
  5124  2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     64      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SendString@X	PTR unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[2]), STR_9(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _setup->_spiInit
    _WriteNumber->_Lcd_Set_Cursor
    _WriteNumber->_Lcd_Write_String
    _WriteNumber->___fltol
    _WriteNumber->___wmul
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _SendString->_SendChar
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteNumber
    _WriteNumber->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10770
                                             59 BANK0      5     5      0
                        _EUSART_conf
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _SendChar
                         _SendString
                        _WriteNumber
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _WriteNumber                                         14    11      3    8851
                                             45 BANK0     14    11      3
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _SendChar
                         _SendString
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _SendString                                           2     2      0     298
                                              4 COMMON     2     2      0
                           _SendChar
 ---------------------------------------------------------------------------------
 (3) _SendChar                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     299
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     740
                                              7 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _Receive
 ---------------------------------------------------------------------------------
 (6) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_conf
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SendChar
   _SendString
     _SendChar
   _WriteNumber
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _SendChar
     _SendString
       _SendChar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _oli (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 20:27:23 2021

                        _a 007A                          pc 0002                _SSPSTATbits 0094  
                       l75 0ECA                         l95 0514                         l97 0550  
                       l99 05BD                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l110 0DCE                        l113 07FF  
                      l122 0E6D                        l202 0DD5                        l116 0DFB  
                      l125 07E5                        l205 0DDB                        l134 0EEF  
                      l302 0EFC                        l128 0E1F                        l304 0F14  
                      l216 0DE4                        l208 0DD4                        l163 0E51  
                      l166 0DE6                        l175 0EAB                        l169 0DEE  
                      l710 0F2B                        l198 0E30                        l703 036E  
                      l199 0E35                        l712 0F3D                        l741 073D  
                      l574 0F83                        l495 0FEA                        l735 06F8  
                      l488 0FFF                        l737 078F                        l498 0FFF  
                      l691 037A                        l748 0759                        l749 0765  
                      l697 02E6                        _RA4 002C                        _RA5 002D  
     __size_of_WriteNumber 0243                        _oli 0E6E                        fsr0 0004  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 0078  
             ?_EUSART_conf 0070                       l2000 0753                       l2010 0786  
                     l2002 075D                       l2012 0787                       l2004 0767  
                     l2020 0386                       l2100 05E0                       l2006 077D  
                     l2022 038C                       l2030 0414                       l2110 05FE  
                     l2102 05E6                       l1400 0F21                       l2008 0782  
                     l2032 0419                       l2040 0462                       l2024 03CB  
                     l2016 037E                       l2120 0625                       l2112 0608  
                     l2104 05F0                       l1410 0E53                       l1402 0F25  
                     l2050 04C0                       l2042 0475                       l2034 041A  
                     l2026 03D1                       l2018 0384                       l2130 064A  
                     l2122 0626                       l2114 060E                       l2106 05FA  
                     l1412 0E58                       l1420 0ECF                       l1404 0F34  
                     l2060 04DB                       l2052 04C5                       l2044 048F  
                     l2036 045A                       l2028 0411                       l2140 0672  
                     l2132 064E                       l2124 0630                       l2116 0618  
                     l2108 05FD                       l1414 0E60                       l1422 0EDC  
                     l1430 0E9B                       l1406 0F39                       l2070 04FE  
                     l2062 04E5                       l2054 04CA                       l2046 04A2  
                     l2038 045B                       l2150 06B1                       l2142 0678  
                     l2134 0656                       l2126 0636                       l2118 0622  
                     l1416 0E66                       l1424 0EE2                       l1432 0E9F  
                     l1600 0244                       l2080 0544                       l2072 0508  
                     l2064 04EB                       l2056 04CF                       l2048 04BC  
                     l1440 0E2C                       l2160 06C3                       l2144 0689  
                     l2136 065C                       l2128 0640                       l1370 0DCA  
                     l1418 0ECC                       l1426 0E8E                       l1610 02B2  
                     l1602 026A                       l1530 002C                       l1522 001A  
                     l1450 0EF6                       l2090 05B7                       l2082 054A  
                     l2074 050E                       l2058 04D5                       l2066 04F2  
                     l1442 0E2F                       l1434 0E21                       l2146 068F  
                     l2138 0662                       l1380 0E14                       l1372 0DE6  
                     l1428 0E8F                       l1620 02CA                       l1612 02B6  
                     l1604 0292                       l1540 0048                       l1532 0031  
                     l1524 0021                       l1452 0F03                       l2084 0598  
                     l2076 0531                       l2068 04F8                       l1436 0E28  
                     l1444 0DD5                       l2156 06B5                       l2148 06A3  
                     l2092 05BE                       l1390 07F0                       l1382 0E17  
                     l1374 0DEC                       l1630 02EB                       l1622 02CB  
                     l1614 02B7                       l1606 029B                       l1550 005D  
                     l1542 004D                       l1534 0036                       l1526 0027  
                     l1454 0F0A                       l1446 0EF0                       l2086 059F  
                     l2078 0538                       l1438 0E2A                       l1710 0EB0  
                     l2158 06BB                       l2094 05D2                       l1392 07F3  
                     l1720 0798                       l1384 0E1C                       l1376 0E0B  
                     l1632 02F0                       l1640 0321                       l1624 02CF  
                     l1616 02C0                       l1608 02A9                       l1560 0079  
                     l1552 0062                       l1544 0053                       l1536 003E  
                     l1528 002B                       l1456 0F10                       l1448 0EF2  
                     l2088 05B1                       l1712 0EBF                       l2096 05D5  
                     l1394 07FC                       l1386 07E7                       l1730 07C7  
                     l1722 079E                       l1378 0E0E                       l1650 0354  
                     l1642 032E                       l1634 02FE                       l1626 02E3  
                     l1618 02C6                       l1570 00A4                       l1562 007E  
                     l1554 006A                       l1546 0057                       l1538 0040  
                     l1714 0EC0                       l1706 0EAC                       l2098 05D6  
                     l1740 0E36                       l1388 07EA                       l1732 07CD  
                     l1724 07AD                       l1396 0F18                       l1652 0362  
                     l1644 0339                       l1636 0302                       l1580 0141  
                     l1572 00C1                       l1556 006C                       l1548 0058  
                     l1716 0EC1                       l1708 0EAF                       l1742 0E48  
                     l1750 0DEF                       l1734 07D3                       l1726 07B6  
                     l1718 0790                       l1398 0F1A                       l1654 0366  
                     l1646 0348                       l1638 031B                       l1590 01A4  
                     l1582 014A                       l1574 00DD                       l1566 0087  
                     l1558 0074                       l1910 0F84                       l1744 0E4C  
                     l1736 07D9                       l1728 07C1                       l1656 0367  
                     l1648 0352                       l1592 01BD                       l1584 015A  
                     l1576 0109                       l1568 0097                       l1920 0FB0  
                     l1912 0F91                       l1752 0DD0                       l1746 0E4D  
                     l1738 07DF                       l1658 0372                       l1594 01DA  
                     l1586 0177                       l1578 0125                       l1922 0FB8  
                     l1754 0DDC                       l1748 0E4E                       l1596 0207  
                     l1588 0187                       l1940 0FDF                       l1932 0FC6  
                     l1924 0FBA                       l1916 0F9A                       l1756 0DE1  
                     l1598 0217                       l1942 0FEF                       l1926 0FBE  
                     l1934 0FD8                       l1918 0FAF                       l1950 0F48  
                     l1944 0FF4                       l1960 0F6B                       l1952 0F4B  
                     l1962 0F71                       l1954 0F52                       l1946 0F3E  
                     l1964 0F72                       l1956 0F56                       l1948 0F42  
                     l1980 0700                       l1972 06D7                       l1966 0F79  
                     l1958 0F5A                       l1990 0722                       l1974 06DC  
                     l1968 0F7F                       l1992 0726                       l1984 0709  
                     l1976 06E0                       l1994 0734                       l1986 070E  
                     l1978 06F0                       l1996 0744                       l1988 071B  
                     l1998 074F                       ?_oli 0070                       STR_1 0806  
                     STR_2 0823                       STR_3 0817                       STR_4 081D  
                     STR_5 0828                       STR_6 0828                       STR_7 0826  
                     STR_8 0826                       STR_9 082A                       u1100 0EAB  
                     u1101 0EAA                       u1030 0DEC                       u1110 0E28  
                     u1031 0DEB                       u1111 0E27                       u1040 0F25  
                     u1120 0DDB                       u1041 0F24                       u1121 0DDA  
                     u1130 0EF6                       u1131 0EF5                       u1060 0F39  
                     u2100 0FEF                       u2020 0F91                       u1061 0F38  
                     u2101 0FEE                       u2021 0F90                       u1070 0E58  
                     u2110 0FF4                       u2030 0FA8                       u1071 0E57  
                     u1055 0F2C                       u2111 0FF3                       u1080 0E66  
                     u1400 0079                       u2040 0FBE                       u2120 0F48  
                     u1160 0F10                       u2200 06E0                       u1081 0E65  
                     u1401 0078                       u2041 0FBD                       u2121 0F47  
                     u1161 0F0F                       u1145 0EFD                       u2201 06DF  
                     u1090 0EEF                       u1410 007E                       u2050 0FC5  
                     u2210 0700                       u1091 0EEE                       u1411 007D  
                     u2051 0FC4                       u2035 0FA3                       u1155 0F04  
                     u2211 06FF                       u1340 002B                       u2140 0F5A  
                     u2300 0772                       u1501 01CC                       u1421 00CF  
                     u1341 002A                       u2141 0F59                       u1502 01D3  
                     u1422 00D6                       u1350 0031                       u2070 0FD7  
                     u2310 0782                       u2230 0721                       u1511 01F9  
                     u1503 01DA                       u1431 00EB                       u1423 00DD  
                     u1351 0030                       u2071 0FD6                       u2135 0F4C  
                     u2311 0781                       u2231 0720                       u1512 0200  
                     u1432 00F2                       u1360 0036                       u2080 0FDE  
                     u2160 0F6B                       u2320 0786                       u2400 04FE  
                     u1521 0226                       u1513 0207                       u1441 0117  
                     u1433 00F9                       u1361 0035                       u2081 0FDD  
                     u2065 0FC7                       u2161 0F6A                       u2321 0785  
                     u2305 076D                       u2225 0713                       u2401 04FD  
                     u1610 02CA                       u1530 0250                       u1522 022D  
                     u1442 011E                       u1370 0057                       u2250 0743  
                     u2410 0538                       u2330 0384                       u1611 02C9  
                     u1523 0234                       u1451 0133                       u1443 0125  
                     u1371 0056                       u2155 0F5B                       u2251 0742  
                     u2411 0537                       u2331 0383                       u1700 0366  
                     u1620 02CF                       u1452 013A                       u1380 005D  
                     u2180 0F7F                       u2420 0558                       u2340 038C  
                     u1701 0365                       u1621 02CE                       u1605 02B9  
                     u1541 025C                       u1453 0141                       u1381 005C  
                     u2181 0F7E                       u2165 0F67                       u2245 0735  
                     u2421 0556                       u2341 038B                       u1630 02E3  
                     u1550 0278                       u1542 0263                       u1390 0062  
                     u2270 0753                       u2190 06DC                       u2430 0559  
                     u2350 03D1                       u1631 02E2                       u1543 026A  
                     u1535 024B                       u1471 0169                       u1391 0061  
                     u2095 0FE1                       u2175 0F73                       u2271 0752  
                     u2191 06DB                       u2351 03D0                       u1640 02EA  
                     u1472 0170                       u2280 0759                       u2440 057C  
                     u2360 0419                       u1641 02E9                       u1561 0284  
                     u1481 0196                       u1473 0177                       u1465 0143  
                     u2281 0758                       u2265 0748                       u2441 057A  
                     u2361 0418                       u1650 02F0                       u1562 028B  
                     u1482 019D                       u2290 075D                       u2450 057D  
                     u2370 04D5                       u1651 02EF                       u1563 0292  
                     u1555 0273                       u1483 01A4                       u2291 075C  
                     u2371 04D4                       u2507 05DC                       u1660 0302  
                     u2460 059F                       u2380 04DB                       u1661 0301  
                     u2461 059E                       u2381 04DA                       u2517 05F6  
                     u1670 0311                       u1590 02B6                       u2470 05A5  
                     u2390 04F8                       u2607 07B1                       u1591 02B5  
                     u1575 0294                       u1495 01A6                       u2471 05A3  
                     u2391 04F7                       u2527 0604                       u1680 032E  
                     u2480 05A6                       u2617 07BE                       u1681 032D  
                     u1585 02AB                       u2537 061E                       u1690 0348  
                     u2490 06D0                       u2627 07F7                       u1691 0347  
                     u1675 030C                       u2491 06CF                       u2547 062C  
                     u1685 032A                       u2557 0646                       u1695 0344  
                     u2495 06CC                       u2567 06AB                       u2577 0E19  
                     u2587 0794                       u2597 07A2                       i1l80 0E85  
                     i1l83 0E86                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 05BE                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0800            __end_of_Receive 0E0A  
                    ??_oli 0070              ___fltol@sign1 0077                      ?_main 0070  
                    STR_10 082A                      STR_11 082C                      STR_12 082C  
          __end_of___flmul 037B            __end_of___fltol 1000                      _ANSEL 0188  
          __end_of___lwdiv 0F84                      i1l182 0E09                      i1l179 0E04  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 001C                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TXREG 0019                      u99_20 0E02                      u99_21 0E01  
                    _setup 0EAC                      main@i 005E                      pclath 000A  
          __end_of_spiInit 0E36            __end_of_spiRead 0DE5                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 07E6           __end_of_Lcd_Port 0DCF  
          __initialization 000F               __end_of_main 06D4           __end_of_SendChar 0DEF  
                   ??_main 005B         __size_of_Lcd_Clear 000D                     ?_setup 0070  
                   _ANSELH 0189                     u100_20 0E08                     u100_21 0E07  
                   u102_20 0E74                     u102_21 0E73                     i1l1352 0E6E  
                   i1l1274 0DFC                     i1l1354 0E74                     i1l1276 0E02  
                   i1l1356 0E7C                     i1l1278 0E08                     i1l1358 0E81  
               _SendString 0E8D                     u263_27 0E7E                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 0790                  ??_Receive 0070                     ___wmul 0EF0  
                ??___flmul 0032                  ??___fltol 0048                  ??___lwdiv 0077  
       __size_of__Umul8_16 0029                     saved_w 007E           __end_of_spiWrite 0DD5  
                ??_spiInit 0076                  ??_spiRead 0073            Lcd_Set_Cursor@a 0078  
          Lcd_Set_Cursor@b 0077               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073    __end_of__initialization 0016       __size_of_EUSART_conf 001C  
        __end_of_Lcd_Clear 0DFC                 ___fltol@f1 0044             __pcstackCOMMON 0070  
            __end_of_setup 0ECB                SendString@X 0075             _Lcd_Set_Cursor 0E52  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0077  
               __pbssBANK0 0060                ?_SendString 0070                  ?_SendChar 0070  
        __end_of__Umul8_16 0F3E                 __pmaintext 05BE                    ?___wmul 0073  
               __pintentry 0004             WriteNumber@dec 0057             WriteNumber@cor 0054  
  __size_of_spiReceiveWait 0007              ??_WriteNumber 0050  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0E6E                  ?___xxtofl 0073                 ??_Lcd_Init 0077  
               ??_Lcd_Port 0073           WriteNumber@valor 004E                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 0E0A                    _Lcd_Cmd 07E6  
               ??_SendChar 0073                    _Receive 0DFC                    _Sensor1 0062  
                  _Sensor2 0061                    _Sensor3 0060                  ?_spiWrite 0070  
                  ___flmul 001A                    ___fltol 0F84            __size_of___wmul 0025  
                  ___lwdiv 0F3E            ?_Lcd_Set_Cursor 0077        __size_of_SendString 001F  
                  __ptext1 0DCF                    __ptext2 0DDC                    __ptext3 0DD5  
                  __ptext4 0EAC                    __ptext5 0E20                    __ptext6 037B  
                  __ptext7 06D4                    __ptext8 0EF0                    __ptext9 0F3E  
                  _comando 0079               __size_of_oli 001F                 ??___xxtofl 0020  
      __end_of_WriteNumber 05BE                    _spiInit 0E20                    _spiRead 0DDC  
   __end_of_Lcd_Write_Char 0E20       end_of_initialization 0016                  _RCSTAbits 0018  
               ??_spiWrite 0073                  Lcd_Port@a 0073                  _PORTAbits 0005  
       WriteNumber@columna 004D         WriteNumber@formato 004F              ___xxtofl@sign 0024  
                _TRISCbits 0087                spiWrite@dat 0073            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0078          Lcd_Write_String@i 0076                ___flmul@grs 0038  
                _TXSTAbits 0098                  _Lcd_Clear 0DEF             _spiReceiveWait 0DD5  
           __end_of___wmul 0F15           _Lcd_Write_String 0ECB                _BAUDCTLbits 0187  
              _WriteNumber 037B                  SendChar@X 0073        start_initialization 000F  
              __end_of_oli 0E8D              ??_EUSART_conf 0073               ??_SendString 0074  
        __size_of_Lcd_Init 0056          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0DDC  
        __size_of_SendChar 000A                 ?_Lcd_Clear 0070                   ??___wmul 0077  
                __Umul8_16 0F15            Lcd_Write_Char@a 0075         __end_of_SendString 0EAC  
                ___flmul@a 002E                  ___flmul@b 002A                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070        __end_of_EUSART_conf 0E52                   ?_Receive 0070  
         ___lwdiv@dividend 0075            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0078  
                 ?___flmul 002A                   ?___fltol 0044                 ?__Umul8_16 0073  
                 ?___lwdiv 0073          __size_of_spiWrite 0006                  __pstrings 0800  
          WriteNumber@cent 0055            WriteNumber@fila 005A            WriteNumber@temp 0058  
                 ?_spiInit 0073                   ?_spiRead 0070           ___lwdiv@quotient 0021  
           __size_of_setup 001F       spiInit@sTransmitEdge 0075          interrupt_function 0004  
           ___wmul@product 0077                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
        WriteNumber@unidad 0056                __stringbase 0805          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 0790                   _Lcd_Port 0DC9  
              _EUSART_conf 0E36   __end_of_Lcd_Write_String 0EF0           __size_of_Lcd_Cmd 001A  
                 _SendChar 0DE5           __size_of_Receive 000E                ??__Umul8_16 0075  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
             ?_WriteNumber 004D         __end_of__stringtab 0806                   ___xxtofl 06D4  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 0F84  
                 __ptext11 001A                   __ptext20 07E6                   __ptext12 0F15  
                 __ptext21 0DC9                   __ptext13 0E8D                   __ptext22 0E36  
                 __ptext14 0DE5                   __ptext23 0E6E                   __ptext15 0ECB  
                 __ptext24 0DFC                   __ptext16 0E0A                   __ptext17 0E52  
                 __ptext18 0790                   __ptext19 0DEF           __size_of_spiInit 0016  
         __size_of_spiRead 0009              __size_of_main 0116                   _spiWrite 0DCF  
             spiInit@sType 0076          spiInit@sClockIdle 0074                 _INTCONbits 000B  
                 intlevel1 0000           ??_spiReceiveWait 0073                  stringcode 0800  
   __Umul8_16@multiplicand 0073                   stringdir 0800                   stringtab 0800  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
