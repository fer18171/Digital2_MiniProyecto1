

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 20:14:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  001A                     _RCREG	set	26
   466  0019                     _TXREG	set	25
   467  0018                     _RCSTAbits	set	24
   468  0008                     _PORTD	set	8
   469  000C                     _PIR1bits	set	12
   470  000B                     _INTCONbits	set	11
   471  0006                     _PORTB	set	6
   472  0005                     _PORTAbits	set	5
   473  0064                     _TXIF	set	100
   474  002D                     _RA5	set	45
   475  002C                     _RA4	set	44
   476  0094                     _SSPSTATbits	set	148
   477  0094                     _SSPSTAT	set	148
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0086                     _TRISB	set	134
   483  0085                     _TRISA	set	133
   484  0088                     _TRISD	set	136
   485  0087                     _TRISCbits	set	135
   486  0087                     _TRISC	set	135
   487  043B                     _TRISC3	set	1083
   488  043D                     _TRISC5	set	1085
   489  0187                     _BAUDCTLbits	set	391
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0800                     __pstrings:
   495  0800                     stringtab:
   496  0800                     __stringtab:
   497  0800                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  0800                     stringdir:
   501  0800  3008               	movlw	high stringdir
   502  0801  008A               	movwf	10
   503  0802  0804               	movf	4,w
   504  0803  0A84               	incf	4,f
   505  0804  0782               	addwf	2,f
   506  0805                     __stringbase:
   507  0805  3400               	retlw	0
   508  0806                     __end_of__stringtab:
   509  0806                     STR_1:
   510  0806  3420               	retlw	32	;' '
   511  0807  3453               	retlw	83	;'S'
   512  0808  3431               	retlw	49	;'1'
   513  0809  343A               	retlw	58	;':'
   514  080A  3420               	retlw	32	;' '
   515  080B  3420               	retlw	32	;' '
   516  080C  3420               	retlw	32	;' '
   517  080D  3453               	retlw	83	;'S'
   518  080E  3432               	retlw	50	;'2'
   519  080F  343A               	retlw	58	;':'
   520  0810  3420               	retlw	32	;' '
   521  0811  3420               	retlw	32	;' '
   522  0812  3420               	retlw	32	;' '
   523  0813  3453               	retlw	83	;'S'
   524  0814  3433               	retlw	51	;'3'
   525  0815  343A               	retlw	58	;':'
   526  0816  3400               	retlw	0
   527  0817                     STR_3:
   528  0817  3420               	retlw	32	;' '
   529  0818  3453               	retlw	83	;'S'
   530  0819  3432               	retlw	50	;'2'
   531  081A  343A               	retlw	58	;':'
   532  081B  3420               	retlw	32	;' '
   533  081C  3400               	retlw	0
   534  081D                     STR_4:
   535  081D  3420               	retlw	32	;' '
   536  081E  3453               	retlw	83	;'S'
   537  081F  3433               	retlw	51	;'3'
   538  0820  343A               	retlw	58	;':'
   539  0821  3420               	retlw	32	;' '
   540  0822  3400               	retlw	0
   541  0823                     STR_2:
   542  0823  3453               	retlw	83	;'S'
   543  0824  3431               	retlw	49	;'1'
   544  0825  343A               	retlw	58	;':'
   545  0826  3420               	retlw	32	;' '
   546  0827  3400               	retlw	0
   547  0828                     STR_5:
   548  0828  340A               	retlw	10
   549  0829  3400               	retlw	0
   550  082A                     STR_6:
   551  082A  342D               	retlw	45	;'-'
   552  082B  3400               	retlw	0
   553  082C                     STR_10:
   554  082C  342E               	retlw	46	;'.'
   555  082D  3400               	retlw	0
   556  082E                     STR_12:
   557  082E  3456               	retlw	86	;'V'
   558  082F  3400               	retlw	0
   559  0826                     
   560                           	psect	cinit
   561  000F                     start_initialization:	
   562                           ; #config settings
   563                           
   564  000F                     __initialization:
   565                           
   566                           ; Clear objects allocated to COMMON
   567  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   568  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   569                           
   570                           ; Clear objects allocated to BANK0
   571  0011  1283               	bcf	3,5	;RP0=0, select bank0
   572  0012  1303               	bcf	3,6	;RP1=0, select bank0
   573  0013  01E0               	clrf	__pbssBANK0& (0+127)
   574  0014  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   575  0015  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   576  0016                     end_of_initialization:	
   577                           ;End of C runtime variable initialization code
   578                           
   579  0016                     __end_of__initialization:
   580  0016  0183               	clrf	3
   581  0017  120A  118A  2DBE   	ljmp	_main	;jump to C main() function
   582                           
   583                           	psect	bssCOMMON
   584  0079                     __pbssCOMMON:
   585  0079                     _comando:
   586  0079                     	ds	1
   587  007A                     _a:
   588  007A                     	ds	1
   589                           
   590                           	psect	bssBANK0
   591  0060                     __pbssBANK0:
   592  0060                     _Sensor3:
   593  0060                     	ds	1
   594  0061                     _Sensor2:
   595  0061                     	ds	1
   596  0062                     _Sensor1:
   597  0062                     	ds	1
   598                           
   599                           	psect	cstackCOMMON
   600  0070                     __pcstackCOMMON:
   601  0070                     ?_setup:
   602  0070                     ?_Lcd_Init:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_EUSART_conf:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_Lcd_Clear:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_spiWrite:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_spiRead:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Lcd_Write_String:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_SendString:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Receive:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??_Receive:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_Lcd_Write_Char:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_SendChar:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_main:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_oli:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_oli:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_Lcd_Port:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_Lcd_Cmd:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_spiReceiveWait:	
   651                           ; 1 bytes @ 0x0
   652                           
   653                           
   654                           ; 1 bytes @ 0x0
   655  0070                     	ds	3
   656  0073                     ??_EUSART_conf:
   657  0073                     ??_spiWrite:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_spiRead:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ?_spiInit:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_SendChar:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??_Lcd_Port:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ??_spiReceiveWait:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ?__Umul8_16:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ?___wmul:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     ?___lwdiv:	
   682                           ; 2 bytes @ 0x3
   683                           
   684  0073                     ?___xxtofl:	
   685                           ; 2 bytes @ 0x3
   686                           
   687  0073                     Lcd_Port@a:	
   688                           ; 4 bytes @ 0x3
   689                           
   690  0073                     SendChar@X:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     spiInit@sDataSample:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     spiWrite@dat:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     __Umul8_16@multiplicand:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ___wmul@multiplier:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ___lwdiv@divisor:	
   706                           ; 2 bytes @ 0x3
   707                           
   708  0073                     ___xxtofl@val:	
   709                           ; 2 bytes @ 0x3
   710                           
   711                           
   712                           ; 4 bytes @ 0x3
   713  0073                     	ds	1
   714  0074                     ??_SendString:
   715  0074                     ??_Lcd_Write_Char:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     ??_Lcd_Cmd:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     spiInit@sClockIdle:	
   722                           ; 1 bytes @ 0x4
   723                           
   724                           
   725                           ; 1 bytes @ 0x4
   726  0074                     	ds	1
   727  0075                     ??__Umul8_16:
   728  0075                     Lcd_Write_Char@a:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     SendString@X:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     spiInit@sTransmitEdge:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     ___wmul@multiplicand:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     ___lwdiv@dividend:	
   741                           ; 2 bytes @ 0x5
   742                           
   743                           
   744                           ; 2 bytes @ 0x5
   745  0075                     	ds	1
   746  0076                     ??_Lcd_Write_String:
   747  0076                     ??_spiInit:	
   748                           ; 1 bytes @ 0x6
   749                           
   750  0076                     Lcd_Cmd@a:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0076                     spiInit@sType:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     Lcd_Write_String@i:	
   757                           ; 1 bytes @ 0x6
   758                           
   759                           
   760                           ; 2 bytes @ 0x6
   761  0076                     	ds	1
   762  0077                     ??_setup:
   763  0077                     ??_Lcd_Init:	
   764                           ; 1 bytes @ 0x7
   765                           
   766  0077                     ??_Lcd_Clear:	
   767                           ; 1 bytes @ 0x7
   768                           
   769  0077                     ?_Lcd_Set_Cursor:	
   770                           ; 1 bytes @ 0x7
   771                           
   772  0077                     ??___wmul:	
   773                           ; 1 bytes @ 0x7
   774                           
   775  0077                     ??___lwdiv:	
   776                           ; 1 bytes @ 0x7
   777                           
   778  0077                     Lcd_Set_Cursor@b:	
   779                           ; 1 bytes @ 0x7
   780                           
   781  0077                     ___fltol@sign1:	
   782                           ; 1 bytes @ 0x7
   783                           
   784  0077                     ___wmul@product:	
   785                           ; 1 bytes @ 0x7
   786                           
   787                           
   788                           ; 2 bytes @ 0x7
   789  0077                     	ds	1
   790  0078                     ??_Lcd_Set_Cursor:
   791  0078                     Lcd_Set_Cursor@a:	
   792                           ; 1 bytes @ 0x8
   793                           
   794  0078                     Lcd_Write_String@a:	
   795                           ; 1 bytes @ 0x8
   796                           
   797  0078                     ___fltol@exp1:	
   798                           ; 1 bytes @ 0x8
   799                           
   800                           
   801                           ; 1 bytes @ 0x8
   802  0078                     	ds	1
   803                           
   804                           	psect	cstackBANK0
   805  0020                     __pcstackBANK0:
   806  0020                     ??___xxtofl:
   807  0020                     ___lwdiv@counter:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0020                     __Umul8_16@product:	
   811                           ; 1 bytes @ 0x0
   812                           
   813                           
   814                           ; 2 bytes @ 0x0
   815  0020                     	ds	1
   816  0021                     ___lwdiv@quotient:
   817                           
   818                           ; 2 bytes @ 0x1
   819  0021                     	ds	1
   820  0022                     __Umul8_16@word_mpld:
   821                           
   822                           ; 2 bytes @ 0x2
   823  0022                     	ds	2
   824  0024                     __Umul8_16@multiplier:
   825  0024                     ___xxtofl@sign:	
   826                           ; 1 bytes @ 0x4
   827                           
   828                           
   829                           ; 1 bytes @ 0x4
   830  0024                     	ds	1
   831  0025                     ___xxtofl@exp:
   832                           
   833                           ; 1 bytes @ 0x5
   834  0025                     	ds	1
   835  0026                     ___xxtofl@arg:
   836                           
   837                           ; 4 bytes @ 0x6
   838  0026                     	ds	4
   839  002A                     ?___flmul:
   840  002A                     ___flmul@b:	
   841                           ; 4 bytes @ 0xA
   842                           
   843                           
   844                           ; 4 bytes @ 0xA
   845  002A                     	ds	4
   846  002E                     ___flmul@a:
   847                           
   848                           ; 4 bytes @ 0xE
   849  002E                     	ds	4
   850  0032                     ??___flmul:
   851                           
   852                           ; 1 bytes @ 0x12
   853  0032                     	ds	5
   854  0037                     ___flmul@sign:
   855                           
   856                           ; 1 bytes @ 0x17
   857  0037                     	ds	1
   858  0038                     ___flmul@grs:
   859                           
   860                           ; 4 bytes @ 0x18
   861  0038                     	ds	4
   862  003C                     ___flmul@aexp:
   863                           
   864                           ; 1 bytes @ 0x1C
   865  003C                     	ds	1
   866  003D                     ___flmul@bexp:
   867                           
   868                           ; 1 bytes @ 0x1D
   869  003D                     	ds	1
   870  003E                     ___flmul@prod:
   871                           
   872                           ; 4 bytes @ 0x1E
   873  003E                     	ds	4
   874  0042                     ___flmul@temp:
   875                           
   876                           ; 2 bytes @ 0x22
   877  0042                     	ds	2
   878  0044                     ?___fltol:
   879  0044                     ___fltol@f1:	
   880                           ; 4 bytes @ 0x24
   881                           
   882                           
   883                           ; 4 bytes @ 0x24
   884  0044                     	ds	4
   885  0048                     ??___fltol:
   886                           
   887                           ; 1 bytes @ 0x28
   888  0048                     	ds	5
   889  004D                     ?_WriteNumber:
   890  004D                     WriteNumber@columna:	
   891                           ; 1 bytes @ 0x2D
   892                           
   893                           
   894                           ; 1 bytes @ 0x2D
   895  004D                     	ds	1
   896  004E                     WriteNumber@valor:
   897                           
   898                           ; 1 bytes @ 0x2E
   899  004E                     	ds	1
   900  004F                     WriteNumber@formato:
   901                           
   902                           ; 1 bytes @ 0x2F
   903  004F                     	ds	1
   904  0050                     ??_WriteNumber:
   905                           
   906                           ; 1 bytes @ 0x30
   907  0050                     	ds	4
   908  0054                     WriteNumber@cor:
   909                           
   910                           ; 1 bytes @ 0x34
   911  0054                     	ds	1
   912  0055                     WriteNumber@cent:
   913                           
   914                           ; 1 bytes @ 0x35
   915  0055                     	ds	1
   916  0056                     WriteNumber@unidad:
   917                           
   918                           ; 1 bytes @ 0x36
   919  0056                     	ds	1
   920  0057                     WriteNumber@dec:
   921                           
   922                           ; 1 bytes @ 0x37
   923  0057                     	ds	1
   924  0058                     WriteNumber@temp:
   925                           
   926                           ; 2 bytes @ 0x38
   927  0058                     	ds	2
   928  005A                     WriteNumber@fila:
   929                           
   930                           ; 1 bytes @ 0x3A
   931  005A                     	ds	1
   932  005B                     ??_main:
   933                           
   934                           ; 1 bytes @ 0x3B
   935  005B                     	ds	3
   936  005E                     main@i:
   937                           
   938                           ; 2 bytes @ 0x3E
   939  005E                     	ds	2
   940                           
   941                           	psect	maintext
   942  05BE                     __pmaintext:	
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 55 in file "Master.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  i               2   62[BANK0 ] int 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : B00/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       2       0       0       0
   964 ;;      Temps:          0       3       0       0       0
   965 ;;      Totals:         0       5       0       0       0
   966 ;;Total ram usage:        5 bytes
   967 ;; Hardware stack levels required when called:    6
   968 ;; This function calls:
   969 ;;		_EUSART_conf
   970 ;;		_Lcd_Clear
   971 ;;		_Lcd_Init
   972 ;;		_Lcd_Set_Cursor
   973 ;;		_Lcd_Write_String
   974 ;;		_SendString
   975 ;;		_WriteNumber
   976 ;;		_setup
   977 ;;		_spiRead
   978 ;;		_spiWrite
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _main
   986  05BE                     _main:
   987  05BE                     l2092:	
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   990                           
   991                           
   992                           ;Master.c: 56:         WriteNumber(2, 8, Sensor2, 0);
   993  05BE  120A  158A  26AC  120A  118A  	fcall	_setup
   994                           
   995                           ;Master.c: 57:         SendString(" S3: ");
   996  05C3  120A  118A  2791  120A  118A  	fcall	_Lcd_Init
   997                           
   998                           ;Master.c: 58:         WriteNumber(2, 13, Sensor3, 3);
   999  05C8  120A  158A  2636  120A  118A  	fcall	_EUSART_conf
  1000                           
  1001                           ;Master.c: 59: 
  1002  05CD  120A  158A  25EB  120A  118A  	fcall	_Lcd_Clear
  1003  05D2                     l2094:
  1004                           
  1005                           ;Master.c: 62:             SendString("\n");
  1006  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1007  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1008  05D4  1585               	bsf	5,3	;volatile
  1009  05D5                     l2096:
  1010                           
  1011                           ;Master.c: 63:         }
  1012  05D5  1085               	bcf	5,1	;volatile
  1013  05D6                     l2098:
  1014                           
  1015                           ;Master.c: 65: 
  1016  05D6  3003               	movlw	3
  1017  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1018  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1019  05D9  00DC               	movwf	??_main+1
  1020  05DA  3097               	movlw	151
  1021  05DB  00DB               	movwf	??_main
  1022  05DC                     u2507:
  1023  05DC  0BDB               	decfsz	??_main,f
  1024  05DD  2DDC               	goto	u2507
  1025  05DE  0BDC               	decfsz	??_main+1,f
  1026  05DF  2DDC               	goto	u2507
  1027  05E0                     l2100:
  1028                           
  1029                           ;Master.c: 66:     }
  1030  05E0  3001               	movlw	1
  1031  05E1  120A  158A  25CB  120A  118A  	fcall	_spiWrite
  1032  05E6                     l2102:
  1033                           
  1034                           ;Master.c: 67: }
  1035  05E6  120A  158A  25D8  120A  118A  	fcall	_spiRead
  1036  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1037  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1038  05ED  00DB               	movwf	??_main
  1039  05EE  085B               	movf	??_main,w
  1040  05EF  00E2               	movwf	_Sensor1
  1041  05F0                     l2104:
  1042                           
  1043                           ;Master.c: 68: 
  1044  05F0  3003               	movlw	3
  1045  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1046  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1047  05F3  00DC               	movwf	??_main+1
  1048  05F4  3097               	movlw	151
  1049  05F5  00DB               	movwf	??_main
  1050  05F6                     u2517:
  1051  05F6  0BDB               	decfsz	??_main,f
  1052  05F7  2DF6               	goto	u2517
  1053  05F8  0BDC               	decfsz	??_main+1,f
  1054  05F9  2DF6               	goto	u2517
  1055  05FA                     l2106:
  1056                           
  1057                           ;Master.c: 70: 
  1058  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1059  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1060  05FC  1485               	bsf	5,1	;volatile
  1061  05FD                     l2108:
  1062                           
  1063                           ;Master.c: 71: 
  1064  05FD  1105               	bcf	5,2	;volatile
  1065  05FE                     l2110:
  1066                           
  1067                           ;Master.c: 73: 
  1068  05FE  3003               	movlw	3
  1069  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0601  00DC               	movwf	??_main+1
  1072  0602  3097               	movlw	151
  1073  0603  00DB               	movwf	??_main
  1074  0604                     u2527:
  1075  0604  0BDB               	decfsz	??_main,f
  1076  0605  2E04               	goto	u2527
  1077  0606  0BDC               	decfsz	??_main+1,f
  1078  0607  2E04               	goto	u2527
  1079  0608                     l2112:
  1080                           
  1081                           ;Master.c: 74: void setup(void) {
  1082  0608  3002               	movlw	2
  1083  0609  120A  158A  25CB  120A  118A  	fcall	_spiWrite
  1084  060E                     l2114:
  1085                           
  1086                           ;Master.c: 75: 
  1087  060E  120A  158A  25D8  120A  118A  	fcall	_spiRead
  1088  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0615  00DB               	movwf	??_main
  1091  0616  085B               	movf	??_main,w
  1092  0617  00E1               	movwf	_Sensor2
  1093  0618                     l2116:
  1094                           
  1095                           ;Master.c: 76:     TRISC = 0;
  1096  0618  3003               	movlw	3
  1097  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1098  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1099  061B  00DC               	movwf	??_main+1
  1100  061C  3097               	movlw	151
  1101  061D  00DB               	movwf	??_main
  1102  061E                     u2537:
  1103  061E  0BDB               	decfsz	??_main,f
  1104  061F  2E1E               	goto	u2537
  1105  0620  0BDC               	decfsz	??_main+1,f
  1106  0621  2E1E               	goto	u2537
  1107  0622                     l2118:
  1108                           
  1109                           ;Master.c: 78:     TRISCbits.TRISC7 = 1;
  1110  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0624  1505               	bsf	5,2	;volatile
  1113  0625                     l2120:
  1114                           
  1115                           ;Master.c: 79:     TRISD = 0;
  1116  0625  1185               	bcf	5,3	;volatile
  1117  0626                     l2122:
  1118                           
  1119                           ;Master.c: 81:     ANSELH = 0;
  1120  0626  3003               	movlw	3
  1121  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0629  00DC               	movwf	??_main+1
  1124  062A  3097               	movlw	151
  1125  062B  00DB               	movwf	??_main
  1126  062C                     u2547:
  1127  062C  0BDB               	decfsz	??_main,f
  1128  062D  2E2C               	goto	u2547
  1129  062E  0BDC               	decfsz	??_main+1,f
  1130  062F  2E2C               	goto	u2547
  1131  0630                     l2124:
  1132                           
  1133                           ;Master.c: 82:     TRISA = 0;
  1134  0630  3002               	movlw	2
  1135  0631  120A  158A  25CB  120A  118A  	fcall	_spiWrite
  1136  0636                     l2126:
  1137                           
  1138                           ;Master.c: 83:     TRISB = 0;
  1139  0636  120A  158A  25D8  120A  118A  	fcall	_spiRead
  1140  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1141  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1142  063D  00DB               	movwf	??_main
  1143  063E  085B               	movf	??_main,w
  1144  063F  00E0               	movwf	_Sensor3
  1145  0640                     l2128:
  1146                           
  1147                           ;Master.c: 84:     Sensor1 = 0;
  1148  0640  3003               	movlw	3
  1149  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0643  00DC               	movwf	??_main+1
  1152  0644  3097               	movlw	151
  1153  0645  00DB               	movwf	??_main
  1154  0646                     u2557:
  1155  0646  0BDB               	decfsz	??_main,f
  1156  0647  2E46               	goto	u2557
  1157  0648  0BDC               	decfsz	??_main+1,f
  1158  0649  2E46               	goto	u2557
  1159  064A                     l2130:
  1160                           
  1161                           ;Master.c: 85:     Sensor2 = 0;
  1162  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1163  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1164  064C  0860               	movf	_Sensor3,w
  1165  064D  0086               	movwf	6	;volatile
  1166  064E                     l2132:
  1167                           
  1168                           ;Master.c: 86:     Sensor3 = 0;
  1169  064E  01F7               	clrf	Lcd_Set_Cursor@b
  1170  064F  0AF7               	incf	Lcd_Set_Cursor@b,f
  1171  0650  3001               	movlw	1
  1172  0651  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  1173  0656                     l2134:
  1174                           
  1175                           ;Master.c: 87: 
  1176  0656  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1177  0657  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  1178  065C                     l2136:
  1179                           
  1180                           ;Master.c: 89:     INTCONbits.GIE = 1;
  1181  065C  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1182  065D  120A  158A  268D  120A  118A  	fcall	_SendString
  1183  0662                     l2138:
  1184                           
  1185                           ;Master.c: 90:     INTCONbits.PEIE = 1;
  1186  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0664  01CD               	clrf	WriteNumber@columna
  1189  0665  0ACD               	incf	WriteNumber@columna,f
  1190  0666  0862               	movf	_Sensor1,w
  1191  0667  00DB               	movwf	??_main
  1192  0668  085B               	movf	??_main,w
  1193  0669  00CE               	movwf	WriteNumber@valor
  1194  066A  01CF               	clrf	WriteNumber@formato
  1195  066B  0ACF               	incf	WriteNumber@formato,f
  1196  066C  3002               	movlw	2
  1197  066D  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1198  0672                     l2140:
  1199                           
  1200                           ;Master.c: 91: 
  1201  0672  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1202  0673  120A  158A  268D  120A  118A  	fcall	_SendString
  1203  0678                     l2142:
  1204                           
  1205                           ;Master.c: 92: 
  1206  0678  3008               	movlw	8
  1207  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1208  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1209  067B  00DB               	movwf	??_main
  1210  067C  085B               	movf	??_main,w
  1211  067D  00CD               	movwf	WriteNumber@columna
  1212  067E  0861               	movf	_Sensor2,w
  1213  067F  00DC               	movwf	??_main+1
  1214  0680  085C               	movf	??_main+1,w
  1215  0681  00CE               	movwf	WriteNumber@valor
  1216  0682  01CF               	clrf	WriteNumber@formato
  1217  0683  3002               	movlw	2
  1218  0684  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1219  0689                     l2144:
  1220                           
  1221                           ;Master.c: 93:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  1222  0689  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1223  068A  120A  158A  268D  120A  118A  	fcall	_SendString
  1224  068F                     l2146:
  1225                           
  1226                           ;Master.c: 94: }
  1227  068F  300D               	movlw	13
  1228  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0692  00DB               	movwf	??_main
  1231  0693  085B               	movf	??_main,w
  1232  0694  00CD               	movwf	WriteNumber@columna
  1233  0695  0860               	movf	_Sensor3,w
  1234  0696  00DC               	movwf	??_main+1
  1235  0697  085C               	movf	??_main+1,w
  1236  0698  00CE               	movwf	WriteNumber@valor
  1237  0699  3003               	movlw	3
  1238  069A  00DD               	movwf	??_main+2
  1239  069B  085D               	movf	??_main+2,w
  1240  069C  00CF               	movwf	WriteNumber@formato
  1241  069D  3002               	movlw	2
  1242  069E  120A  118A  237B  120A  118A  	fcall	_WriteNumber
  1243  06A3                     l2148:
  1244                           
  1245                           ;Master.c: 96: 
  1246  06A3  3003               	movlw	3
  1247  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1248  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1249  06A6  00DD               	movwf	??_main+2
  1250  06A7  3008               	movlw	8
  1251  06A8  00DC               	movwf	??_main+1
  1252  06A9  3076               	movlw	118
  1253  06AA  00DB               	movwf	??_main
  1254  06AB                     u2567:
  1255  06AB  0BDB               	decfsz	??_main,f
  1256  06AC  2EAB               	goto	u2567
  1257  06AD  0BDC               	decfsz	??_main+1,f
  1258  06AE  2EAB               	goto	u2567
  1259  06AF  0BDD               	decfsz	??_main+2,f
  1260  06B0  2EAB               	goto	u2567
  1261  06B1  0000               	nop
  1262  06B2                     l2150:
  1263                           
  1264                           ;Master.c: 97: 
  1265  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1266  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1267  06B4  01DE               	clrf	main@i
  1268  06B5  01DF               	clrf	main@i+1
  1269  06B6                     l2156:
  1270                           
  1271                           ;Master.c: 98: 
  1272  06B6  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1273  06B7  120A  158A  268D  120A  118A  	fcall	_SendString
  1274  06BC                     l2158:
  1275                           
  1276                           ;Master.c: 99: 
  1277  06BC  3001               	movlw	1
  1278  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1279  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1280  06BF  07DE               	addwf	main@i,f
  1281  06C0  1803               	skipnc
  1282  06C1  0ADF               	incf	main@i+1,f
  1283  06C2  3000               	movlw	0
  1284  06C3  07DF               	addwf	main@i+1,f
  1285  06C4                     l2160:
  1286  06C4  085F               	movf	main@i+1,w
  1287  06C5  3A80               	xorlw	128
  1288  06C6  00FF               	movwf	btemp+1
  1289  06C7  3080               	movlw	128
  1290  06C8  027F               	subwf	btemp+1,w
  1291  06C9  1D03               	skipz
  1292  06CA  2ECD               	goto	u2495
  1293  06CB  3002               	movlw	2
  1294  06CC  025E               	subwf	main@i,w
  1295  06CD                     u2495:
  1296  06CD  1C03               	skipc
  1297  06CE  2ED0               	goto	u2491
  1298  06CF  2ED1               	goto	u2490
  1299  06D0                     u2491:
  1300  06D0  2EB6               	goto	l2156
  1301  06D1                     u2490:
  1302  06D1  2DD2               	goto	l2094
  1303  06D2  120A  118A  280C   	ljmp	start
  1304  06D5                     __end_of_main:
  1305                           
  1306                           	psect	text1
  1307  0DCB                     __ptext1:	
  1308 ;; *************** function _spiWrite *****************
  1309 ;; Defined at:
  1310 ;;		line 34 in file "SPI.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  dat             1    wreg     unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  dat             1    3[COMMON] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         1       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0
  1327 ;;      Totals:         1       0       0       0       0
  1328 ;;Total ram usage:        1 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    2
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _spiWrite
  1340  0DCB                     _spiWrite:
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _spiWrite: [wreg]
  1344                           ;spiWrite@dat stored from wreg
  1345  0DCB  00F3               	movwf	spiWrite@dat
  1346  0DCC                     l1752:
  1347                           
  1348                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1349  0DCC  0873               	movf	spiWrite@dat,w
  1350  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0DCF  0093               	movwf	19	;volatile
  1353  0DD0                     l208:
  1354  0DD0  0008               	return
  1355  0DD1                     __end_of_spiWrite:
  1356                           
  1357                           	psect	text2
  1358  0DD8                     __ptext2:	
  1359 ;; *************** function _spiRead *****************
  1360 ;; Defined at:
  1361 ;;		line 47 in file "SPI.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      unsigned char 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    3
  1382 ;; This function calls:
  1383 ;;		_spiReceiveWait
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _spiRead
  1391  0DD8                     _spiRead:
  1392  0DD8                     l1754:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1395                           
  1396                           
  1397                           ;SPI.c: 49:     spiReceiveWait();
  1398  0DD8  120A  158A  25D1  120A  158A  	fcall	_spiReceiveWait
  1399  0DDD                     l1756:
  1400                           
  1401                           ;SPI.c: 50:     return(SSPBUF);
  1402  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0DDF  0813               	movf	19,w	;volatile
  1405  0DE0                     l216:
  1406  0DE0  0008               	return
  1407  0DE1                     __end_of_spiRead:
  1408                           
  1409                           	psect	text3
  1410  0DD1                     __ptext3:	
  1411 ;; *************** function _spiReceiveWait *****************
  1412 ;; Defined at:
  1413 ;;		line 29 in file "SPI.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		None
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_spiRead
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _spiReceiveWait
  1443  0DD1                     _spiReceiveWait:
  1444  0DD1                     l1444:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _spiReceiveWait: []
  1447                           
  1448  0DD1                     l202:	
  1449                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1450                           
  1451  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0DD3  1C14               	btfss	20,0	;volatile
  1454  0DD4  2DD6               	goto	u1121
  1455  0DD5  2DD7               	goto	u1120
  1456  0DD6                     u1121:
  1457  0DD6  2DD1               	goto	l202
  1458  0DD7                     u1120:
  1459  0DD7                     l205:
  1460  0DD7  0008               	return
  1461  0DD8                     __end_of_spiReceiveWait:
  1462                           
  1463                           	psect	text4
  1464  0EAC                     __ptext4:	
  1465 ;; *************** function _setup *****************
  1466 ;; Defined at:
  1467 ;;		line 110 in file "Master.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    3
  1488 ;; This function calls:
  1489 ;;		_spiInit
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _setup
  1497  0EAC                     _setup:
  1498  0EAC                     l1706:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1501                           
  1502  0EAC  1683               	bsf	3,5	;RP0=1, select bank1
  1503  0EAD  1303               	bcf	3,6	;RP1=0, select bank1
  1504  0EAE  0187               	clrf	7	;volatile
  1505  0EAF                     l1708:
  1506  0EAF  1607               	bsf	7,4	;volatile
  1507  0EB0                     l1710:
  1508  0EB0  1787               	bsf	7,7	;volatile
  1509  0EB1  0188               	clrf	8	;volatile
  1510  0EB2  1683               	bsf	3,5	;RP0=1, select bank3
  1511  0EB3  1703               	bsf	3,6	;RP1=1, select bank3
  1512  0EB4  0188               	clrf	8	;volatile
  1513  0EB5  0189               	clrf	9	;volatile
  1514  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0EB8  0185               	clrf	5	;volatile
  1517  0EB9  0186               	clrf	6	;volatile
  1518  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0EBC  01E2               	clrf	_Sensor1
  1521  0EBD  01E1               	clrf	_Sensor2
  1522  0EBE  01E0               	clrf	_Sensor3
  1523  0EBF                     l1712:
  1524  0EBF  178B               	bsf	11,7	;volatile
  1525  0EC0                     l1714:
  1526  0EC0  170B               	bsf	11,6	;volatile
  1527  0EC1                     l1716:
  1528  0EC1  01F3               	clrf	spiInit@sDataSample
  1529  0EC2  01F4               	clrf	spiInit@sClockIdle
  1530  0EC3  01F5               	clrf	spiInit@sTransmitEdge
  1531  0EC4  3020               	movlw	32
  1532  0EC5  120A  118A  27E7  120A  158A  	fcall	_spiInit
  1533  0ECA                     l75:
  1534  0ECA  0008               	return
  1535  0ECB                     __end_of_setup:
  1536                           
  1537                           	psect	text5
  1538  07E7                     __ptext5:	
  1539 ;; *************** function _spiInit *****************
  1540 ;; Defined at:
  1541 ;;		line 12 in file "SPI.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  sType           1    wreg     enum E1264
  1544 ;;  sDataSample     1    3[COMMON] enum E1272
  1545 ;;  sClockIdle      1    4[COMMON] enum E1276
  1546 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  sType           1    6[COMMON] enum E1264
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         3       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         4       0       0       0       0
  1562 ;;Total ram usage:        4 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_setup
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _spiInit
  1574  07E7                     _spiInit:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1578                           ;spiInit@sType stored from wreg
  1579  07E7  00F6               	movwf	spiInit@sType
  1580  07E8                     l1434:
  1581                           
  1582                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1583  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  1584  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  1585  07EA  1287               	bcf	7,5	;volatile
  1586                           
  1587                           ;SPI.c: 15:     if(sType & 0b00000100)
  1588  07EB  1D76               	btfss	spiInit@sType,2
  1589  07EC  2FEE               	goto	u1111
  1590  07ED  2FEF               	goto	u1110
  1591  07EE                     u1111:
  1592  07EE  2FF3               	goto	l1440
  1593  07EF                     u1110:
  1594  07EF                     l1436:
  1595                           
  1596                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1597  07EF  0875               	movf	spiInit@sTransmitEdge,w
  1598  07F0  0094               	movwf	20	;volatile
  1599  07F1                     l1438:
  1600                           
  1601                           ;SPI.c: 18:         TRISC3 = 1;
  1602  07F1  1587               	bsf	7,3	;volatile
  1603                           
  1604                           ;SPI.c: 19:     }
  1605  07F2  2FF7               	goto	l198
  1606  07F3                     l1440:
  1607                           
  1608                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1609  07F3  0873               	movf	spiInit@sDataSample,w
  1610  07F4  0475               	iorwf	spiInit@sTransmitEdge,w
  1611  07F5  0094               	movwf	20	;volatile
  1612  07F6                     l1442:
  1613                           
  1614                           ;SPI.c: 23:         TRISC3 = 0;
  1615  07F6  1187               	bcf	7,3	;volatile
  1616  07F7                     l198:	
  1617                           ;SPI.c: 24:     }
  1618                           
  1619                           
  1620                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1621  07F7  0876               	movf	spiInit@sType,w
  1622  07F8  0474               	iorwf	spiInit@sClockIdle,w
  1623  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  1624  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  1625  07FB  0094               	movwf	20	;volatile
  1626  07FC                     l199:
  1627  07FC  0008               	return
  1628  07FD                     __end_of_spiInit:
  1629                           
  1630                           	psect	text6
  1631  037B                     __ptext6:	
  1632 ;; *************** function _WriteNumber *****************
  1633 ;; Defined at:
  1634 ;;		line 147 in file "Master.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  fila            1    wreg     unsigned char 
  1637 ;;  columna         1   45[BANK0 ] unsigned char 
  1638 ;;  valor           1   46[BANK0 ] unsigned char 
  1639 ;;  formato         1   47[BANK0 ] unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  fila            1   58[BANK0 ] unsigned char 
  1642 ;;  temp            2   56[BANK0 ] unsigned int 
  1643 ;;  dec             1   55[BANK0 ] unsigned char 
  1644 ;;  unidad          1   54[BANK0 ] unsigned char 
  1645 ;;  cent            1   53[BANK0 ] unsigned char 
  1646 ;;  cor             1   52[BANK0 ] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       3       0       0       0
  1657 ;;      Locals:         0       7       0       0       0
  1658 ;;      Temps:          0       4       0       0       0
  1659 ;;      Totals:         0      14       0       0       0
  1660 ;;Total ram usage:       14 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    5
  1663 ;; This function calls:
  1664 ;;		_Lcd_Set_Cursor
  1665 ;;		_Lcd_Write_Char
  1666 ;;		_Lcd_Write_String
  1667 ;;		_SendChar
  1668 ;;		_SendString
  1669 ;;		___flmul
  1670 ;;		___fltol
  1671 ;;		___lwdiv
  1672 ;;		___wmul
  1673 ;;		___xxtofl
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _WriteNumber
  1681  037B                     _WriteNumber:
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _WriteNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1685                           ;WriteNumber@fila stored from wreg
  1686  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1687  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1688  037D  00DA               	movwf	WriteNumber@fila
  1689  037E                     l2016:
  1690                           
  1691                           ;Master.c: 156:     uint16_t temp;;Master.c: 157:     uint8_t unidad, dec, cent;;Master.
      +                          c: 158:     uint8_t cor;;Master.c: 160:     if (formato == 3) {
  1692  037E  3003               	movlw	3
  1693  037F  064F               	xorwf	WriteNumber@formato,w
  1694  0380  1D03               	btfss	3,2
  1695  0381  2B83               	goto	u2331
  1696  0382  2B84               	goto	u2330
  1697  0383                     u2331:
  1698  0383  2C14               	goto	l2030
  1699  0384                     u2330:
  1700  0384                     l2018:
  1701                           
  1702                           ;Master.c: 161:         cor = 1;
  1703  0384  01D4               	clrf	WriteNumber@cor
  1704  0385  0AD4               	incf	WriteNumber@cor,f
  1705  0386                     l2020:
  1706                           
  1707                           ;Master.c: 162:         if (valor > 68) {
  1708  0386  3045               	movlw	69
  1709  0387  024E               	subwf	WriteNumber@valor,w
  1710  0388  1C03               	skipc
  1711  0389  2B8B               	goto	u2341
  1712  038A  2B8C               	goto	u2340
  1713  038B                     u2341:
  1714  038B  2BCB               	goto	l2024
  1715  038C                     u2340:
  1716  038C                     l2022:
  1717                           
  1718                           ;Master.c: 168:             temp = 0.803 * (valor - 68);
  1719  038C  084E               	movf	WriteNumber@valor,w
  1720  038D  3EBC               	addlw	188
  1721  038E  00F3               	movwf	___xxtofl@val
  1722  038F  30FF               	movlw	255
  1723  0390  1803               	skipnc
  1724  0391  3000               	movlw	0
  1725  0392  00F4               	movwf	___xxtofl@val+1
  1726  0393  01F5               	clrf	___xxtofl@val+2
  1727  0394  1BF4               	btfsc	___xxtofl@val+1,7
  1728  0395  03F5               	decf	___xxtofl@val+2,f
  1729  0396  0875               	movf	___xxtofl@val+2,w
  1730  0397  00F6               	movwf	___xxtofl@val+3
  1731  0398  3001               	movlw	1
  1732  0399  120A  118A  26D5  120A  118A  	fcall	___xxtofl
  1733  039E  0876               	movf	?___xxtofl+3,w
  1734  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1735  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1736  03A1  00B1               	movwf	___flmul@a+3
  1737  03A2  0875               	movf	?___xxtofl+2,w
  1738  03A3  00B0               	movwf	___flmul@a+2
  1739  03A4  0874               	movf	?___xxtofl+1,w
  1740  03A5  00AF               	movwf	___flmul@a+1
  1741  03A6  0873               	movf	?___xxtofl,w
  1742  03A7  00AE               	movwf	___flmul@a
  1743  03A8  303F               	movlw	63
  1744  03A9  00AD               	movwf	___flmul@b+3
  1745  03AA  304D               	movlw	77
  1746  03AB  00AC               	movwf	___flmul@b+2
  1747  03AC  3091               	movlw	145
  1748  03AD  00AB               	movwf	___flmul@b+1
  1749  03AE  3068               	movlw	104
  1750  03AF  00AA               	movwf	___flmul@b
  1751  03B0  120A  118A  201A  120A  118A  	fcall	___flmul
  1752  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1753  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1754  03B7  082D               	movf	?___flmul+3,w
  1755  03B8  00C7               	movwf	___fltol@f1+3
  1756  03B9  082C               	movf	?___flmul+2,w
  1757  03BA  00C6               	movwf	___fltol@f1+2
  1758  03BB  082B               	movf	?___flmul+1,w
  1759  03BC  00C5               	movwf	___fltol@f1+1
  1760  03BD  082A               	movf	?___flmul,w
  1761  03BE  00C4               	movwf	___fltol@f1
  1762  03BF  120A  158A  2784  120A  118A  	fcall	___fltol
  1763  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1764  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1765  03C6  0845               	movf	?___fltol+1,w
  1766  03C7  00D9               	movwf	WriteNumber@temp+1
  1767  03C8  0844               	movf	?___fltol,w
  1768  03C9  00D8               	movwf	WriteNumber@temp
  1769                           
  1770                           ;Master.c: 169:         } else if (valor < 68) {
  1771  03CA  2C62               	goto	l2040
  1772  03CB                     l2024:
  1773  03CB  3044               	movlw	68
  1774  03CC  024E               	subwf	WriteNumber@valor,w
  1775  03CD  1803               	skipnc
  1776  03CE  2BD0               	goto	u2351
  1777  03CF  2BD1               	goto	u2350
  1778  03D0                     u2351:
  1779  03D0  2C11               	goto	l2028
  1780  03D1                     u2350:
  1781  03D1                     l2026:
  1782                           
  1783                           ;Master.c: 170:             temp = 0.803 * (69 - valor);
  1784  03D1  3045               	movlw	69
  1785  03D2  00D0               	movwf	??_WriteNumber
  1786  03D3  084E               	movf	WriteNumber@valor,w
  1787  03D4  0250               	subwf	??_WriteNumber,w
  1788  03D5  00F3               	movwf	___xxtofl@val
  1789  03D6  01F4               	clrf	___xxtofl@val+1
  1790  03D7  1C03               	skipc
  1791  03D8  03F4               	decf	___xxtofl@val+1,f
  1792  03D9  01F5               	clrf	___xxtofl@val+2
  1793  03DA  1BF4               	btfsc	___xxtofl@val+1,7
  1794  03DB  03F5               	decf	___xxtofl@val+2,f
  1795  03DC  0875               	movf	___xxtofl@val+2,w
  1796  03DD  00F6               	movwf	___xxtofl@val+3
  1797  03DE  3001               	movlw	1
  1798  03DF  120A  118A  26D5  120A  118A  	fcall	___xxtofl
  1799  03E4  0876               	movf	?___xxtofl+3,w
  1800  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1801  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1802  03E7  00B1               	movwf	___flmul@a+3
  1803  03E8  0875               	movf	?___xxtofl+2,w
  1804  03E9  00B0               	movwf	___flmul@a+2
  1805  03EA  0874               	movf	?___xxtofl+1,w
  1806  03EB  00AF               	movwf	___flmul@a+1
  1807  03EC  0873               	movf	?___xxtofl,w
  1808  03ED  00AE               	movwf	___flmul@a
  1809  03EE  303F               	movlw	63
  1810  03EF  00AD               	movwf	___flmul@b+3
  1811  03F0  304D               	movlw	77
  1812  03F1  00AC               	movwf	___flmul@b+2
  1813  03F2  3091               	movlw	145
  1814  03F3  00AB               	movwf	___flmul@b+1
  1815  03F4  3068               	movlw	104
  1816  03F5  00AA               	movwf	___flmul@b
  1817  03F6  120A  118A  201A  120A  118A  	fcall	___flmul
  1818  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1819  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1820  03FD  082D               	movf	?___flmul+3,w
  1821  03FE  00C7               	movwf	___fltol@f1+3
  1822  03FF  082C               	movf	?___flmul+2,w
  1823  0400  00C6               	movwf	___fltol@f1+2
  1824  0401  082B               	movf	?___flmul+1,w
  1825  0402  00C5               	movwf	___fltol@f1+1
  1826  0403  082A               	movf	?___flmul,w
  1827  0404  00C4               	movwf	___fltol@f1
  1828  0405  120A  158A  2784  120A  118A  	fcall	___fltol
  1829  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1830  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1831  040C  0845               	movf	?___fltol+1,w
  1832  040D  00D9               	movwf	WriteNumber@temp+1
  1833  040E  0844               	movf	?___fltol,w
  1834  040F  00D8               	movwf	WriteNumber@temp
  1835                           
  1836                           ;Master.c: 171:         } else {
  1837  0410  2C62               	goto	l2040
  1838  0411                     l2028:
  1839                           
  1840                           ;Master.c: 172:             temp = 0;
  1841  0411  01D8               	clrf	WriteNumber@temp
  1842  0412  01D9               	clrf	WriteNumber@temp+1
  1843  0413  2C62               	goto	l2040
  1844  0414                     l2030:
  1845  0414  034F               	decf	WriteNumber@formato,w
  1846  0415  1D03               	btfss	3,2
  1847  0416  2C18               	goto	u2361
  1848  0417  2C19               	goto	u2360
  1849  0418                     u2361:
  1850  0418  2C5A               	goto	l2036
  1851  0419                     u2360:
  1852  0419                     l2032:
  1853                           
  1854                           ;Master.c: 176:         cor = 0;
  1855  0419  01D4               	clrf	WriteNumber@cor
  1856  041A                     l2034:
  1857                           
  1858                           ;Master.c: 177:         temp = valor * 1.961;
  1859  041A  084E               	movf	WriteNumber@valor,w
  1860  041B  00D0               	movwf	??_WriteNumber
  1861  041C  01D1               	clrf	??_WriteNumber+1
  1862  041D  01D2               	clrf	??_WriteNumber+2
  1863  041E  01D3               	clrf	??_WriteNumber+3
  1864  041F  0853               	movf	??_WriteNumber+3,w
  1865  0420  00F6               	movwf	___xxtofl@val+3
  1866  0421  0852               	movf	??_WriteNumber+2,w
  1867  0422  00F5               	movwf	___xxtofl@val+2
  1868  0423  0851               	movf	??_WriteNumber+1,w
  1869  0424  00F4               	movwf	___xxtofl@val+1
  1870  0425  0850               	movf	??_WriteNumber,w
  1871  0426  00F3               	movwf	___xxtofl@val
  1872  0427  3001               	movlw	1
  1873  0428  120A  118A  26D5  120A  118A  	fcall	___xxtofl
  1874  042D  0876               	movf	?___xxtofl+3,w
  1875  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1876  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0430  00B1               	movwf	___flmul@a+3
  1878  0431  0875               	movf	?___xxtofl+2,w
  1879  0432  00B0               	movwf	___flmul@a+2
  1880  0433  0874               	movf	?___xxtofl+1,w
  1881  0434  00AF               	movwf	___flmul@a+1
  1882  0435  0873               	movf	?___xxtofl,w
  1883  0436  00AE               	movwf	___flmul@a
  1884  0437  303F               	movlw	63
  1885  0438  00AD               	movwf	___flmul@b+3
  1886  0439  30FB               	movlw	251
  1887  043A  00AC               	movwf	___flmul@b+2
  1888  043B  3002               	movlw	2
  1889  043C  00AB               	movwf	___flmul@b+1
  1890  043D  300C               	movlw	12
  1891  043E  00AA               	movwf	___flmul@b
  1892  043F  120A  118A  201A  120A  118A  	fcall	___flmul
  1893  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0446  082D               	movf	?___flmul+3,w
  1896  0447  00C7               	movwf	___fltol@f1+3
  1897  0448  082C               	movf	?___flmul+2,w
  1898  0449  00C6               	movwf	___fltol@f1+2
  1899  044A  082B               	movf	?___flmul+1,w
  1900  044B  00C5               	movwf	___fltol@f1+1
  1901  044C  082A               	movf	?___flmul,w
  1902  044D  00C4               	movwf	___fltol@f1
  1903  044E  120A  158A  2784  120A  118A  	fcall	___fltol
  1904  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0455  0845               	movf	?___fltol+1,w
  1907  0456  00D9               	movwf	WriteNumber@temp+1
  1908  0457  0844               	movf	?___fltol,w
  1909  0458  00D8               	movwf	WriteNumber@temp
  1910                           
  1911                           ;Master.c: 179:     } else {
  1912  0459  2C62               	goto	l2040
  1913  045A                     l2036:
  1914                           
  1915                           ;Master.c: 180:         cor = 0;
  1916  045A  01D4               	clrf	WriteNumber@cor
  1917  045B                     l2038:
  1918                           
  1919                           ;Master.c: 181:         temp = valor;
  1920  045B  084E               	movf	WriteNumber@valor,w
  1921  045C  00D0               	movwf	??_WriteNumber
  1922  045D  01D1               	clrf	??_WriteNumber+1
  1923  045E  0850               	movf	??_WriteNumber,w
  1924  045F  00D8               	movwf	WriteNumber@temp
  1925  0460  0851               	movf	??_WriteNumber+1,w
  1926  0461  00D9               	movwf	WriteNumber@temp+1
  1927  0462                     l2040:
  1928                           
  1929                           ;Master.c: 185:     unidad = temp / 100;
  1930  0462  3064               	movlw	100
  1931  0463  00F3               	movwf	___lwdiv@divisor
  1932  0464  3000               	movlw	0
  1933  0465  00F4               	movwf	___lwdiv@divisor+1
  1934  0466  0859               	movf	WriteNumber@temp+1,w
  1935  0467  00F6               	movwf	___lwdiv@dividend+1
  1936  0468  0858               	movf	WriteNumber@temp,w
  1937  0469  00F5               	movwf	___lwdiv@dividend
  1938  046A  120A  158A  273E  120A  118A  	fcall	___lwdiv
  1939  046F  0873               	movf	?___lwdiv,w
  1940  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0472  00D0               	movwf	??_WriteNumber
  1943  0473  0850               	movf	??_WriteNumber,w
  1944  0474  00D6               	movwf	WriteNumber@unidad
  1945  0475                     l2042:
  1946                           
  1947                           ;Master.c: 186:     temp = temp - unidad * 100;
  1948  0475  0856               	movf	WriteNumber@unidad,w
  1949  0476  00D0               	movwf	??_WriteNumber
  1950  0477  01D1               	clrf	??_WriteNumber+1
  1951  0478  0850               	movf	??_WriteNumber,w
  1952  0479  00F3               	movwf	___wmul@multiplier
  1953  047A  0851               	movf	??_WriteNumber+1,w
  1954  047B  00F4               	movwf	___wmul@multiplier+1
  1955  047C  309C               	movlw	156
  1956  047D  00F5               	movwf	___wmul@multiplicand
  1957  047E  30FF               	movlw	255
  1958  047F  00F6               	movwf	___wmul@multiplicand+1
  1959  0480  120A  158A  26F0  120A  118A  	fcall	___wmul
  1960  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0487  0858               	movf	WriteNumber@temp,w
  1963  0488  0773               	addwf	?___wmul,w
  1964  0489  00D8               	movwf	WriteNumber@temp
  1965  048A  0859               	movf	WriteNumber@temp+1,w
  1966  048B  1803               	skipnc
  1967  048C  0A59               	incf	WriteNumber@temp+1,w
  1968  048D  0774               	addwf	?___wmul+1,w
  1969  048E  00D9               	movwf	WriteNumber@temp+1
  1970  048F                     l2044:
  1971                           
  1972                           ;Master.c: 187:     dec = temp / 10;
  1973  048F  300A               	movlw	10
  1974  0490  00F3               	movwf	___lwdiv@divisor
  1975  0491  3000               	movlw	0
  1976  0492  00F4               	movwf	___lwdiv@divisor+1
  1977  0493  0859               	movf	WriteNumber@temp+1,w
  1978  0494  00F6               	movwf	___lwdiv@dividend+1
  1979  0495  0858               	movf	WriteNumber@temp,w
  1980  0496  00F5               	movwf	___lwdiv@dividend
  1981  0497  120A  158A  273E  120A  118A  	fcall	___lwdiv
  1982  049C  0873               	movf	?___lwdiv,w
  1983  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1984  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1985  049F  00D0               	movwf	??_WriteNumber
  1986  04A0  0850               	movf	??_WriteNumber,w
  1987  04A1  00D7               	movwf	WriteNumber@dec
  1988  04A2                     l2046:
  1989                           
  1990                           ;Master.c: 188:     temp = temp - dec * 10;
  1991  04A2  0857               	movf	WriteNumber@dec,w
  1992  04A3  00D0               	movwf	??_WriteNumber
  1993  04A4  01D1               	clrf	??_WriteNumber+1
  1994  04A5  0850               	movf	??_WriteNumber,w
  1995  04A6  00F3               	movwf	___wmul@multiplier
  1996  04A7  0851               	movf	??_WriteNumber+1,w
  1997  04A8  00F4               	movwf	___wmul@multiplier+1
  1998  04A9  30F6               	movlw	246
  1999  04AA  00F5               	movwf	___wmul@multiplicand
  2000  04AB  30FF               	movlw	255
  2001  04AC  00F6               	movwf	___wmul@multiplicand+1
  2002  04AD  120A  158A  26F0  120A  118A  	fcall	___wmul
  2003  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2004  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2005  04B4  0858               	movf	WriteNumber@temp,w
  2006  04B5  0773               	addwf	?___wmul,w
  2007  04B6  00D8               	movwf	WriteNumber@temp
  2008  04B7  0859               	movf	WriteNumber@temp+1,w
  2009  04B8  1803               	skipnc
  2010  04B9  0A59               	incf	WriteNumber@temp+1,w
  2011  04BA  0774               	addwf	?___wmul+1,w
  2012  04BB  00D9               	movwf	WriteNumber@temp+1
  2013  04BC                     l2048:
  2014                           
  2015                           ;Master.c: 189:     cent = temp;
  2016  04BC  0858               	movf	WriteNumber@temp,w
  2017  04BD  00D0               	movwf	??_WriteNumber
  2018  04BE  0850               	movf	??_WriteNumber,w
  2019  04BF  00D5               	movwf	WriteNumber@cent
  2020  04C0                     l2050:
  2021                           
  2022                           ;Master.c: 194:     unidad = unidad + 48;
  2023  04C0  0856               	movf	WriteNumber@unidad,w
  2024  04C1  3E30               	addlw	48
  2025  04C2  00D0               	movwf	??_WriteNumber
  2026  04C3  0850               	movf	??_WriteNumber,w
  2027  04C4  00D6               	movwf	WriteNumber@unidad
  2028  04C5                     l2052:
  2029                           
  2030                           ;Master.c: 195:     dec = dec + 48;
  2031  04C5  0857               	movf	WriteNumber@dec,w
  2032  04C6  3E30               	addlw	48
  2033  04C7  00D0               	movwf	??_WriteNumber
  2034  04C8  0850               	movf	??_WriteNumber,w
  2035  04C9  00D7               	movwf	WriteNumber@dec
  2036  04CA                     l2054:
  2037                           
  2038                           ;Master.c: 196:     cent = cent + 48;
  2039  04CA  0855               	movf	WriteNumber@cent,w
  2040  04CB  3E30               	addlw	48
  2041  04CC  00D0               	movwf	??_WriteNumber
  2042  04CD  0850               	movf	??_WriteNumber,w
  2043  04CE  00D5               	movwf	WriteNumber@cent
  2044  04CF                     l2056:
  2045                           
  2046                           ;Master.c: 200:     if ((formato == 3)&&(valor < 68)) {
  2047  04CF  3003               	movlw	3
  2048  04D0  064F               	xorwf	WriteNumber@formato,w
  2049  04D1  1D03               	btfss	3,2
  2050  04D2  2CD4               	goto	u2371
  2051  04D3  2CD5               	goto	u2370
  2052  04D4                     u2371:
  2053  04D4  2CF2               	goto	l2066
  2054  04D5                     u2370:
  2055  04D5                     l2058:
  2056  04D5  3044               	movlw	68
  2057  04D6  024E               	subwf	WriteNumber@valor,w
  2058  04D7  1803               	skipnc
  2059  04D8  2CDA               	goto	u2381
  2060  04D9  2CDB               	goto	u2380
  2061  04DA                     u2381:
  2062  04DA  2CF2               	goto	l2066
  2063  04DB                     u2380:
  2064  04DB                     l2060:
  2065                           
  2066                           ;Master.c: 201:         Lcd_Set_Cursor(fila, columna);
  2067  04DB  084D               	movf	WriteNumber@columna,w
  2068  04DC  00D0               	movwf	??_WriteNumber
  2069  04DD  0850               	movf	??_WriteNumber,w
  2070  04DE  00F7               	movwf	Lcd_Set_Cursor@b
  2071  04DF  085A               	movf	WriteNumber@fila,w
  2072  04E0  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2073  04E5                     l2062:
  2074                           
  2075                           ;Master.c: 202:         Lcd_Write_String("-");
  2076  04E5  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2077  04E6  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2078  04EB                     l2064:
  2079                           
  2080                           ;Master.c: 203:         SendString("-");
  2081  04EB  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2082  04EC  120A  158A  268D  120A  118A  	fcall	_SendString
  2083                           
  2084                           ;Master.c: 204:     } else if ((formato == 3)&&(valor >= 68)) {
  2085  04F1  2D14               	goto	l95
  2086  04F2                     l2066:
  2087  04F2  3003               	movlw	3
  2088  04F3  064F               	xorwf	WriteNumber@formato,w
  2089  04F4  1D03               	btfss	3,2
  2090  04F5  2CF7               	goto	u2391
  2091  04F6  2CF8               	goto	u2390
  2092  04F7                     u2391:
  2093  04F7  2D14               	goto	l95
  2094  04F8                     u2390:
  2095  04F8                     l2068:
  2096  04F8  3044               	movlw	68
  2097  04F9  024E               	subwf	WriteNumber@valor,w
  2098  04FA  1C03               	skipc
  2099  04FB  2CFD               	goto	u2401
  2100  04FC  2CFE               	goto	u2400
  2101  04FD                     u2401:
  2102  04FD  2D14               	goto	l95
  2103  04FE                     u2400:
  2104  04FE                     l2070:
  2105                           
  2106                           ;Master.c: 205:         Lcd_Set_Cursor(fila, columna);
  2107  04FE  084D               	movf	WriteNumber@columna,w
  2108  04FF  00D0               	movwf	??_WriteNumber
  2109  0500  0850               	movf	??_WriteNumber,w
  2110  0501  00F7               	movwf	Lcd_Set_Cursor@b
  2111  0502  085A               	movf	WriteNumber@fila,w
  2112  0503  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2113  0508                     l2072:
  2114                           
  2115                           ;Master.c: 206:         Lcd_Write_String(" ");
  2116  0508  3021               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  2117  0509  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2118  050E                     l2074:
  2119                           
  2120                           ;Master.c: 207:         SendString(" ");
  2121  050E  3021               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  2122  050F  120A  158A  268D  120A  118A  	fcall	_SendString
  2123  0514                     l95:
  2124                           
  2125                           ;Master.c: 209:     Lcd_Set_Cursor(fila, columna + cor);
  2126  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0516  0854               	movf	WriteNumber@cor,w
  2129  0517  074D               	addwf	WriteNumber@columna,w
  2130  0518  00D0               	movwf	??_WriteNumber
  2131  0519  0850               	movf	??_WriteNumber,w
  2132  051A  00F7               	movwf	Lcd_Set_Cursor@b
  2133  051B  085A               	movf	WriteNumber@fila,w
  2134  051C  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2135                           
  2136                           ;Master.c: 210:     Lcd_Write_Char(unidad);
  2137  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0523  0856               	movf	WriteNumber@unidad,w
  2140  0524  120A  158A  2606  120A  118A  	fcall	_Lcd_Write_Char
  2141                           
  2142                           ;Master.c: 211:     SendChar(unidad);
  2143  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2144  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2145  052B  0856               	movf	WriteNumber@unidad,w
  2146  052C  120A  158A  25E1  120A  118A  	fcall	_SendChar
  2147  0531                     l2076:
  2148                           
  2149                           ;Master.c: 212:     if ((formato == 1)) {
  2150  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0533  034F               	decf	WriteNumber@formato,w
  2153  0534  1D03               	btfss	3,2
  2154  0535  2D37               	goto	u2411
  2155  0536  2D38               	goto	u2410
  2156  0537                     u2411:
  2157  0537  2D50               	goto	l97
  2158  0538                     u2410:
  2159  0538                     l2078:
  2160                           
  2161                           ;Master.c: 213:         Lcd_Set_Cursor(fila, columna + 1 + cor);
  2162  0538  0854               	movf	WriteNumber@cor,w
  2163  0539  074D               	addwf	WriteNumber@columna,w
  2164  053A  3E01               	addlw	1
  2165  053B  00D0               	movwf	??_WriteNumber
  2166  053C  0850               	movf	??_WriteNumber,w
  2167  053D  00F7               	movwf	Lcd_Set_Cursor@b
  2168  053E  085A               	movf	WriteNumber@fila,w
  2169  053F  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2170  0544                     l2080:
  2171                           
  2172                           ;Master.c: 214:         Lcd_Write_String(".");
  2173  0544  3027               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2174  0545  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2175  054A                     l2082:
  2176                           
  2177                           ;Master.c: 215:         SendString(".");
  2178  054A  3027               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2179  054B  120A  158A  268D  120A  118A  	fcall	_SendString
  2180  0550                     l97:	
  2181                           ;Master.c: 216:     }
  2182                           
  2183                           
  2184                           ;Master.c: 217:     Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 1);
  2185  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0552  084F               	movf	WriteNumber@formato,w
  2188  0553  1D03               	btfss	3,2
  2189  0554  2D56               	goto	u2421
  2190  0555  2D58               	goto	u2420
  2191  0556                     u2421:
  2192  0556  3001               	movlw	1
  2193  0557  2D59               	goto	u2430
  2194  0558                     u2420:
  2195  0558  3000               	movlw	0
  2196  0559                     u2430:
  2197  0559  074D               	addwf	WriteNumber@columna,w
  2198  055A  3E01               	addlw	1
  2199  055B  00D0               	movwf	??_WriteNumber
  2200  055C  0850               	movf	??_WriteNumber,w
  2201  055D  00F7               	movwf	Lcd_Set_Cursor@b
  2202  055E  085A               	movf	WriteNumber@fila,w
  2203  055F  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2204                           
  2205                           ;Master.c: 218:     Lcd_Write_Char(dec);
  2206  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0566  0857               	movf	WriteNumber@dec,w
  2209  0567  120A  158A  2606  120A  118A  	fcall	_Lcd_Write_Char
  2210                           
  2211                           ;Master.c: 219:     SendChar(dec);
  2212  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2213  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2214  056E  0857               	movf	WriteNumber@dec,w
  2215  056F  120A  158A  25E1  120A  118A  	fcall	_SendChar
  2216                           
  2217                           ;Master.c: 220:     Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 2);
  2218  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0576  084F               	movf	WriteNumber@formato,w
  2221  0577  1D03               	btfss	3,2
  2222  0578  2D7A               	goto	u2441
  2223  0579  2D7C               	goto	u2440
  2224  057A                     u2441:
  2225  057A  3001               	movlw	1
  2226  057B  2D7D               	goto	u2450
  2227  057C                     u2440:
  2228  057C  3000               	movlw	0
  2229  057D                     u2450:
  2230  057D  074D               	addwf	WriteNumber@columna,w
  2231  057E  3E02               	addlw	2
  2232  057F  00D0               	movwf	??_WriteNumber
  2233  0580  0850               	movf	??_WriteNumber,w
  2234  0581  00F7               	movwf	Lcd_Set_Cursor@b
  2235  0582  085A               	movf	WriteNumber@fila,w
  2236  0583  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2237                           
  2238                           ;Master.c: 221:     Lcd_Write_Char(cent);
  2239  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2241  058A  0855               	movf	WriteNumber@cent,w
  2242  058B  120A  158A  2606  120A  118A  	fcall	_Lcd_Write_Char
  2243                           
  2244                           ;Master.c: 222:     SendChar(cent);
  2245  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0592  0855               	movf	WriteNumber@cent,w
  2248  0593  120A  158A  25E1  120A  118A  	fcall	_SendChar
  2249  0598                     l2084:
  2250                           
  2251                           ;Master.c: 223:     if (formato == 1) {
  2252  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2254  059A  034F               	decf	WriteNumber@formato,w
  2255  059B  1D03               	btfss	3,2
  2256  059C  2D9E               	goto	u2461
  2257  059D  2D9F               	goto	u2460
  2258  059E                     u2461:
  2259  059E  2DBD               	goto	l99
  2260  059F                     u2460:
  2261  059F                     l2086:
  2262                           
  2263                           ;Master.c: 224:         Lcd_Set_Cursor(fila, columna + 1 * (formato != 0) + 3);
  2264  059F  084F               	movf	WriteNumber@formato,w
  2265  05A0  1D03               	btfss	3,2
  2266  05A1  2DA3               	goto	u2471
  2267  05A2  2DA5               	goto	u2470
  2268  05A3                     u2471:
  2269  05A3  3001               	movlw	1
  2270  05A4  2DA6               	goto	u2480
  2271  05A5                     u2470:
  2272  05A5  3000               	movlw	0
  2273  05A6                     u2480:
  2274  05A6  074D               	addwf	WriteNumber@columna,w
  2275  05A7  3E03               	addlw	3
  2276  05A8  00D0               	movwf	??_WriteNumber
  2277  05A9  0850               	movf	??_WriteNumber,w
  2278  05AA  00F7               	movwf	Lcd_Set_Cursor@b
  2279  05AB  085A               	movf	WriteNumber@fila,w
  2280  05AC  120A  158A  2652  120A  118A  	fcall	_Lcd_Set_Cursor
  2281  05B1                     l2088:
  2282                           
  2283                           ;Master.c: 225:         Lcd_Write_String("V");
  2284  05B1  3029               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2285  05B2  120A  158A  26CB  120A  118A  	fcall	_Lcd_Write_String
  2286  05B7                     l2090:
  2287                           
  2288                           ;Master.c: 226:         SendString("V");
  2289  05B7  3029               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2290  05B8  120A  158A  268D  120A  118A  	fcall	_SendString
  2291  05BD                     l99:
  2292  05BD  0008               	return
  2293  05BE                     __end_of_WriteNumber:
  2294                           
  2295                           	psect	text7
  2296  06D5                     __ptext7:	
  2297 ;; *************** function ___xxtofl *****************
  2298 ;; Defined at:
  2299 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  sign            1    wreg     unsigned char 
  2302 ;;  val             4    3[COMMON] long 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  sign            1    4[BANK0 ] unsigned char 
  2305 ;;  arg             4    6[BANK0 ] unsigned long 
  2306 ;;  exp             1    5[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  4    3[COMMON] unsigned char 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         4       0       0       0       0
  2317 ;;      Locals:         0       6       0       0       0
  2318 ;;      Temps:          0       4       0       0       0
  2319 ;;      Totals:         4      10       0       0       0
  2320 ;;Total ram usage:       14 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    2
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_WriteNumber
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function ___xxtofl
  2332  06D5                     ___xxtofl:
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2336                           ;___xxtofl@sign stored from wreg
  2337  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2338  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2339  06D7  00A4               	movwf	___xxtofl@sign
  2340  06D8                     l1972:
  2341  06D8  0824               	movf	___xxtofl@sign,w
  2342  06D9  1903               	btfsc	3,2
  2343  06DA  2EDC               	goto	u2191
  2344  06DB  2EDD               	goto	u2190
  2345  06DC                     u2191:
  2346  06DC  2EF1               	goto	l1978
  2347  06DD                     u2190:
  2348  06DD                     l1974:
  2349  06DD  1FF6               	btfss	___xxtofl@val+3,7
  2350  06DE  2EE0               	goto	u2201
  2351  06DF  2EE1               	goto	u2200
  2352  06E0                     u2201:
  2353  06E0  2EF1               	goto	l1978
  2354  06E1                     u2200:
  2355  06E1                     l1976:
  2356  06E1  0973               	comf	___xxtofl@val,w
  2357  06E2  00A6               	movwf	___xxtofl@arg
  2358  06E3  0974               	comf	___xxtofl@val+1,w
  2359  06E4  00A7               	movwf	___xxtofl@arg+1
  2360  06E5  0975               	comf	___xxtofl@val+2,w
  2361  06E6  00A8               	movwf	___xxtofl@arg+2
  2362  06E7  0976               	comf	___xxtofl@val+3,w
  2363  06E8  00A9               	movwf	___xxtofl@arg+3
  2364  06E9  0AA6               	incf	___xxtofl@arg,f
  2365  06EA  1903               	skipnz
  2366  06EB  0AA7               	incf	___xxtofl@arg+1,f
  2367  06EC  1903               	skipnz
  2368  06ED  0AA8               	incf	___xxtofl@arg+2,f
  2369  06EE  1903               	skipnz
  2370  06EF  0AA9               	incf	___xxtofl@arg+3,f
  2371  06F0  2EF9               	goto	l735
  2372  06F1                     l1978:
  2373  06F1  0876               	movf	___xxtofl@val+3,w
  2374  06F2  00A9               	movwf	___xxtofl@arg+3
  2375  06F3  0875               	movf	___xxtofl@val+2,w
  2376  06F4  00A8               	movwf	___xxtofl@arg+2
  2377  06F5  0874               	movf	___xxtofl@val+1,w
  2378  06F6  00A7               	movwf	___xxtofl@arg+1
  2379  06F7  0873               	movf	___xxtofl@val,w
  2380  06F8  00A6               	movwf	___xxtofl@arg
  2381  06F9                     l735:
  2382  06F9  0876               	movf	___xxtofl@val+3,w
  2383  06FA  0475               	iorwf	___xxtofl@val+2,w
  2384  06FB  0474               	iorwf	___xxtofl@val+1,w
  2385  06FC  0473               	iorwf	___xxtofl@val,w
  2386  06FD  1D03               	skipz
  2387  06FE  2F00               	goto	u2211
  2388  06FF  2F01               	goto	u2210
  2389  0700                     u2211:
  2390  0700  2F0A               	goto	l1984
  2391  0701                     u2210:
  2392  0701                     l1980:
  2393  0701  3000               	movlw	0
  2394  0702  00F6               	movwf	?___xxtofl+3
  2395  0703  3000               	movlw	0
  2396  0704  00F5               	movwf	?___xxtofl+2
  2397  0705  3000               	movlw	0
  2398  0706  00F4               	movwf	?___xxtofl+1
  2399  0707  3000               	movlw	0
  2400  0708  00F3               	movwf	?___xxtofl
  2401  0709  2F90               	goto	l737
  2402  070A                     l1984:
  2403  070A  3096               	movlw	150
  2404  070B  00A0               	movwf	??___xxtofl
  2405  070C  0820               	movf	??___xxtofl,w
  2406  070D  00A5               	movwf	___xxtofl@exp
  2407  070E  2F1C               	goto	l1988
  2408  070F                     l1986:
  2409  070F  3001               	movlw	1
  2410  0710  00A0               	movwf	??___xxtofl
  2411  0711  0820               	movf	??___xxtofl,w
  2412  0712  07A5               	addwf	___xxtofl@exp,f
  2413  0713  3001               	movlw	1
  2414  0714                     u2225:
  2415  0714  1003               	clrc
  2416  0715  0CA9               	rrf	___xxtofl@arg+3,f
  2417  0716  0CA8               	rrf	___xxtofl@arg+2,f
  2418  0717  0CA7               	rrf	___xxtofl@arg+1,f
  2419  0718  0CA6               	rrf	___xxtofl@arg,f
  2420  0719  3EFF               	addlw	-1
  2421  071A  1D03               	skipz
  2422  071B  2F14               	goto	u2225
  2423  071C                     l1988:
  2424  071C  30FE               	movlw	254
  2425  071D  0529               	andwf	___xxtofl@arg+3,w
  2426  071E  1D03               	btfss	3,2
  2427  071F  2F21               	goto	u2231
  2428  0720  2F22               	goto	u2230
  2429  0721                     u2231:
  2430  0721  2F0F               	goto	l1986
  2431  0722                     u2230:
  2432  0722  2F3E               	goto	l741
  2433  0723                     l1990:
  2434  0723  3001               	movlw	1
  2435  0724  00A0               	movwf	??___xxtofl
  2436  0725  0820               	movf	??___xxtofl,w
  2437  0726  07A5               	addwf	___xxtofl@exp,f
  2438  0727                     l1992:
  2439  0727  3001               	movlw	1
  2440  0728  07A6               	addwf	___xxtofl@arg,f
  2441  0729  3000               	movlw	0
  2442  072A  1803               	skipnc
  2443  072B  3001               	movlw	1
  2444  072C  07A7               	addwf	___xxtofl@arg+1,f
  2445  072D  3000               	movlw	0
  2446  072E  1803               	skipnc
  2447  072F  3001               	movlw	1
  2448  0730  07A8               	addwf	___xxtofl@arg+2,f
  2449  0731  3000               	movlw	0
  2450  0732  1803               	skipnc
  2451  0733  3001               	movlw	1
  2452  0734  07A9               	addwf	___xxtofl@arg+3,f
  2453  0735                     l1994:
  2454  0735  3001               	movlw	1
  2455  0736                     u2245:
  2456  0736  1003               	clrc
  2457  0737  0CA9               	rrf	___xxtofl@arg+3,f
  2458  0738  0CA8               	rrf	___xxtofl@arg+2,f
  2459  0739  0CA7               	rrf	___xxtofl@arg+1,f
  2460  073A  0CA6               	rrf	___xxtofl@arg,f
  2461  073B  3EFF               	addlw	-1
  2462  073C  1D03               	skipz
  2463  073D  2F36               	goto	u2245
  2464  073E                     l741:
  2465  073E  30FF               	movlw	255
  2466  073F  0529               	andwf	___xxtofl@arg+3,w
  2467  0740  1D03               	btfss	3,2
  2468  0741  2F43               	goto	u2251
  2469  0742  2F44               	goto	u2250
  2470  0743                     u2251:
  2471  0743  2F23               	goto	l1990
  2472  0744                     u2250:
  2473  0744  2F50               	goto	l1998
  2474  0745                     l1996:
  2475  0745  3001               	movlw	1
  2476  0746  02A5               	subwf	___xxtofl@exp,f
  2477  0747  3001               	movlw	1
  2478  0748  00A0               	movwf	??___xxtofl
  2479  0749                     u2265:
  2480  0749  1003               	clrc
  2481  074A  0DA6               	rlf	___xxtofl@arg,f
  2482  074B  0DA7               	rlf	___xxtofl@arg+1,f
  2483  074C  0DA8               	rlf	___xxtofl@arg+2,f
  2484  074D  0DA9               	rlf	___xxtofl@arg+3,f
  2485  074E  0BA0               	decfsz	??___xxtofl,f
  2486  074F  2F49               	goto	u2265
  2487  0750                     l1998:
  2488  0750  1BA8               	btfsc	___xxtofl@arg+2,7
  2489  0751  2F53               	goto	u2271
  2490  0752  2F54               	goto	u2270
  2491  0753                     u2271:
  2492  0753  2F5A               	goto	l748
  2493  0754                     u2270:
  2494  0754                     l2000:
  2495  0754  3002               	movlw	2
  2496  0755  0225               	subwf	___xxtofl@exp,w
  2497  0756  1803               	skipnc
  2498  0757  2F59               	goto	u2281
  2499  0758  2F5A               	goto	u2280
  2500  0759                     u2281:
  2501  0759  2F45               	goto	l1996
  2502  075A                     u2280:
  2503  075A                     l748:
  2504  075A  1825               	btfsc	___xxtofl@exp,0
  2505  075B  2F5D               	goto	u2291
  2506  075C  2F5E               	goto	u2290
  2507  075D                     u2291:
  2508  075D  2F66               	goto	l749
  2509  075E                     u2290:
  2510  075E                     l2002:
  2511  075E  30FF               	movlw	255
  2512  075F  05A6               	andwf	___xxtofl@arg,f
  2513  0760  30FF               	movlw	255
  2514  0761  05A7               	andwf	___xxtofl@arg+1,f
  2515  0762  307F               	movlw	127
  2516  0763  05A8               	andwf	___xxtofl@arg+2,f
  2517  0764  30FF               	movlw	255
  2518  0765  05A9               	andwf	___xxtofl@arg+3,f
  2519  0766                     l749:
  2520  0766  1003               	clrc
  2521  0767  0CA5               	rrf	___xxtofl@exp,f
  2522  0768                     l2004:
  2523  0768  0825               	movf	___xxtofl@exp,w
  2524  0769  00A0               	movwf	??___xxtofl
  2525  076A  01A1               	clrf	??___xxtofl+1
  2526  076B  01A2               	clrf	??___xxtofl+2
  2527  076C  01A3               	clrf	??___xxtofl+3
  2528  076D  3018               	movlw	24
  2529  076E                     u2305:
  2530  076E  1003               	clrc
  2531  076F  0DA0               	rlf	??___xxtofl,f
  2532  0770  0DA1               	rlf	??___xxtofl+1,f
  2533  0771  0DA2               	rlf	??___xxtofl+2,f
  2534  0772  0DA3               	rlf	??___xxtofl+3,f
  2535  0773                     u2300:
  2536  0773  3EFF               	addlw	-1
  2537  0774  1D03               	skipz
  2538  0775  2F6E               	goto	u2305
  2539  0776  0820               	movf	??___xxtofl,w
  2540  0777  04A6               	iorwf	___xxtofl@arg,f
  2541  0778  0821               	movf	??___xxtofl+1,w
  2542  0779  04A7               	iorwf	___xxtofl@arg+1,f
  2543  077A  0822               	movf	??___xxtofl+2,w
  2544  077B  04A8               	iorwf	___xxtofl@arg+2,f
  2545  077C  0823               	movf	??___xxtofl+3,w
  2546  077D  04A9               	iorwf	___xxtofl@arg+3,f
  2547  077E                     l2006:
  2548  077E  0824               	movf	___xxtofl@sign,w
  2549  077F  1903               	btfsc	3,2
  2550  0780  2F82               	goto	u2311
  2551  0781  2F83               	goto	u2310
  2552  0782                     u2311:
  2553  0782  2F88               	goto	l2012
  2554  0783                     u2310:
  2555  0783                     l2008:
  2556  0783  1FF6               	btfss	___xxtofl@val+3,7
  2557  0784  2F86               	goto	u2321
  2558  0785  2F87               	goto	u2320
  2559  0786                     u2321:
  2560  0786  2F88               	goto	l2012
  2561  0787                     u2320:
  2562  0787                     l2010:
  2563  0787  17A9               	bsf	___xxtofl@arg+3,7
  2564  0788                     l2012:
  2565  0788  0829               	movf	___xxtofl@arg+3,w
  2566  0789  00F6               	movwf	?___xxtofl+3
  2567  078A  0828               	movf	___xxtofl@arg+2,w
  2568  078B  00F5               	movwf	?___xxtofl+2
  2569  078C  0827               	movf	___xxtofl@arg+1,w
  2570  078D  00F4               	movwf	?___xxtofl+1
  2571  078E  0826               	movf	___xxtofl@arg,w
  2572  078F  00F3               	movwf	?___xxtofl
  2573  0790                     l737:
  2574  0790  0008               	return
  2575  0791                     __end_of___xxtofl:
  2576                           
  2577                           	psect	text8
  2578  0EF0                     __ptext8:	
  2579 ;; *************** function ___wmul *****************
  2580 ;; Defined at:
  2581 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  multiplier      2    3[COMMON] unsigned int 
  2584 ;;  multiplicand    2    5[COMMON] unsigned int 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  product         2    7[COMMON] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    3[COMMON] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         4       0       0       0       0
  2597 ;;      Locals:         2       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0
  2599 ;;      Totals:         6       0       0       0       0
  2600 ;;Total ram usage:        6 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    2
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_WriteNumber
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function ___wmul
  2612  0EF0                     ___wmul:
  2613  0EF0                     l1446:	
  2614                           ;incstack = 0
  2615                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2616                           
  2617  0EF0  01F7               	clrf	___wmul@product
  2618  0EF1  01F8               	clrf	___wmul@product+1
  2619  0EF2                     l1448:
  2620  0EF2  1C73               	btfss	___wmul@multiplier,0
  2621  0EF3  2EF5               	goto	u1131
  2622  0EF4  2EF6               	goto	u1130
  2623  0EF5                     u1131:
  2624  0EF5  2EFC               	goto	l302
  2625  0EF6                     u1130:
  2626  0EF6                     l1450:
  2627  0EF6  0875               	movf	___wmul@multiplicand,w
  2628  0EF7  07F7               	addwf	___wmul@product,f
  2629  0EF8  1803               	skipnc
  2630  0EF9  0AF8               	incf	___wmul@product+1,f
  2631  0EFA  0876               	movf	___wmul@multiplicand+1,w
  2632  0EFB  07F8               	addwf	___wmul@product+1,f
  2633  0EFC                     l302:
  2634  0EFC  3001               	movlw	1
  2635  0EFD                     u1145:
  2636  0EFD  1003               	clrc
  2637  0EFE  0DF5               	rlf	___wmul@multiplicand,f
  2638  0EFF  0DF6               	rlf	___wmul@multiplicand+1,f
  2639  0F00  3EFF               	addlw	-1
  2640  0F01  1D03               	skipz
  2641  0F02  2EFD               	goto	u1145
  2642  0F03                     l1452:
  2643  0F03  3001               	movlw	1
  2644  0F04                     u1155:
  2645  0F04  1003               	clrc
  2646  0F05  0CF4               	rrf	___wmul@multiplier+1,f
  2647  0F06  0CF3               	rrf	___wmul@multiplier,f
  2648  0F07  3EFF               	addlw	-1
  2649  0F08  1D03               	skipz
  2650  0F09  2F04               	goto	u1155
  2651  0F0A                     l1454:
  2652  0F0A  0873               	movf	___wmul@multiplier,w
  2653  0F0B  0474               	iorwf	___wmul@multiplier+1,w
  2654  0F0C  1D03               	btfss	3,2
  2655  0F0D  2F0F               	goto	u1161
  2656  0F0E  2F10               	goto	u1160
  2657  0F0F                     u1161:
  2658  0F0F  2EF2               	goto	l1448
  2659  0F10                     u1160:
  2660  0F10                     l1456:
  2661  0F10  0878               	movf	___wmul@product+1,w
  2662  0F11  00F4               	movwf	?___wmul+1
  2663  0F12  0877               	movf	___wmul@product,w
  2664  0F13  00F3               	movwf	?___wmul
  2665  0F14                     l304:
  2666  0F14  0008               	return
  2667  0F15                     __end_of___wmul:
  2668                           
  2669                           	psect	text9
  2670  0F3E                     __ptext9:	
  2671 ;; *************** function ___lwdiv *****************
  2672 ;; Defined at:
  2673 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  divisor         2    3[COMMON] unsigned int 
  2676 ;;  dividend        2    5[COMMON] unsigned int 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  quotient        2    1[BANK0 ] unsigned int 
  2679 ;;  counter         1    0[BANK0 ] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  2    3[COMMON] unsigned int 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         4       0       0       0       0
  2690 ;;      Locals:         0       3       0       0       0
  2691 ;;      Temps:          1       0       0       0       0
  2692 ;;      Totals:         5       3       0       0       0
  2693 ;;Total ram usage:        8 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_WriteNumber
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function ___lwdiv
  2705  0F3E                     ___lwdiv:
  2706  0F3E                     l1946:	
  2707                           ;incstack = 0
  2708                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2709                           
  2710  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0F40  01A1               	clrf	___lwdiv@quotient
  2713  0F41  01A2               	clrf	___lwdiv@quotient+1
  2714  0F42                     l1948:
  2715  0F42  0873               	movf	___lwdiv@divisor,w
  2716  0F43  0474               	iorwf	___lwdiv@divisor+1,w
  2717  0F44  1903               	btfsc	3,2
  2718  0F45  2F47               	goto	u2121
  2719  0F46  2F48               	goto	u2120
  2720  0F47                     u2121:
  2721  0F47  2F7F               	goto	l1968
  2722  0F48                     u2120:
  2723  0F48                     l1950:
  2724  0F48  01A0               	clrf	___lwdiv@counter
  2725  0F49  0AA0               	incf	___lwdiv@counter,f
  2726  0F4A  2F56               	goto	l1956
  2727  0F4B                     l1952:
  2728  0F4B  3001               	movlw	1
  2729  0F4C                     u2135:
  2730  0F4C  1003               	clrc
  2731  0F4D  0DF3               	rlf	___lwdiv@divisor,f
  2732  0F4E  0DF4               	rlf	___lwdiv@divisor+1,f
  2733  0F4F  3EFF               	addlw	-1
  2734  0F50  1D03               	skipz
  2735  0F51  2F4C               	goto	u2135
  2736  0F52                     l1954:
  2737  0F52  3001               	movlw	1
  2738  0F53  00F7               	movwf	??___lwdiv
  2739  0F54  0877               	movf	??___lwdiv,w
  2740  0F55  07A0               	addwf	___lwdiv@counter,f
  2741  0F56                     l1956:
  2742  0F56  1FF4               	btfss	___lwdiv@divisor+1,7
  2743  0F57  2F59               	goto	u2141
  2744  0F58  2F5A               	goto	u2140
  2745  0F59                     u2141:
  2746  0F59  2F4B               	goto	l1952
  2747  0F5A                     u2140:
  2748  0F5A                     l1958:
  2749  0F5A  3001               	movlw	1
  2750  0F5B                     u2155:
  2751  0F5B  1003               	clrc
  2752  0F5C  0DA1               	rlf	___lwdiv@quotient,f
  2753  0F5D  0DA2               	rlf	___lwdiv@quotient+1,f
  2754  0F5E  3EFF               	addlw	-1
  2755  0F5F  1D03               	skipz
  2756  0F60  2F5B               	goto	u2155
  2757  0F61  0874               	movf	___lwdiv@divisor+1,w
  2758  0F62  0276               	subwf	___lwdiv@dividend+1,w
  2759  0F63  1D03               	skipz
  2760  0F64  2F67               	goto	u2165
  2761  0F65  0873               	movf	___lwdiv@divisor,w
  2762  0F66  0275               	subwf	___lwdiv@dividend,w
  2763  0F67                     u2165:
  2764  0F67  1C03               	skipc
  2765  0F68  2F6A               	goto	u2161
  2766  0F69  2F6B               	goto	u2160
  2767  0F6A                     u2161:
  2768  0F6A  2F72               	goto	l1964
  2769  0F6B                     u2160:
  2770  0F6B                     l1960:
  2771  0F6B  0873               	movf	___lwdiv@divisor,w
  2772  0F6C  02F5               	subwf	___lwdiv@dividend,f
  2773  0F6D  0874               	movf	___lwdiv@divisor+1,w
  2774  0F6E  1C03               	skipc
  2775  0F6F  03F6               	decf	___lwdiv@dividend+1,f
  2776  0F70  02F6               	subwf	___lwdiv@dividend+1,f
  2777  0F71                     l1962:
  2778  0F71  1421               	bsf	___lwdiv@quotient,0
  2779  0F72                     l1964:
  2780  0F72  3001               	movlw	1
  2781  0F73                     u2175:
  2782  0F73  1003               	clrc
  2783  0F74  0CF4               	rrf	___lwdiv@divisor+1,f
  2784  0F75  0CF3               	rrf	___lwdiv@divisor,f
  2785  0F76  3EFF               	addlw	-1
  2786  0F77  1D03               	skipz
  2787  0F78  2F73               	goto	u2175
  2788  0F79                     l1966:
  2789  0F79  3001               	movlw	1
  2790  0F7A  02A0               	subwf	___lwdiv@counter,f
  2791  0F7B  1D03               	btfss	3,2
  2792  0F7C  2F7E               	goto	u2181
  2793  0F7D  2F7F               	goto	u2180
  2794  0F7E                     u2181:
  2795  0F7E  2F5A               	goto	l1958
  2796  0F7F                     u2180:
  2797  0F7F                     l1968:
  2798  0F7F  0822               	movf	___lwdiv@quotient+1,w
  2799  0F80  00F4               	movwf	?___lwdiv+1
  2800  0F81  0821               	movf	___lwdiv@quotient,w
  2801  0F82  00F3               	movwf	?___lwdiv
  2802  0F83                     l574:
  2803  0F83  0008               	return
  2804  0F84                     __end_of___lwdiv:
  2805                           
  2806                           	psect	text10
  2807  0F84                     __ptext10:	
  2808 ;; *************** function ___fltol *****************
  2809 ;; Defined at:
  2810 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  f1              4   36[BANK0 ] unsigned int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  exp1            1    8[COMMON] unsigned char 
  2815 ;;  sign1           1    7[COMMON] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  4   36[BANK0 ] long 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       4       0       0       0
  2826 ;;      Locals:         2       0       0       0       0
  2827 ;;      Temps:          0       5       0       0       0
  2828 ;;      Totals:         2       9       0       0       0
  2829 ;;Total ram usage:       11 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    2
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_WriteNumber
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function ___fltol
  2841  0F84                     ___fltol:
  2842  0F84                     l1910:	
  2843                           ;incstack = 0
  2844                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2845                           
  2846  0F84  1003               	clrc
  2847  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0F87  0D46               	rlf	___fltol@f1+2,w
  2850  0F88  0D47               	rlf	___fltol@f1+3,w
  2851  0F89  00C8               	movwf	??___fltol
  2852  0F8A  0848               	movf	??___fltol,w
  2853  0F8B  00F8               	movwf	___fltol@exp1
  2854  0F8C  0878               	movf	___fltol@exp1,w
  2855  0F8D  1D03               	btfss	3,2
  2856  0F8E  2F90               	goto	u2021
  2857  0F8F  2F91               	goto	u2020
  2858  0F90                     u2021:
  2859  0F90  2F9A               	goto	l1916
  2860  0F91                     u2020:
  2861  0F91                     l1912:
  2862  0F91  3000               	movlw	0
  2863  0F92  00C7               	movwf	?___fltol+3
  2864  0F93  3000               	movlw	0
  2865  0F94  00C6               	movwf	?___fltol+2
  2866  0F95  3000               	movlw	0
  2867  0F96  00C5               	movwf	?___fltol+1
  2868  0F97  3000               	movlw	0
  2869  0F98  00C4               	movwf	?___fltol
  2870  0F99  2FFF               	goto	l488
  2871  0F9A                     l1916:
  2872  0F9A  0844               	movf	___fltol@f1,w
  2873  0F9B  00C8               	movwf	??___fltol
  2874  0F9C  0845               	movf	___fltol@f1+1,w
  2875  0F9D  00C9               	movwf	??___fltol+1
  2876  0F9E  0846               	movf	___fltol@f1+2,w
  2877  0F9F  00CA               	movwf	??___fltol+2
  2878  0FA0  0847               	movf	___fltol@f1+3,w
  2879  0FA1  00CB               	movwf	??___fltol+3
  2880  0FA2  301F               	movlw	31
  2881  0FA3                     u2035:
  2882  0FA3  1003               	clrc
  2883  0FA4  0CCB               	rrf	??___fltol+3,f
  2884  0FA5  0CCA               	rrf	??___fltol+2,f
  2885  0FA6  0CC9               	rrf	??___fltol+1,f
  2886  0FA7  0CC8               	rrf	??___fltol,f
  2887  0FA8                     u2030:
  2888  0FA8  3EFF               	addlw	-1
  2889  0FA9  1D03               	skipz
  2890  0FAA  2FA3               	goto	u2035
  2891  0FAB  0848               	movf	??___fltol,w
  2892  0FAC  00CC               	movwf	??___fltol+4
  2893  0FAD  084C               	movf	??___fltol+4,w
  2894  0FAE  00F7               	movwf	___fltol@sign1
  2895  0FAF                     l1918:
  2896  0FAF  17C6               	bsf	___fltol@f1+2,7
  2897  0FB0                     l1920:
  2898  0FB0  30FF               	movlw	255
  2899  0FB1  05C4               	andwf	___fltol@f1,f
  2900  0FB2  30FF               	movlw	255
  2901  0FB3  05C5               	andwf	___fltol@f1+1,f
  2902  0FB4  30FF               	movlw	255
  2903  0FB5  05C6               	andwf	___fltol@f1+2,f
  2904  0FB6  3000               	movlw	0
  2905  0FB7  05C7               	andwf	___fltol@f1+3,f
  2906  0FB8                     l1922:
  2907  0FB8  3096               	movlw	150
  2908  0FB9  02F8               	subwf	___fltol@exp1,f
  2909  0FBA                     l1924:
  2910  0FBA  1FF8               	btfss	___fltol@exp1,7
  2911  0FBB  2FBD               	goto	u2041
  2912  0FBC  2FBE               	goto	u2040
  2913  0FBD                     u2041:
  2914  0FBD  2FD8               	goto	l1934
  2915  0FBE                     u2040:
  2916  0FBE                     l1926:
  2917  0FBE  0878               	movf	___fltol@exp1,w
  2918  0FBF  3A80               	xorlw	128
  2919  0FC0  3E97               	addlw	151
  2920  0FC1  1803               	skipnc
  2921  0FC2  2FC4               	goto	u2051
  2922  0FC3  2FC5               	goto	u2050
  2923  0FC4                     u2051:
  2924  0FC4  2FC6               	goto	l1932
  2925  0FC5                     u2050:
  2926  0FC5  2F91               	goto	l1912
  2927  0FC6                     l1932:
  2928  0FC6  3001               	movlw	1
  2929  0FC7                     u2065:
  2930  0FC7  1003               	clrc
  2931  0FC8  0CC7               	rrf	___fltol@f1+3,f
  2932  0FC9  0CC6               	rrf	___fltol@f1+2,f
  2933  0FCA  0CC5               	rrf	___fltol@f1+1,f
  2934  0FCB  0CC4               	rrf	___fltol@f1,f
  2935  0FCC  3EFF               	addlw	-1
  2936  0FCD  1D03               	skipz
  2937  0FCE  2FC7               	goto	u2065
  2938  0FCF  3001               	movlw	1
  2939  0FD0  00C8               	movwf	??___fltol
  2940  0FD1  0848               	movf	??___fltol,w
  2941  0FD2  07F8               	addwf	___fltol@exp1,f
  2942  0FD3  1D03               	btfss	3,2
  2943  0FD4  2FD6               	goto	u2071
  2944  0FD5  2FD7               	goto	u2070
  2945  0FD6                     u2071:
  2946  0FD6  2FC6               	goto	l1932
  2947  0FD7                     u2070:
  2948  0FD7  2FEF               	goto	l1942
  2949  0FD8                     l1934:
  2950  0FD8  3020               	movlw	32
  2951  0FD9  0278               	subwf	___fltol@exp1,w
  2952  0FDA  1C03               	skipc
  2953  0FDB  2FDD               	goto	u2081
  2954  0FDC  2FDE               	goto	u2080
  2955  0FDD                     u2081:
  2956  0FDD  2FEA               	goto	l495
  2957  0FDE                     u2080:
  2958  0FDE  2F91               	goto	l1912
  2959  0FDF                     l1940:
  2960  0FDF  3001               	movlw	1
  2961  0FE0  00C8               	movwf	??___fltol
  2962  0FE1                     u2095:
  2963  0FE1  1003               	clrc
  2964  0FE2  0DC4               	rlf	___fltol@f1,f
  2965  0FE3  0DC5               	rlf	___fltol@f1+1,f
  2966  0FE4  0DC6               	rlf	___fltol@f1+2,f
  2967  0FE5  0DC7               	rlf	___fltol@f1+3,f
  2968  0FE6  0BC8               	decfsz	??___fltol,f
  2969  0FE7  2FE1               	goto	u2095
  2970  0FE8  3001               	movlw	1
  2971  0FE9  02F8               	subwf	___fltol@exp1,f
  2972  0FEA                     l495:
  2973  0FEA  0878               	movf	___fltol@exp1,w
  2974  0FEB  1D03               	btfss	3,2
  2975  0FEC  2FEE               	goto	u2101
  2976  0FED  2FEF               	goto	u2100
  2977  0FEE                     u2101:
  2978  0FEE  2FDF               	goto	l1940
  2979  0FEF                     u2100:
  2980  0FEF                     l1942:
  2981  0FEF  0877               	movf	___fltol@sign1,w
  2982  0FF0  1903               	btfsc	3,2
  2983  0FF1  2FF3               	goto	u2111
  2984  0FF2  2FF4               	goto	u2110
  2985  0FF3                     u2111:
  2986  0FF3  2FFF               	goto	l498
  2987  0FF4                     u2110:
  2988  0FF4                     l1944:
  2989  0FF4  09C4               	comf	___fltol@f1,f
  2990  0FF5  09C5               	comf	___fltol@f1+1,f
  2991  0FF6  09C6               	comf	___fltol@f1+2,f
  2992  0FF7  09C7               	comf	___fltol@f1+3,f
  2993  0FF8  0AC4               	incf	___fltol@f1,f
  2994  0FF9  1903               	skipnz
  2995  0FFA  0AC5               	incf	___fltol@f1+1,f
  2996  0FFB  1903               	skipnz
  2997  0FFC  0AC6               	incf	___fltol@f1+2,f
  2998  0FFD  1903               	skipnz
  2999  0FFE  0AC7               	incf	___fltol@f1+3,f
  3000  0FFF                     l498:
  3001  0FFF                     l488:
  3002  0FFF  0008               	return
  3003  1000                     __end_of___fltol:
  3004                           
  3005                           	psect	text11
  3006  001A                     __ptext11:	
  3007 ;; *************** function ___flmul *****************
  3008 ;; Defined at:
  3009 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  b               4   10[BANK0 ] long 
  3012 ;;  a               4   14[BANK0 ] long 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  prod            4   30[BANK0 ] struct .
  3015 ;;  grs             4   24[BANK0 ] unsigned long 
  3016 ;;  temp            2   34[BANK0 ] struct .
  3017 ;;  bexp            1   29[BANK0 ] unsigned char 
  3018 ;;  aexp            1   28[BANK0 ] unsigned char 
  3019 ;;  sign            1   23[BANK0 ] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  4   10[BANK0 ] unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         0       8       0       0       0
  3030 ;;      Locals:         0      13       0       0       0
  3031 ;;      Temps:          0       5       0       0       0
  3032 ;;      Totals:         0      26       0       0       0
  3033 ;;Total ram usage:       26 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    3
  3036 ;; This function calls:
  3037 ;;		__Umul8_16
  3038 ;; This function is called by:
  3039 ;;		_WriteNumber
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           
  3044                           ;psect for function ___flmul
  3045  001A                     ___flmul:
  3046  001A                     l1522:	
  3047                           ;incstack = 0
  3048                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3049                           
  3050  001A  1283               	bcf	3,5	;RP0=0, select bank0
  3051  001B  1303               	bcf	3,6	;RP1=0, select bank0
  3052  001C  082D               	movf	___flmul@b+3,w
  3053  001D  3980               	andlw	128
  3054  001E  00B2               	movwf	??___flmul
  3055  001F  0832               	movf	??___flmul,w
  3056  0020  00B7               	movwf	___flmul@sign
  3057  0021                     l1524:
  3058  0021  082D               	movf	___flmul@b+3,w
  3059  0022  00B2               	movwf	??___flmul
  3060  0023  0732               	addwf	??___flmul,w
  3061  0024  00B3               	movwf	??___flmul+1
  3062  0025  0833               	movf	??___flmul+1,w
  3063  0026  00BD               	movwf	___flmul@bexp
  3064  0027                     l1526:
  3065  0027  1FAC               	btfss	___flmul@b+2,7
  3066  0028  282A               	goto	u1341
  3067  0029  282B               	goto	u1340
  3068  002A                     u1341:
  3069  002A  282C               	goto	l1530
  3070  002B                     u1340:
  3071  002B                     l1528:
  3072  002B  143D               	bsf	___flmul@bexp,0
  3073  002C                     l1530:
  3074  002C  083D               	movf	___flmul@bexp,w
  3075  002D  1903               	btfsc	3,2
  3076  002E  2830               	goto	u1351
  3077  002F  2831               	goto	u1350
  3078  0030                     u1351:
  3079  0030  2840               	goto	l1538
  3080  0031                     u1350:
  3081  0031                     l1532:
  3082  0031  0A3D               	incf	___flmul@bexp,w
  3083  0032  1D03               	btfss	3,2
  3084  0033  2835               	goto	u1361
  3085  0034  2836               	goto	u1360
  3086  0035                     u1361:
  3087  0035  283E               	goto	l1536
  3088  0036                     u1360:
  3089  0036                     l1534:
  3090  0036  3000               	movlw	0
  3091  0037  00AD               	movwf	___flmul@b+3
  3092  0038  3000               	movlw	0
  3093  0039  00AC               	movwf	___flmul@b+2
  3094  003A  3000               	movlw	0
  3095  003B  00AB               	movwf	___flmul@b+1
  3096  003C  3000               	movlw	0
  3097  003D  00AA               	movwf	___flmul@b
  3098  003E                     l1536:
  3099  003E  17AC               	bsf	___flmul@b+2,7
  3100  003F  2848               	goto	l1540
  3101  0040                     l1538:
  3102  0040  3000               	movlw	0
  3103  0041  00AD               	movwf	___flmul@b+3
  3104  0042  3000               	movlw	0
  3105  0043  00AC               	movwf	___flmul@b+2
  3106  0044  3000               	movlw	0
  3107  0045  00AB               	movwf	___flmul@b+1
  3108  0046  3000               	movlw	0
  3109  0047  00AA               	movwf	___flmul@b
  3110  0048                     l1540:
  3111  0048  0831               	movf	___flmul@a+3,w
  3112  0049  3980               	andlw	128
  3113  004A  00B2               	movwf	??___flmul
  3114  004B  0832               	movf	??___flmul,w
  3115  004C  06B7               	xorwf	___flmul@sign,f
  3116  004D                     l1542:
  3117  004D  0831               	movf	___flmul@a+3,w
  3118  004E  00B2               	movwf	??___flmul
  3119  004F  0732               	addwf	??___flmul,w
  3120  0050  00B3               	movwf	??___flmul+1
  3121  0051  0833               	movf	??___flmul+1,w
  3122  0052  00BC               	movwf	___flmul@aexp
  3123  0053                     l1544:
  3124  0053  1FB0               	btfss	___flmul@a+2,7
  3125  0054  2856               	goto	u1371
  3126  0055  2857               	goto	u1370
  3127  0056                     u1371:
  3128  0056  2858               	goto	l1548
  3129  0057                     u1370:
  3130  0057                     l1546:
  3131  0057  143C               	bsf	___flmul@aexp,0
  3132  0058                     l1548:
  3133  0058  083C               	movf	___flmul@aexp,w
  3134  0059  1903               	btfsc	3,2
  3135  005A  285C               	goto	u1381
  3136  005B  285D               	goto	u1380
  3137  005C                     u1381:
  3138  005C  286C               	goto	l1556
  3139  005D                     u1380:
  3140  005D                     l1550:
  3141  005D  0A3C               	incf	___flmul@aexp,w
  3142  005E  1D03               	btfss	3,2
  3143  005F  2861               	goto	u1391
  3144  0060  2862               	goto	u1390
  3145  0061                     u1391:
  3146  0061  286A               	goto	l1554
  3147  0062                     u1390:
  3148  0062                     l1552:
  3149  0062  3000               	movlw	0
  3150  0063  00B1               	movwf	___flmul@a+3
  3151  0064  3000               	movlw	0
  3152  0065  00B0               	movwf	___flmul@a+2
  3153  0066  3000               	movlw	0
  3154  0067  00AF               	movwf	___flmul@a+1
  3155  0068  3000               	movlw	0
  3156  0069  00AE               	movwf	___flmul@a
  3157  006A                     l1554:
  3158  006A  17B0               	bsf	___flmul@a+2,7
  3159  006B  2874               	goto	l1558
  3160  006C                     l1556:
  3161  006C  3000               	movlw	0
  3162  006D  00B1               	movwf	___flmul@a+3
  3163  006E  3000               	movlw	0
  3164  006F  00B0               	movwf	___flmul@a+2
  3165  0070  3000               	movlw	0
  3166  0071  00AF               	movwf	___flmul@a+1
  3167  0072  3000               	movlw	0
  3168  0073  00AE               	movwf	___flmul@a
  3169  0074                     l1558:
  3170  0074  083C               	movf	___flmul@aexp,w
  3171  0075  1903               	btfsc	3,2
  3172  0076  2878               	goto	u1401
  3173  0077  2879               	goto	u1400
  3174  0078                     u1401:
  3175  0078  287E               	goto	l1562
  3176  0079                     u1400:
  3177  0079                     l1560:
  3178  0079  083D               	movf	___flmul@bexp,w
  3179  007A  1D03               	btfss	3,2
  3180  007B  287D               	goto	u1411
  3181  007C  287E               	goto	u1410
  3182  007D                     u1411:
  3183  007D  2887               	goto	l1566
  3184  007E                     u1410:
  3185  007E                     l1562:
  3186  007E  3000               	movlw	0
  3187  007F  00AD               	movwf	?___flmul+3
  3188  0080  3000               	movlw	0
  3189  0081  00AC               	movwf	?___flmul+2
  3190  0082  3000               	movlw	0
  3191  0083  00AB               	movwf	?___flmul+1
  3192  0084  3000               	movlw	0
  3193  0085  00AA               	movwf	?___flmul
  3194  0086  2B7A               	goto	l691
  3195  0087                     l1566:
  3196  0087  082A               	movf	___flmul@b,w
  3197  0088  00B2               	movwf	??___flmul
  3198  0089  0832               	movf	??___flmul,w
  3199  008A  00F3               	movwf	__Umul8_16@multiplicand
  3200  008B  0830               	movf	___flmul@a+2,w
  3201  008C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3202  0091  0874               	movf	?__Umul8_16+1,w
  3203  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0094  00C3               	movwf	___flmul@temp+1
  3206  0095  0873               	movf	?__Umul8_16,w
  3207  0096  00C2               	movwf	___flmul@temp
  3208  0097                     l1568:
  3209  0097  0842               	movf	___flmul@temp,w
  3210  0098  00B2               	movwf	??___flmul
  3211  0099  01B3               	clrf	??___flmul+1
  3212  009A  01B4               	clrf	??___flmul+2
  3213  009B  01B5               	clrf	??___flmul+3
  3214  009C  0835               	movf	??___flmul+3,w
  3215  009D  00BB               	movwf	___flmul@grs+3
  3216  009E  0834               	movf	??___flmul+2,w
  3217  009F  00BA               	movwf	___flmul@grs+2
  3218  00A0  0833               	movf	??___flmul+1,w
  3219  00A1  00B9               	movwf	___flmul@grs+1
  3220  00A2  0832               	movf	??___flmul,w
  3221  00A3  00B8               	movwf	___flmul@grs
  3222  00A4                     l1570:
  3223  00A4  0843               	movf	___flmul@temp+1,w
  3224  00A5  00B2               	movwf	??___flmul
  3225  00A6  01B3               	clrf	??___flmul+1
  3226  00A7  01B4               	clrf	??___flmul+2
  3227  00A8  01B5               	clrf	??___flmul+3
  3228  00A9  0835               	movf	??___flmul+3,w
  3229  00AA  00C1               	movwf	___flmul@prod+3
  3230  00AB  0834               	movf	??___flmul+2,w
  3231  00AC  00C0               	movwf	___flmul@prod+2
  3232  00AD  0833               	movf	??___flmul+1,w
  3233  00AE  00BF               	movwf	___flmul@prod+1
  3234  00AF  0832               	movf	??___flmul,w
  3235  00B0  00BE               	movwf	___flmul@prod
  3236  00B1  082B               	movf	___flmul@b+1,w
  3237  00B2  00B2               	movwf	??___flmul
  3238  00B3  0832               	movf	??___flmul,w
  3239  00B4  00F3               	movwf	__Umul8_16@multiplicand
  3240  00B5  082F               	movf	___flmul@a+1,w
  3241  00B6  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3242  00BB  0874               	movf	?__Umul8_16+1,w
  3243  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3244  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3245  00BE  00C3               	movwf	___flmul@temp+1
  3246  00BF  0873               	movf	?__Umul8_16,w
  3247  00C0  00C2               	movwf	___flmul@temp
  3248  00C1                     l1572:
  3249  00C1  0842               	movf	___flmul@temp,w
  3250  00C2  00B2               	movwf	??___flmul
  3251  00C3  01B3               	clrf	??___flmul+1
  3252  00C4  01B4               	clrf	??___flmul+2
  3253  00C5  01B5               	clrf	??___flmul+3
  3254  00C6  0832               	movf	??___flmul,w
  3255  00C7  07B8               	addwf	___flmul@grs,f
  3256  00C8  0833               	movf	??___flmul+1,w
  3257  00C9  1103               	clrz
  3258  00CA  1803               	skipnc
  3259  00CB  3E01               	addlw	1
  3260  00CC  1903               	skipnz
  3261  00CD  28CF               	goto	u1421
  3262  00CE  07B9               	addwf	___flmul@grs+1,f
  3263  00CF                     u1421:
  3264  00CF  0834               	movf	??___flmul+2,w
  3265  00D0  1103               	clrz
  3266  00D1  1803               	skipnc
  3267  00D2  3E01               	addlw	1
  3268  00D3  1903               	skipnz
  3269  00D4  28D6               	goto	u1422
  3270  00D5  07BA               	addwf	___flmul@grs+2,f
  3271  00D6                     u1422:
  3272  00D6  0835               	movf	??___flmul+3,w
  3273  00D7  1103               	clrz
  3274  00D8  1803               	skipnc
  3275  00D9  3E01               	addlw	1
  3276  00DA  1903               	skipnz
  3277  00DB  28DD               	goto	u1423
  3278  00DC  07BB               	addwf	___flmul@grs+3,f
  3279  00DD                     u1423:
  3280  00DD                     l1574:
  3281  00DD  0843               	movf	___flmul@temp+1,w
  3282  00DE  00B2               	movwf	??___flmul
  3283  00DF  01B3               	clrf	??___flmul+1
  3284  00E0  01B4               	clrf	??___flmul+2
  3285  00E1  01B5               	clrf	??___flmul+3
  3286  00E2  0832               	movf	??___flmul,w
  3287  00E3  07BE               	addwf	___flmul@prod,f
  3288  00E4  0833               	movf	??___flmul+1,w
  3289  00E5  1103               	clrz
  3290  00E6  1803               	skipnc
  3291  00E7  3E01               	addlw	1
  3292  00E8  1903               	skipnz
  3293  00E9  28EB               	goto	u1431
  3294  00EA  07BF               	addwf	___flmul@prod+1,f
  3295  00EB                     u1431:
  3296  00EB  0834               	movf	??___flmul+2,w
  3297  00EC  1103               	clrz
  3298  00ED  1803               	skipnc
  3299  00EE  3E01               	addlw	1
  3300  00EF  1903               	skipnz
  3301  00F0  28F2               	goto	u1432
  3302  00F1  07C0               	addwf	___flmul@prod+2,f
  3303  00F2                     u1432:
  3304  00F2  0835               	movf	??___flmul+3,w
  3305  00F3  1103               	clrz
  3306  00F4  1803               	skipnc
  3307  00F5  3E01               	addlw	1
  3308  00F6  1903               	skipnz
  3309  00F7  28F9               	goto	u1433
  3310  00F8  07C1               	addwf	___flmul@prod+3,f
  3311  00F9                     u1433:
  3312  00F9  082C               	movf	___flmul@b+2,w
  3313  00FA  00B2               	movwf	??___flmul
  3314  00FB  0832               	movf	??___flmul,w
  3315  00FC  00F3               	movwf	__Umul8_16@multiplicand
  3316  00FD  082E               	movf	___flmul@a,w
  3317  00FE  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3318  0103  0874               	movf	?__Umul8_16+1,w
  3319  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0106  00C3               	movwf	___flmul@temp+1
  3322  0107  0873               	movf	?__Umul8_16,w
  3323  0108  00C2               	movwf	___flmul@temp
  3324  0109                     l1576:
  3325  0109  0842               	movf	___flmul@temp,w
  3326  010A  00B2               	movwf	??___flmul
  3327  010B  01B3               	clrf	??___flmul+1
  3328  010C  01B4               	clrf	??___flmul+2
  3329  010D  01B5               	clrf	??___flmul+3
  3330  010E  0832               	movf	??___flmul,w
  3331  010F  07B8               	addwf	___flmul@grs,f
  3332  0110  0833               	movf	??___flmul+1,w
  3333  0111  1103               	clrz
  3334  0112  1803               	skipnc
  3335  0113  3E01               	addlw	1
  3336  0114  1903               	skipnz
  3337  0115  2917               	goto	u1441
  3338  0116  07B9               	addwf	___flmul@grs+1,f
  3339  0117                     u1441:
  3340  0117  0834               	movf	??___flmul+2,w
  3341  0118  1103               	clrz
  3342  0119  1803               	skipnc
  3343  011A  3E01               	addlw	1
  3344  011B  1903               	skipnz
  3345  011C  291E               	goto	u1442
  3346  011D  07BA               	addwf	___flmul@grs+2,f
  3347  011E                     u1442:
  3348  011E  0835               	movf	??___flmul+3,w
  3349  011F  1103               	clrz
  3350  0120  1803               	skipnc
  3351  0121  3E01               	addlw	1
  3352  0122  1903               	skipnz
  3353  0123  2925               	goto	u1443
  3354  0124  07BB               	addwf	___flmul@grs+3,f
  3355  0125                     u1443:
  3356  0125                     l1578:
  3357  0125  0843               	movf	___flmul@temp+1,w
  3358  0126  00B2               	movwf	??___flmul
  3359  0127  01B3               	clrf	??___flmul+1
  3360  0128  01B4               	clrf	??___flmul+2
  3361  0129  01B5               	clrf	??___flmul+3
  3362  012A  0832               	movf	??___flmul,w
  3363  012B  07BE               	addwf	___flmul@prod,f
  3364  012C  0833               	movf	??___flmul+1,w
  3365  012D  1103               	clrz
  3366  012E  1803               	skipnc
  3367  012F  3E01               	addlw	1
  3368  0130  1903               	skipnz
  3369  0131  2933               	goto	u1451
  3370  0132  07BF               	addwf	___flmul@prod+1,f
  3371  0133                     u1451:
  3372  0133  0834               	movf	??___flmul+2,w
  3373  0134  1103               	clrz
  3374  0135  1803               	skipnc
  3375  0136  3E01               	addlw	1
  3376  0137  1903               	skipnz
  3377  0138  293A               	goto	u1452
  3378  0139  07C0               	addwf	___flmul@prod+2,f
  3379  013A                     u1452:
  3380  013A  0835               	movf	??___flmul+3,w
  3381  013B  1103               	clrz
  3382  013C  1803               	skipnc
  3383  013D  3E01               	addlw	1
  3384  013E  1903               	skipnz
  3385  013F  2941               	goto	u1453
  3386  0140  07C1               	addwf	___flmul@prod+3,f
  3387  0141                     u1453:
  3388  0141                     l1580:
  3389  0141  3008               	movlw	8
  3390  0142  00B2               	movwf	??___flmul
  3391  0143                     u1465:
  3392  0143  1003               	clrc
  3393  0144  0DB8               	rlf	___flmul@grs,f
  3394  0145  0DB9               	rlf	___flmul@grs+1,f
  3395  0146  0DBA               	rlf	___flmul@grs+2,f
  3396  0147  0DBB               	rlf	___flmul@grs+3,f
  3397  0148  0BB2               	decfsz	??___flmul,f
  3398  0149  2943               	goto	u1465
  3399  014A                     l1582:
  3400  014A  082B               	movf	___flmul@b+1,w
  3401  014B  00B2               	movwf	??___flmul
  3402  014C  0832               	movf	??___flmul,w
  3403  014D  00F3               	movwf	__Umul8_16@multiplicand
  3404  014E  082E               	movf	___flmul@a,w
  3405  014F  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3406  0154  0874               	movf	?__Umul8_16+1,w
  3407  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0157  00C3               	movwf	___flmul@temp+1
  3410  0158  0873               	movf	?__Umul8_16,w
  3411  0159  00C2               	movwf	___flmul@temp
  3412  015A                     l1584:
  3413  015A  0842               	movf	___flmul@temp,w
  3414  015B  00B2               	movwf	??___flmul
  3415  015C  0843               	movf	___flmul@temp+1,w
  3416  015D  00B3               	movwf	??___flmul+1
  3417  015E  01B4               	clrf	??___flmul+2
  3418  015F  01B5               	clrf	??___flmul+3
  3419  0160  0832               	movf	??___flmul,w
  3420  0161  07B8               	addwf	___flmul@grs,f
  3421  0162  0833               	movf	??___flmul+1,w
  3422  0163  1103               	clrz
  3423  0164  1803               	skipnc
  3424  0165  3E01               	addlw	1
  3425  0166  1903               	skipnz
  3426  0167  2969               	goto	u1471
  3427  0168  07B9               	addwf	___flmul@grs+1,f
  3428  0169                     u1471:
  3429  0169  0834               	movf	??___flmul+2,w
  3430  016A  1103               	clrz
  3431  016B  1803               	skipnc
  3432  016C  3E01               	addlw	1
  3433  016D  1903               	skipnz
  3434  016E  2970               	goto	u1472
  3435  016F  07BA               	addwf	___flmul@grs+2,f
  3436  0170                     u1472:
  3437  0170  0835               	movf	??___flmul+3,w
  3438  0171  1103               	clrz
  3439  0172  1803               	skipnc
  3440  0173  3E01               	addlw	1
  3441  0174  1903               	skipnz
  3442  0175  2977               	goto	u1473
  3443  0176  07BB               	addwf	___flmul@grs+3,f
  3444  0177                     u1473:
  3445  0177                     l1586:
  3446  0177  082A               	movf	___flmul@b,w
  3447  0178  00B2               	movwf	??___flmul
  3448  0179  0832               	movf	??___flmul,w
  3449  017A  00F3               	movwf	__Umul8_16@multiplicand
  3450  017B  082F               	movf	___flmul@a+1,w
  3451  017C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3452  0181  0874               	movf	?__Umul8_16+1,w
  3453  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0184  00C3               	movwf	___flmul@temp+1
  3456  0185  0873               	movf	?__Umul8_16,w
  3457  0186  00C2               	movwf	___flmul@temp
  3458  0187                     l1588:
  3459  0187  0842               	movf	___flmul@temp,w
  3460  0188  00B2               	movwf	??___flmul
  3461  0189  0843               	movf	___flmul@temp+1,w
  3462  018A  00B3               	movwf	??___flmul+1
  3463  018B  01B4               	clrf	??___flmul+2
  3464  018C  01B5               	clrf	??___flmul+3
  3465  018D  0832               	movf	??___flmul,w
  3466  018E  07B8               	addwf	___flmul@grs,f
  3467  018F  0833               	movf	??___flmul+1,w
  3468  0190  1103               	clrz
  3469  0191  1803               	skipnc
  3470  0192  3E01               	addlw	1
  3471  0193  1903               	skipnz
  3472  0194  2996               	goto	u1481
  3473  0195  07B9               	addwf	___flmul@grs+1,f
  3474  0196                     u1481:
  3475  0196  0834               	movf	??___flmul+2,w
  3476  0197  1103               	clrz
  3477  0198  1803               	skipnc
  3478  0199  3E01               	addlw	1
  3479  019A  1903               	skipnz
  3480  019B  299D               	goto	u1482
  3481  019C  07BA               	addwf	___flmul@grs+2,f
  3482  019D                     u1482:
  3483  019D  0835               	movf	??___flmul+3,w
  3484  019E  1103               	clrz
  3485  019F  1803               	skipnc
  3486  01A0  3E01               	addlw	1
  3487  01A1  1903               	skipnz
  3488  01A2  29A4               	goto	u1483
  3489  01A3  07BB               	addwf	___flmul@grs+3,f
  3490  01A4                     u1483:
  3491  01A4                     l1590:
  3492  01A4  3008               	movlw	8
  3493  01A5  00B2               	movwf	??___flmul
  3494  01A6                     u1495:
  3495  01A6  1003               	clrc
  3496  01A7  0DB8               	rlf	___flmul@grs,f
  3497  01A8  0DB9               	rlf	___flmul@grs+1,f
  3498  01A9  0DBA               	rlf	___flmul@grs+2,f
  3499  01AA  0DBB               	rlf	___flmul@grs+3,f
  3500  01AB  0BB2               	decfsz	??___flmul,f
  3501  01AC  29A6               	goto	u1495
  3502  01AD  082A               	movf	___flmul@b,w
  3503  01AE  00B2               	movwf	??___flmul
  3504  01AF  0832               	movf	??___flmul,w
  3505  01B0  00F3               	movwf	__Umul8_16@multiplicand
  3506  01B1  082E               	movf	___flmul@a,w
  3507  01B2  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3508  01B7  0874               	movf	?__Umul8_16+1,w
  3509  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3510  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3511  01BA  00C3               	movwf	___flmul@temp+1
  3512  01BB  0873               	movf	?__Umul8_16,w
  3513  01BC  00C2               	movwf	___flmul@temp
  3514  01BD                     l1592:
  3515  01BD  0842               	movf	___flmul@temp,w
  3516  01BE  00B2               	movwf	??___flmul
  3517  01BF  0843               	movf	___flmul@temp+1,w
  3518  01C0  00B3               	movwf	??___flmul+1
  3519  01C1  01B4               	clrf	??___flmul+2
  3520  01C2  01B5               	clrf	??___flmul+3
  3521  01C3  0832               	movf	??___flmul,w
  3522  01C4  07B8               	addwf	___flmul@grs,f
  3523  01C5  0833               	movf	??___flmul+1,w
  3524  01C6  1103               	clrz
  3525  01C7  1803               	skipnc
  3526  01C8  3E01               	addlw	1
  3527  01C9  1903               	skipnz
  3528  01CA  29CC               	goto	u1501
  3529  01CB  07B9               	addwf	___flmul@grs+1,f
  3530  01CC                     u1501:
  3531  01CC  0834               	movf	??___flmul+2,w
  3532  01CD  1103               	clrz
  3533  01CE  1803               	skipnc
  3534  01CF  3E01               	addlw	1
  3535  01D0  1903               	skipnz
  3536  01D1  29D3               	goto	u1502
  3537  01D2  07BA               	addwf	___flmul@grs+2,f
  3538  01D3                     u1502:
  3539  01D3  0835               	movf	??___flmul+3,w
  3540  01D4  1103               	clrz
  3541  01D5  1803               	skipnc
  3542  01D6  3E01               	addlw	1
  3543  01D7  1903               	skipnz
  3544  01D8  29DA               	goto	u1503
  3545  01D9  07BB               	addwf	___flmul@grs+3,f
  3546  01DA                     u1503:
  3547  01DA                     l1594:
  3548  01DA  082B               	movf	___flmul@b+1,w
  3549  01DB  00B2               	movwf	??___flmul
  3550  01DC  0832               	movf	??___flmul,w
  3551  01DD  00F3               	movwf	__Umul8_16@multiplicand
  3552  01DE  0830               	movf	___flmul@a+2,w
  3553  01DF  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3554  01E4  0874               	movf	?__Umul8_16+1,w
  3555  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3556  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3557  01E7  00C3               	movwf	___flmul@temp+1
  3558  01E8  0873               	movf	?__Umul8_16,w
  3559  01E9  00C2               	movwf	___flmul@temp
  3560  01EA  0842               	movf	___flmul@temp,w
  3561  01EB  00B2               	movwf	??___flmul
  3562  01EC  0843               	movf	___flmul@temp+1,w
  3563  01ED  00B3               	movwf	??___flmul+1
  3564  01EE  01B4               	clrf	??___flmul+2
  3565  01EF  01B5               	clrf	??___flmul+3
  3566  01F0  0832               	movf	??___flmul,w
  3567  01F1  07BE               	addwf	___flmul@prod,f
  3568  01F2  0833               	movf	??___flmul+1,w
  3569  01F3  1103               	clrz
  3570  01F4  1803               	skipnc
  3571  01F5  3E01               	addlw	1
  3572  01F6  1903               	skipnz
  3573  01F7  29F9               	goto	u1511
  3574  01F8  07BF               	addwf	___flmul@prod+1,f
  3575  01F9                     u1511:
  3576  01F9  0834               	movf	??___flmul+2,w
  3577  01FA  1103               	clrz
  3578  01FB  1803               	skipnc
  3579  01FC  3E01               	addlw	1
  3580  01FD  1903               	skipnz
  3581  01FE  2A00               	goto	u1512
  3582  01FF  07C0               	addwf	___flmul@prod+2,f
  3583  0200                     u1512:
  3584  0200  0835               	movf	??___flmul+3,w
  3585  0201  1103               	clrz
  3586  0202  1803               	skipnc
  3587  0203  3E01               	addlw	1
  3588  0204  1903               	skipnz
  3589  0205  2A07               	goto	u1513
  3590  0206  07C1               	addwf	___flmul@prod+3,f
  3591  0207                     u1513:
  3592  0207                     l1596:
  3593  0207  082C               	movf	___flmul@b+2,w
  3594  0208  00B2               	movwf	??___flmul
  3595  0209  0832               	movf	??___flmul,w
  3596  020A  00F3               	movwf	__Umul8_16@multiplicand
  3597  020B  082F               	movf	___flmul@a+1,w
  3598  020C  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3599  0211  0874               	movf	?__Umul8_16+1,w
  3600  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0214  00C3               	movwf	___flmul@temp+1
  3603  0215  0873               	movf	?__Umul8_16,w
  3604  0216  00C2               	movwf	___flmul@temp
  3605  0217                     l1598:
  3606  0217  0842               	movf	___flmul@temp,w
  3607  0218  00B2               	movwf	??___flmul
  3608  0219  0843               	movf	___flmul@temp+1,w
  3609  021A  00B3               	movwf	??___flmul+1
  3610  021B  01B4               	clrf	??___flmul+2
  3611  021C  01B5               	clrf	??___flmul+3
  3612  021D  0832               	movf	??___flmul,w
  3613  021E  07BE               	addwf	___flmul@prod,f
  3614  021F  0833               	movf	??___flmul+1,w
  3615  0220  1103               	clrz
  3616  0221  1803               	skipnc
  3617  0222  3E01               	addlw	1
  3618  0223  1903               	skipnz
  3619  0224  2A26               	goto	u1521
  3620  0225  07BF               	addwf	___flmul@prod+1,f
  3621  0226                     u1521:
  3622  0226  0834               	movf	??___flmul+2,w
  3623  0227  1103               	clrz
  3624  0228  1803               	skipnc
  3625  0229  3E01               	addlw	1
  3626  022A  1903               	skipnz
  3627  022B  2A2D               	goto	u1522
  3628  022C  07C0               	addwf	___flmul@prod+2,f
  3629  022D                     u1522:
  3630  022D  0835               	movf	??___flmul+3,w
  3631  022E  1103               	clrz
  3632  022F  1803               	skipnc
  3633  0230  3E01               	addlw	1
  3634  0231  1903               	skipnz
  3635  0232  2A34               	goto	u1523
  3636  0233  07C1               	addwf	___flmul@prod+3,f
  3637  0234                     u1523:
  3638  0234  082C               	movf	___flmul@b+2,w
  3639  0235  00B2               	movwf	??___flmul
  3640  0236  0832               	movf	??___flmul,w
  3641  0237  00F3               	movwf	__Umul8_16@multiplicand
  3642  0238  0830               	movf	___flmul@a+2,w
  3643  0239  120A  158A  2715  120A  118A  	fcall	__Umul8_16
  3644  023E  0874               	movf	?__Umul8_16+1,w
  3645  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0241  00C3               	movwf	___flmul@temp+1
  3648  0242  0873               	movf	?__Umul8_16,w
  3649  0243  00C2               	movwf	___flmul@temp
  3650  0244                     l1600:
  3651  0244  0842               	movf	___flmul@temp,w
  3652  0245  00B2               	movwf	??___flmul
  3653  0246  0843               	movf	___flmul@temp+1,w
  3654  0247  00B3               	movwf	??___flmul+1
  3655  0248  01B4               	clrf	??___flmul+2
  3656  0249  01B5               	clrf	??___flmul+3
  3657  024A  3008               	movlw	8
  3658  024B                     u1535:
  3659  024B  1003               	clrc
  3660  024C  0DB2               	rlf	??___flmul,f
  3661  024D  0DB3               	rlf	??___flmul+1,f
  3662  024E  0DB4               	rlf	??___flmul+2,f
  3663  024F  0DB5               	rlf	??___flmul+3,f
  3664  0250                     u1530:
  3665  0250  3EFF               	addlw	-1
  3666  0251  1D03               	skipz
  3667  0252  2A4B               	goto	u1535
  3668  0253  0832               	movf	??___flmul,w
  3669  0254  07BE               	addwf	___flmul@prod,f
  3670  0255  0833               	movf	??___flmul+1,w
  3671  0256  1103               	clrz
  3672  0257  1803               	skipnc
  3673  0258  3E01               	addlw	1
  3674  0259  1903               	skipnz
  3675  025A  2A5C               	goto	u1541
  3676  025B  07BF               	addwf	___flmul@prod+1,f
  3677  025C                     u1541:
  3678  025C  0834               	movf	??___flmul+2,w
  3679  025D  1103               	clrz
  3680  025E  1803               	skipnc
  3681  025F  3E01               	addlw	1
  3682  0260  1903               	skipnz
  3683  0261  2A63               	goto	u1542
  3684  0262  07C0               	addwf	___flmul@prod+2,f
  3685  0263                     u1542:
  3686  0263  0835               	movf	??___flmul+3,w
  3687  0264  1103               	clrz
  3688  0265  1803               	skipnc
  3689  0266  3E01               	addlw	1
  3690  0267  1903               	skipnz
  3691  0268  2A6A               	goto	u1543
  3692  0269  07C1               	addwf	___flmul@prod+3,f
  3693  026A                     u1543:
  3694  026A                     l1602:
  3695  026A  0838               	movf	___flmul@grs,w
  3696  026B  00B2               	movwf	??___flmul
  3697  026C  0839               	movf	___flmul@grs+1,w
  3698  026D  00B3               	movwf	??___flmul+1
  3699  026E  083A               	movf	___flmul@grs+2,w
  3700  026F  00B4               	movwf	??___flmul+2
  3701  0270  083B               	movf	___flmul@grs+3,w
  3702  0271  00B5               	movwf	??___flmul+3
  3703  0272  3018               	movlw	24
  3704  0273                     u1555:
  3705  0273  1003               	clrc
  3706  0274  0CB5               	rrf	??___flmul+3,f
  3707  0275  0CB4               	rrf	??___flmul+2,f
  3708  0276  0CB3               	rrf	??___flmul+1,f
  3709  0277  0CB2               	rrf	??___flmul,f
  3710  0278                     u1550:
  3711  0278  3EFF               	addlw	-1
  3712  0279  1D03               	skipz
  3713  027A  2A73               	goto	u1555
  3714  027B  0832               	movf	??___flmul,w
  3715  027C  07BE               	addwf	___flmul@prod,f
  3716  027D  0833               	movf	??___flmul+1,w
  3717  027E  1103               	clrz
  3718  027F  1803               	skipnc
  3719  0280  3E01               	addlw	1
  3720  0281  1903               	skipnz
  3721  0282  2A84               	goto	u1561
  3722  0283  07BF               	addwf	___flmul@prod+1,f
  3723  0284                     u1561:
  3724  0284  0834               	movf	??___flmul+2,w
  3725  0285  1103               	clrz
  3726  0286  1803               	skipnc
  3727  0287  3E01               	addlw	1
  3728  0288  1903               	skipnz
  3729  0289  2A8B               	goto	u1562
  3730  028A  07C0               	addwf	___flmul@prod+2,f
  3731  028B                     u1562:
  3732  028B  0835               	movf	??___flmul+3,w
  3733  028C  1103               	clrz
  3734  028D  1803               	skipnc
  3735  028E  3E01               	addlw	1
  3736  028F  1903               	skipnz
  3737  0290  2A92               	goto	u1563
  3738  0291  07C1               	addwf	___flmul@prod+3,f
  3739  0292                     u1563:
  3740  0292                     l1604:
  3741  0292  3008               	movlw	8
  3742  0293  00B2               	movwf	??___flmul
  3743  0294                     u1575:
  3744  0294  1003               	clrc
  3745  0295  0DB8               	rlf	___flmul@grs,f
  3746  0296  0DB9               	rlf	___flmul@grs+1,f
  3747  0297  0DBA               	rlf	___flmul@grs+2,f
  3748  0298  0DBB               	rlf	___flmul@grs+3,f
  3749  0299  0BB2               	decfsz	??___flmul,f
  3750  029A  2A94               	goto	u1575
  3751  029B                     l1606:
  3752  029B  083D               	movf	___flmul@bexp,w
  3753  029C  073C               	addwf	___flmul@aexp,w
  3754  029D  00B2               	movwf	??___flmul
  3755  029E  01B3               	clrf	??___flmul+1
  3756  029F  0DB3               	rlf	??___flmul+1,f
  3757  02A0  0832               	movf	??___flmul,w
  3758  02A1  3E82               	addlw	130
  3759  02A2  00C2               	movwf	___flmul@temp
  3760  02A3  0833               	movf	??___flmul+1,w
  3761  02A4  1803               	skipnc
  3762  02A5  3E01               	addlw	1
  3763  02A6  3EFF               	addlw	255
  3764  02A7  00C3               	movwf	___flmul@temp+1
  3765  02A8  2AC6               	goto	l1618
  3766  02A9                     l1608:
  3767  02A9  3001               	movlw	1
  3768  02AA  00B2               	movwf	??___flmul
  3769  02AB                     u1585:
  3770  02AB  1003               	clrc
  3771  02AC  0DBE               	rlf	___flmul@prod,f
  3772  02AD  0DBF               	rlf	___flmul@prod+1,f
  3773  02AE  0DC0               	rlf	___flmul@prod+2,f
  3774  02AF  0DC1               	rlf	___flmul@prod+3,f
  3775  02B0  0BB2               	decfsz	??___flmul,f
  3776  02B1  2AAB               	goto	u1585
  3777  02B2                     l1610:
  3778  02B2  1FBB               	btfss	___flmul@grs+3,7
  3779  02B3  2AB5               	goto	u1591
  3780  02B4  2AB6               	goto	u1590
  3781  02B5                     u1591:
  3782  02B5  2AB7               	goto	l1614
  3783  02B6                     u1590:
  3784  02B6                     l1612:
  3785  02B6  143E               	bsf	___flmul@prod,0
  3786  02B7                     l1614:
  3787  02B7  3001               	movlw	1
  3788  02B8  00B2               	movwf	??___flmul
  3789  02B9                     u1605:
  3790  02B9  1003               	clrc
  3791  02BA  0DB8               	rlf	___flmul@grs,f
  3792  02BB  0DB9               	rlf	___flmul@grs+1,f
  3793  02BC  0DBA               	rlf	___flmul@grs+2,f
  3794  02BD  0DBB               	rlf	___flmul@grs+3,f
  3795  02BE  0BB2               	decfsz	??___flmul,f
  3796  02BF  2AB9               	goto	u1605
  3797  02C0                     l1616:
  3798  02C0  30FF               	movlw	255
  3799  02C1  07C2               	addwf	___flmul@temp,f
  3800  02C2  1803               	skipnc
  3801  02C3  0AC3               	incf	___flmul@temp+1,f
  3802  02C4  30FF               	movlw	255
  3803  02C5  07C3               	addwf	___flmul@temp+1,f
  3804  02C6                     l1618:
  3805  02C6  1FC0               	btfss	___flmul@prod+2,7
  3806  02C7  2AC9               	goto	u1611
  3807  02C8  2ACA               	goto	u1610
  3808  02C9                     u1611:
  3809  02C9  2AA9               	goto	l1608
  3810  02CA                     u1610:
  3811  02CA                     l1620:
  3812  02CA  01BC               	clrf	___flmul@aexp
  3813  02CB                     l1622:
  3814  02CB  1FBB               	btfss	___flmul@grs+3,7
  3815  02CC  2ACE               	goto	u1621
  3816  02CD  2ACF               	goto	u1620
  3817  02CE                     u1621:
  3818  02CE  2AEB               	goto	l1630
  3819  02CF                     u1620:
  3820  02CF                     l1624:
  3821  02CF  30FF               	movlw	255
  3822  02D0  0538               	andwf	___flmul@grs,w
  3823  02D1  00B2               	movwf	??___flmul
  3824  02D2  30FF               	movlw	255
  3825  02D3  0539               	andwf	___flmul@grs+1,w
  3826  02D4  00B3               	movwf	??___flmul+1
  3827  02D5  30FF               	movlw	255
  3828  02D6  053A               	andwf	___flmul@grs+2,w
  3829  02D7  00B4               	movwf	??___flmul+2
  3830  02D8  307F               	movlw	127
  3831  02D9  053B               	andwf	___flmul@grs+3,w
  3832  02DA  00B5               	movwf	??___flmul+3
  3833  02DB  0835               	movf	??___flmul+3,w
  3834  02DC  0434               	iorwf	??___flmul+2,w
  3835  02DD  0433               	iorwf	??___flmul+1,w
  3836  02DE  0432               	iorwf	??___flmul,w
  3837  02DF  1903               	skipnz
  3838  02E0  2AE2               	goto	u1631
  3839  02E1  2AE3               	goto	u1630
  3840  02E2                     u1631:
  3841  02E2  2AE6               	goto	l697
  3842  02E3                     u1630:
  3843  02E3                     l1626:
  3844  02E3  01BC               	clrf	___flmul@aexp
  3845  02E4  0ABC               	incf	___flmul@aexp,f
  3846  02E5  2AEB               	goto	l1630
  3847  02E6                     l697:
  3848  02E6  1C3E               	btfss	___flmul@prod,0
  3849  02E7  2AE9               	goto	u1641
  3850  02E8  2AEA               	goto	u1640
  3851  02E9                     u1641:
  3852  02E9  2AEB               	goto	l1630
  3853  02EA                     u1640:
  3854  02EA  2AE3               	goto	l1626
  3855  02EB                     l1630:
  3856  02EB  083C               	movf	___flmul@aexp,w
  3857  02EC  1903               	btfsc	3,2
  3858  02ED  2AEF               	goto	u1651
  3859  02EE  2AF0               	goto	u1650
  3860  02EF                     u1651:
  3861  02EF  2B21               	goto	l1640
  3862  02F0                     u1650:
  3863  02F0                     l1632:
  3864  02F0  3001               	movlw	1
  3865  02F1  07BE               	addwf	___flmul@prod,f
  3866  02F2  3000               	movlw	0
  3867  02F3  1803               	skipnc
  3868  02F4  3001               	movlw	1
  3869  02F5  07BF               	addwf	___flmul@prod+1,f
  3870  02F6  3000               	movlw	0
  3871  02F7  1803               	skipnc
  3872  02F8  3001               	movlw	1
  3873  02F9  07C0               	addwf	___flmul@prod+2,f
  3874  02FA  3000               	movlw	0
  3875  02FB  1803               	skipnc
  3876  02FC  3001               	movlw	1
  3877  02FD  07C1               	addwf	___flmul@prod+3,f
  3878  02FE                     l1634:
  3879  02FE  1C41               	btfss	___flmul@prod+3,0
  3880  02FF  2B01               	goto	u1661
  3881  0300  2B02               	goto	u1660
  3882  0301                     u1661:
  3883  0301  2B21               	goto	l1640
  3884  0302                     u1660:
  3885  0302                     l1636:
  3886  0302  083E               	movf	___flmul@prod,w
  3887  0303  00B2               	movwf	??___flmul
  3888  0304  083F               	movf	___flmul@prod+1,w
  3889  0305  00B3               	movwf	??___flmul+1
  3890  0306  0840               	movf	___flmul@prod+2,w
  3891  0307  00B4               	movwf	??___flmul+2
  3892  0308  0841               	movf	___flmul@prod+3,w
  3893  0309  00B5               	movwf	??___flmul+3
  3894  030A  3001               	movlw	1
  3895  030B  00B6               	movwf	??___flmul+4
  3896  030C                     u1675:
  3897  030C  0D35               	rlf	??___flmul+3,w
  3898  030D  0CB5               	rrf	??___flmul+3,f
  3899  030E  0CB4               	rrf	??___flmul+2,f
  3900  030F  0CB3               	rrf	??___flmul+1,f
  3901  0310  0CB2               	rrf	??___flmul,f
  3902  0311                     u1670:
  3903  0311  0BB6               	decfsz	??___flmul+4,f
  3904  0312  2B0C               	goto	u1675
  3905  0313  0835               	movf	??___flmul+3,w
  3906  0314  00C1               	movwf	___flmul@prod+3
  3907  0315  0834               	movf	??___flmul+2,w
  3908  0316  00C0               	movwf	___flmul@prod+2
  3909  0317  0833               	movf	??___flmul+1,w
  3910  0318  00BF               	movwf	___flmul@prod+1
  3911  0319  0832               	movf	??___flmul,w
  3912  031A  00BE               	movwf	___flmul@prod
  3913  031B                     l1638:
  3914  031B  3001               	movlw	1
  3915  031C  07C2               	addwf	___flmul@temp,f
  3916  031D  1803               	skipnc
  3917  031E  0AC3               	incf	___flmul@temp+1,f
  3918  031F  3000               	movlw	0
  3919  0320  07C3               	addwf	___flmul@temp+1,f
  3920  0321                     l1640:
  3921  0321  0843               	movf	___flmul@temp+1,w
  3922  0322  3A80               	xorlw	128
  3923  0323  00FF               	movwf	btemp+1
  3924  0324  3080               	movlw	128
  3925  0325  027F               	subwf	btemp+1,w
  3926  0326  1D03               	skipz
  3927  0327  2B2A               	goto	u1685
  3928  0328  30FF               	movlw	255
  3929  0329  0242               	subwf	___flmul@temp,w
  3930  032A                     u1685:
  3931  032A  1C03               	skipc
  3932  032B  2B2D               	goto	u1681
  3933  032C  2B2E               	goto	u1680
  3934  032D                     u1681:
  3935  032D  2B39               	goto	l1644
  3936  032E                     u1680:
  3937  032E                     l1642:
  3938  032E  307F               	movlw	127
  3939  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0331  00C1               	movwf	___flmul@prod+3
  3942  0332  3080               	movlw	128
  3943  0333  00C0               	movwf	___flmul@prod+2
  3944  0334  3000               	movlw	0
  3945  0335  00BF               	movwf	___flmul@prod+1
  3946  0336  3000               	movlw	0
  3947  0337  00BE               	movwf	___flmul@prod
  3948  0338  2B6E               	goto	l703
  3949  0339                     l1644:
  3950  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3951  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3952  033B  0843               	movf	___flmul@temp+1,w
  3953  033C  3A80               	xorlw	128
  3954  033D  00FF               	movwf	btemp+1
  3955  033E  3080               	movlw	128
  3956  033F  027F               	subwf	btemp+1,w
  3957  0340  1D03               	skipz
  3958  0341  2B44               	goto	u1695
  3959  0342  3001               	movlw	1
  3960  0343  0242               	subwf	___flmul@temp,w
  3961  0344                     u1695:
  3962  0344  1803               	skipnc
  3963  0345  2B47               	goto	u1691
  3964  0346  2B48               	goto	u1690
  3965  0347                     u1691:
  3966  0347  2B54               	goto	l1650
  3967  0348                     u1690:
  3968  0348                     l1646:
  3969  0348  3000               	movlw	0
  3970  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3971  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3972  034B  00C1               	movwf	___flmul@prod+3
  3973  034C  3000               	movlw	0
  3974  034D  00C0               	movwf	___flmul@prod+2
  3975  034E  3000               	movlw	0
  3976  034F  00BF               	movwf	___flmul@prod+1
  3977  0350  3000               	movlw	0
  3978  0351  00BE               	movwf	___flmul@prod
  3979  0352                     l1648:
  3980  0352  01B7               	clrf	___flmul@sign
  3981  0353  2B6E               	goto	l703
  3982  0354                     l1650:
  3983  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0356  0842               	movf	___flmul@temp,w
  3986  0357  00B2               	movwf	??___flmul
  3987  0358  0832               	movf	??___flmul,w
  3988  0359  00BD               	movwf	___flmul@bexp
  3989  035A  30FF               	movlw	255
  3990  035B  05BE               	andwf	___flmul@prod,f
  3991  035C  30FF               	movlw	255
  3992  035D  05BF               	andwf	___flmul@prod+1,f
  3993  035E  307F               	movlw	127
  3994  035F  05C0               	andwf	___flmul@prod+2,f
  3995  0360  3000               	movlw	0
  3996  0361  05C1               	andwf	___flmul@prod+3,f
  3997  0362                     l1652:
  3998  0362  1C3D               	btfss	___flmul@bexp,0
  3999  0363  2B65               	goto	u1701
  4000  0364  2B66               	goto	u1700
  4001  0365                     u1701:
  4002  0365  2B67               	goto	l1656
  4003  0366                     u1700:
  4004  0366                     l1654:
  4005  0366  17C0               	bsf	___flmul@prod+2,7
  4006  0367                     l1656:
  4007  0367  083D               	movf	___flmul@bexp,w
  4008  0368  00B2               	movwf	??___flmul
  4009  0369  1003               	clrc
  4010  036A  0C32               	rrf	??___flmul,w
  4011  036B  00B3               	movwf	??___flmul+1
  4012  036C  0833               	movf	??___flmul+1,w
  4013  036D  00C1               	movwf	___flmul@prod+3
  4014  036E                     l703:
  4015  036E  0837               	movf	___flmul@sign,w
  4016  036F  00B2               	movwf	??___flmul
  4017  0370  0832               	movf	??___flmul,w
  4018  0371  04C1               	iorwf	___flmul@prod+3,f
  4019  0372                     l1658:
  4020  0372  0841               	movf	___flmul@prod+3,w
  4021  0373  00AD               	movwf	?___flmul+3
  4022  0374  0840               	movf	___flmul@prod+2,w
  4023  0375  00AC               	movwf	?___flmul+2
  4024  0376  083F               	movf	___flmul@prod+1,w
  4025  0377  00AB               	movwf	?___flmul+1
  4026  0378  083E               	movf	___flmul@prod,w
  4027  0379  00AA               	movwf	?___flmul
  4028  037A                     l691:
  4029  037A  0008               	return
  4030  037B                     __end_of___flmul:
  4031                           
  4032                           	psect	text12
  4033  0F15                     __ptext12:	
  4034 ;; *************** function __Umul8_16 *****************
  4035 ;; Defined at:
  4036 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  multiplier      1    wreg     unsigned char 
  4039 ;;  multiplicand    1    3[COMMON] unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  multiplier      1    4[BANK0 ] unsigned char 
  4042 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  4043 ;;  product         2    0[BANK0 ] unsigned int 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2    3[COMMON] unsigned int 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4053 ;;      Params:         2       0       0       0       0
  4054 ;;      Locals:         0       5       0       0       0
  4055 ;;      Temps:          2       0       0       0       0
  4056 ;;      Totals:         4       5       0       0       0
  4057 ;;Total ram usage:        9 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    2
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		___flmul
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function __Umul8_16
  4069  0F15                     __Umul8_16:
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4073                           ;__Umul8_16@multiplier stored from wreg
  4074  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0F17  00A4               	movwf	__Umul8_16@multiplier
  4077  0F18                     l1396:
  4078  0F18  01A0               	clrf	__Umul8_16@product
  4079  0F19  01A1               	clrf	__Umul8_16@product+1
  4080  0F1A                     l1398:
  4081  0F1A  0873               	movf	__Umul8_16@multiplicand,w
  4082  0F1B  00F5               	movwf	??__Umul8_16
  4083  0F1C  01F6               	clrf	??__Umul8_16+1
  4084  0F1D  0875               	movf	??__Umul8_16,w
  4085  0F1E  00A2               	movwf	__Umul8_16@word_mpld
  4086  0F1F  0876               	movf	??__Umul8_16+1,w
  4087  0F20  00A3               	movwf	__Umul8_16@word_mpld+1
  4088  0F21                     l1400:
  4089  0F21  1C24               	btfss	__Umul8_16@multiplier,0
  4090  0F22  2F24               	goto	u1041
  4091  0F23  2F25               	goto	u1040
  4092  0F24                     u1041:
  4093  0F24  2F2B               	goto	l710
  4094  0F25                     u1040:
  4095  0F25                     l1402:
  4096  0F25  0822               	movf	__Umul8_16@word_mpld,w
  4097  0F26  07A0               	addwf	__Umul8_16@product,f
  4098  0F27  1803               	skipnc
  4099  0F28  0AA1               	incf	__Umul8_16@product+1,f
  4100  0F29  0823               	movf	__Umul8_16@word_mpld+1,w
  4101  0F2A  07A1               	addwf	__Umul8_16@product+1,f
  4102  0F2B                     l710:
  4103  0F2B  3001               	movlw	1
  4104  0F2C                     u1055:
  4105  0F2C  1003               	clrc
  4106  0F2D  0DA2               	rlf	__Umul8_16@word_mpld,f
  4107  0F2E  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  4108  0F2F  3EFF               	addlw	-1
  4109  0F30  1D03               	skipz
  4110  0F31  2F2C               	goto	u1055
  4111  0F32  1003               	clrc
  4112  0F33  0CA4               	rrf	__Umul8_16@multiplier,f
  4113  0F34                     l1404:
  4114  0F34  0824               	movf	__Umul8_16@multiplier,w
  4115  0F35  1D03               	btfss	3,2
  4116  0F36  2F38               	goto	u1061
  4117  0F37  2F39               	goto	u1060
  4118  0F38                     u1061:
  4119  0F38  2F21               	goto	l1400
  4120  0F39                     u1060:
  4121  0F39                     l1406:
  4122  0F39  0821               	movf	__Umul8_16@product+1,w
  4123  0F3A  00F4               	movwf	?__Umul8_16+1
  4124  0F3B  0820               	movf	__Umul8_16@product,w
  4125  0F3C  00F3               	movwf	?__Umul8_16
  4126  0F3D                     l712:
  4127  0F3D  0008               	return
  4128  0F3E                     __end_of__Umul8_16:
  4129                           
  4130                           	psect	text13
  4131  0E8D                     __ptext13:	
  4132 ;; *************** function _SendString *****************
  4133 ;; Defined at:
  4134 ;;		line 23 in file "EUSART.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  X               1    wreg     PTR unsigned char 
  4137 ;;		 -> STR_13(2), STR_11(2), STR_9(2), STR_7(2), 
  4138 ;;		 -> STR_5(2), STR_4(6), STR_3(6), STR_2(5), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  X               1    5[COMMON] PTR unsigned char 
  4141 ;;		 -> STR_13(2), STR_11(2), STR_9(2), STR_7(2), 
  4142 ;;		 -> STR_5(2), STR_4(6), STR_3(6), STR_2(5), 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0
  4154 ;;      Temps:          1       0       0       0       0
  4155 ;;      Totals:         2       0       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		_SendChar
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;;		_WriteNumber
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _SendString
  4169  0E8D                     _SendString:
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _SendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4173                           ;SendString@X stored from wreg
  4174  0E8D  00F5               	movwf	SendString@X
  4175  0E8E                     l1426:
  4176                           
  4177                           ;EUSART.c: 24:     while (*X)
  4178  0E8E  2E9F               	goto	l1432
  4179  0E8F                     l1428:
  4180                           
  4181                           ;EUSART.c: 25:         SendChar(*X++);
  4182  0E8F  0875               	movf	SendString@X,w
  4183  0E90  0084               	movwf	4
  4184  0E91  120A  158A  2000  120A  158A  	fcall	stringdir
  4185  0E96  120A  158A  25E1  120A  158A  	fcall	_SendChar
  4186  0E9B                     l1430:
  4187  0E9B  3001               	movlw	1
  4188  0E9C  00F4               	movwf	??_SendString
  4189  0E9D  0874               	movf	??_SendString,w
  4190  0E9E  07F5               	addwf	SendString@X,f
  4191  0E9F                     l1432:
  4192                           
  4193                           ;EUSART.c: 24:     while (*X)
  4194  0E9F  0875               	movf	SendString@X,w
  4195  0EA0  0084               	movwf	4
  4196  0EA1  120A  158A  2000  120A  158A  	fcall	stringdir
  4197  0EA6  3A00               	xorlw	0
  4198  0EA7  1D03               	skipz
  4199  0EA8  2EAA               	goto	u1101
  4200  0EA9  2EAB               	goto	u1100
  4201  0EAA                     u1101:
  4202  0EAA  2E8F               	goto	l1428
  4203  0EAB                     u1100:
  4204  0EAB                     l175:
  4205  0EAB  0008               	return
  4206  0EAC                     __end_of_SendString:
  4207                           
  4208                           	psect	text14
  4209  0DE1                     __ptext14:	
  4210 ;; *************** function _SendChar *****************
  4211 ;; Defined at:
  4212 ;;		line 18 in file "EUSART.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  X               1    wreg     unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  X               1    3[COMMON] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4226 ;;      Params:         0       0       0       0       0
  4227 ;;      Locals:         1       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0
  4229 ;;      Totals:         1       0       0       0       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    2
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_WriteNumber
  4237 ;;		_SendString
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _SendChar
  4243  0DE1                     _SendChar:
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _SendChar: [wreg]
  4247                           ;SendChar@X stored from wreg
  4248  0DE1  00F3               	movwf	SendChar@X
  4249  0DE2                     l1382:
  4250  0DE2                     l166:	
  4251                           ;EUSART.c: 19:     while (!TXIF);
  4252                           
  4253  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0DE4  1E0C               	btfss	12,4	;volatile
  4256  0DE5  2DE7               	goto	u1031
  4257  0DE6  2DE8               	goto	u1030
  4258  0DE7                     u1031:
  4259  0DE7  2DE2               	goto	l166
  4260  0DE8                     u1030:
  4261  0DE8                     l1384:
  4262                           
  4263                           ;EUSART.c: 20:     TXREG = X;
  4264  0DE8  0873               	movf	SendChar@X,w
  4265  0DE9  0099               	movwf	25	;volatile
  4266  0DEA                     l169:
  4267  0DEA  0008               	return
  4268  0DEB                     __end_of_SendChar:
  4269                           
  4270                           	psect	text15
  4271  0ECB                     __ptext15:	
  4272 ;; *************** function _Lcd_Write_String *****************
  4273 ;; Defined at:
  4274 ;;		line 54 in file "LCD8.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  a               1    wreg     PTR unsigned char 
  4277 ;;		 -> STR_12(2), STR_10(2), STR_8(2), STR_6(2), 
  4278 ;;		 -> STR_1(17), 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  a               1    8[COMMON] PTR unsigned char 
  4281 ;;		 -> STR_12(2), STR_10(2), STR_8(2), STR_6(2), 
  4282 ;;		 -> STR_1(17), 
  4283 ;;  i               2    6[COMMON] int 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4293 ;;      Params:         0       0       0       0       0
  4294 ;;      Locals:         3       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         3       0       0       0       0
  4297 ;;Total ram usage:        3 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    4
  4300 ;; This function calls:
  4301 ;;		_Lcd_Write_Char
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;;		_WriteNumber
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _Lcd_Write_String
  4310  0ECB                     _Lcd_Write_String:
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4314                           ;Lcd_Write_String@a stored from wreg
  4315  0ECB  00F8               	movwf	Lcd_Write_String@a
  4316  0ECC                     l1418:
  4317                           
  4318                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  4319  0ECC  01F6               	clrf	Lcd_Write_String@i
  4320  0ECD  01F7               	clrf	Lcd_Write_String@i+1
  4321  0ECE  2EE2               	goto	l1424
  4322  0ECF                     l1420:
  4323                           
  4324                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  4325  0ECF  0876               	movf	Lcd_Write_String@i,w
  4326  0ED0  0778               	addwf	Lcd_Write_String@a,w
  4327  0ED1  0084               	movwf	4
  4328  0ED2  120A  158A  2000  120A  158A  	fcall	stringdir
  4329  0ED7  120A  158A  2606  120A  158A  	fcall	_Lcd_Write_Char
  4330  0EDC                     l1422:
  4331  0EDC  3001               	movlw	1
  4332  0EDD  07F6               	addwf	Lcd_Write_String@i,f
  4333  0EDE  1803               	skipnc
  4334  0EDF  0AF7               	incf	Lcd_Write_String@i+1,f
  4335  0EE0  3000               	movlw	0
  4336  0EE1  07F7               	addwf	Lcd_Write_String@i+1,f
  4337  0EE2                     l1424:
  4338  0EE2  0876               	movf	Lcd_Write_String@i,w
  4339  0EE3  0778               	addwf	Lcd_Write_String@a,w
  4340  0EE4  0084               	movwf	4
  4341  0EE5  120A  158A  2000  120A  158A  	fcall	stringdir
  4342  0EEA  3A00               	xorlw	0
  4343  0EEB  1D03               	skipz
  4344  0EEC  2EEE               	goto	u1091
  4345  0EED  2EEF               	goto	u1090
  4346  0EEE                     u1091:
  4347  0EEE  2ECF               	goto	l1420
  4348  0EEF                     u1090:
  4349  0EEF                     l134:
  4350  0EEF  0008               	return
  4351  0EF0                     __end_of_Lcd_Write_String:
  4352                           
  4353                           	psect	text16
  4354  0E06                     __ptext16:	
  4355 ;; *************** function _Lcd_Write_Char *****************
  4356 ;; Defined at:
  4357 ;;		line 46 in file "LCD8.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  a               1    wreg     unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  a               1    5[COMMON] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       0       0       0       0
  4372 ;;      Locals:         1       0       0       0       0
  4373 ;;      Temps:          1       0       0       0       0
  4374 ;;      Totals:         2       0       0       0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    3
  4378 ;; This function calls:
  4379 ;;		_Lcd_Port
  4380 ;; This function is called by:
  4381 ;;		_WriteNumber
  4382 ;;		_Lcd_Write_String
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _Lcd_Write_Char
  4388  0E06                     _Lcd_Write_Char:
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4392                           ;Lcd_Write_Char@a stored from wreg
  4393  0E06  00F5               	movwf	Lcd_Write_Char@a
  4394  0E07                     l1372:
  4395                           
  4396                           ;LCD8.c: 47:     RA4 = 1;
  4397  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0E09  1605               	bsf	5,4	;volatile
  4400  0E0A                     l1374:
  4401                           
  4402                           ;LCD8.c: 48:     Lcd_Port(a);
  4403  0E0A  0875               	movf	Lcd_Write_Char@a,w
  4404  0E0B  120A  158A  25C5  120A  158A  	fcall	_Lcd_Port
  4405  0E10                     l1376:
  4406                           
  4407                           ;LCD8.c: 49:     RA5 = 1;
  4408  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0E12  1685               	bsf	5,5	;volatile
  4411  0E13                     l1378:
  4412                           
  4413                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4414  0E13  301A               	movlw	26
  4415  0E14  00F4               	movwf	??_Lcd_Write_Char
  4416  0E15                     u2577:
  4417  0E15  0BF4               	decfsz	??_Lcd_Write_Char,f
  4418  0E16  2E15               	goto	u2577
  4419  0E17  0000               	nop
  4420  0E18                     l1380:
  4421                           
  4422                           ;LCD8.c: 51:     RA5 = 0;
  4423  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  4424  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  4425  0E1A  1285               	bcf	5,5	;volatile
  4426  0E1B                     l128:
  4427  0E1B  0008               	return
  4428  0E1C                     __end_of_Lcd_Write_Char:
  4429                           
  4430                           	psect	text17
  4431  0E52                     __ptext17:	
  4432 ;; *************** function _Lcd_Set_Cursor *****************
  4433 ;; Defined at:
  4434 ;;		line 21 in file "LCD8.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  a               1    wreg     unsigned char 
  4437 ;;  b               1    7[COMMON] unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  a               1    8[COMMON] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         1       0       0       0       0
  4450 ;;      Locals:         1       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         2       0       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    4
  4456 ;; This function calls:
  4457 ;;		_Lcd_Cmd
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;;		_WriteNumber
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _Lcd_Set_Cursor
  4466  0E52                     _Lcd_Set_Cursor:
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4470                           ;Lcd_Set_Cursor@a stored from wreg
  4471  0E52  00F8               	movwf	Lcd_Set_Cursor@a
  4472  0E53                     l1410:
  4473                           
  4474                           ;LCD8.c: 22:     if (a == 1) {
  4475  0E53  0378               	decf	Lcd_Set_Cursor@a,w
  4476  0E54  1D03               	btfss	3,2
  4477  0E55  2E57               	goto	u1071
  4478  0E56  2E58               	goto	u1070
  4479  0E57                     u1071:
  4480  0E57  2E60               	goto	l1414
  4481  0E58                     u1070:
  4482  0E58                     l1412:
  4483                           
  4484                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  4485  0E58  0877               	movf	Lcd_Set_Cursor@b,w
  4486  0E59  3E7F               	addlw	127
  4487  0E5A  120A  158A  261C  120A  158A  	fcall	_Lcd_Cmd
  4488                           
  4489                           ;LCD8.c: 24:     } else if (a == 2) {
  4490  0E5F  2E6D               	goto	l122
  4491  0E60                     l1414:
  4492  0E60  3002               	movlw	2
  4493  0E61  0678               	xorwf	Lcd_Set_Cursor@a,w
  4494  0E62  1D03               	btfss	3,2
  4495  0E63  2E65               	goto	u1081
  4496  0E64  2E66               	goto	u1080
  4497  0E65                     u1081:
  4498  0E65  2E6D               	goto	l122
  4499  0E66                     u1080:
  4500  0E66                     l1416:
  4501                           
  4502                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  4503  0E66  0877               	movf	Lcd_Set_Cursor@b,w
  4504  0E67  3EBF               	addlw	191
  4505  0E68  120A  158A  261C  120A  158A  	fcall	_Lcd_Cmd
  4506  0E6D                     l122:
  4507  0E6D  0008               	return
  4508  0E6E                     __end_of_Lcd_Set_Cursor:
  4509                           
  4510                           	psect	text18
  4511  0791                     __ptext18:	
  4512 ;; *************** function _Lcd_Init *****************
  4513 ;; Defined at:
  4514 ;;		line 29 in file "LCD8.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4528 ;;      Params:         0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0
  4530 ;;      Temps:          2       0       0       0       0
  4531 ;;      Totals:         2       0       0       0       0
  4532 ;;Total ram usage:        2 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    4
  4535 ;; This function calls:
  4536 ;;		_Lcd_Cmd
  4537 ;;		_Lcd_Port
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _Lcd_Init
  4545  0791                     _Lcd_Init:
  4546  0791                     l1718:	
  4547                           ;incstack = 0
  4548                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4549                           
  4550                           
  4551                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4552  0791  3027               	movlw	39
  4553  0792  00F8               	movwf	??_Lcd_Init+1
  4554  0793  30F5               	movlw	245
  4555  0794  00F7               	movwf	??_Lcd_Init
  4556  0795                     u2587:
  4557  0795  0BF7               	decfsz	??_Lcd_Init,f
  4558  0796  2F95               	goto	u2587
  4559  0797  0BF8               	decfsz	??_Lcd_Init+1,f
  4560  0798  2F95               	goto	u2587
  4561  0799                     l1720:
  4562                           
  4563                           ;LCD8.c: 31:     Lcd_Port(0x00);
  4564  0799  3000               	movlw	0
  4565  079A  120A  158A  25C5  120A  118A  	fcall	_Lcd_Port
  4566  079F                     l1722:
  4567                           
  4568                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4569  079F  3034               	movlw	52
  4570  07A0  00F8               	movwf	??_Lcd_Init+1
  4571  07A1  30F1               	movlw	241
  4572  07A2  00F7               	movwf	??_Lcd_Init
  4573  07A3                     u2597:
  4574  07A3  0BF7               	decfsz	??_Lcd_Init,f
  4575  07A4  2FA3               	goto	u2597
  4576  07A5  0BF8               	decfsz	??_Lcd_Init+1,f
  4577  07A6  2FA3               	goto	u2597
  4578  07A7  2FA8               	nop2
  4579                           
  4580                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  4581  07A8  3030               	movlw	48
  4582  07A9  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4583  07AE                     l1724:
  4584                           
  4585                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4586  07AE  300D               	movlw	13
  4587  07AF  00F8               	movwf	??_Lcd_Init+1
  4588  07B0  30FB               	movlw	251
  4589  07B1  00F7               	movwf	??_Lcd_Init
  4590  07B2                     u2607:
  4591  07B2  0BF7               	decfsz	??_Lcd_Init,f
  4592  07B3  2FB2               	goto	u2607
  4593  07B4  0BF8               	decfsz	??_Lcd_Init+1,f
  4594  07B5  2FB2               	goto	u2607
  4595  07B6  2FB7               	nop2
  4596  07B7                     l1726:
  4597                           
  4598                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  4599  07B7  3030               	movlw	48
  4600  07B8  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4601                           
  4602                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  4603  07BD  306A               	movlw	106
  4604  07BE  00F7               	movwf	??_Lcd_Init
  4605  07BF                     u2617:
  4606  07BF  0BF7               	decfsz	??_Lcd_Init,f
  4607  07C0  2FBF               	goto	u2617
  4608  07C1  0000               	nop
  4609  07C2                     l1728:
  4610                           
  4611                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  4612  07C2  3030               	movlw	48
  4613  07C3  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4614  07C8                     l1730:
  4615                           
  4616                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  4617  07C8  3038               	movlw	56
  4618  07C9  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4619  07CE                     l1732:
  4620                           
  4621                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  4622  07CE  3010               	movlw	16
  4623  07CF  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4624  07D4                     l1734:
  4625                           
  4626                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  4627  07D4  3001               	movlw	1
  4628  07D5  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4629  07DA                     l1736:
  4630                           
  4631                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  4632  07DA  3006               	movlw	6
  4633  07DB  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4634  07E0                     l1738:
  4635                           
  4636                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  4637  07E0  300C               	movlw	12
  4638  07E1  120A  158A  261C  120A  118A  	fcall	_Lcd_Cmd
  4639  07E6                     l125:
  4640  07E6  0008               	return
  4641  07E7                     __end_of_Lcd_Init:
  4642                           
  4643                           	psect	text19
  4644  0DEB                     __ptext19:	
  4645 ;; *************** function _Lcd_Clear *****************
  4646 ;; Defined at:
  4647 ;;		line 16 in file "LCD8.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    4
  4668 ;; This function calls:
  4669 ;;		_Lcd_Cmd
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _Lcd_Clear
  4677  0DEB                     _Lcd_Clear:
  4678  0DEB                     l1750:	
  4679                           ;incstack = 0
  4680                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4681                           
  4682                           
  4683                           ;LCD8.c: 17:     Lcd_Cmd(0);
  4684  0DEB  3000               	movlw	0
  4685  0DEC  120A  158A  261C  120A  158A  	fcall	_Lcd_Cmd
  4686                           
  4687                           ;LCD8.c: 18:     Lcd_Cmd(1);
  4688  0DF1  3001               	movlw	1
  4689  0DF2  120A  158A  261C  120A  158A  	fcall	_Lcd_Cmd
  4690  0DF7                     l116:
  4691  0DF7  0008               	return
  4692  0DF8                     __end_of_Lcd_Clear:
  4693                           
  4694                           	psect	text20
  4695  0E1C                     __ptext20:	
  4696 ;; *************** function _Lcd_Cmd *****************
  4697 ;; Defined at:
  4698 ;;		line 8 in file "LCD8.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  a               1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  a               1    6[COMMON] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0
  4714 ;;      Temps:          2       0       0       0       0
  4715 ;;      Totals:         3       0       0       0       0
  4716 ;;Total ram usage:        3 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    3
  4719 ;; This function calls:
  4720 ;;		_Lcd_Port
  4721 ;; This function is called by:
  4722 ;;		_Lcd_Clear
  4723 ;;		_Lcd_Set_Cursor
  4724 ;;		_Lcd_Init
  4725 ;;		_Lcd_Shift_Right
  4726 ;;		_Lcd_Shift_Left
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function _Lcd_Cmd
  4732  0E1C                     _Lcd_Cmd:
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4736                           ;Lcd_Cmd@a stored from wreg
  4737  0E1C  00F6               	movwf	Lcd_Cmd@a
  4738  0E1D                     l1386:
  4739                           
  4740                           ;LCD8.c: 9:     RA4 = 0;
  4741  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0E1F  1205               	bcf	5,4	;volatile
  4744  0E20                     l1388:
  4745                           
  4746                           ;LCD8.c: 10:     Lcd_Port(a);
  4747  0E20  0876               	movf	Lcd_Cmd@a,w
  4748  0E21  120A  158A  25C5  120A  158A  	fcall	_Lcd_Port
  4749  0E26                     l1390:
  4750                           
  4751                           ;LCD8.c: 11:     RA5 = 1;
  4752  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0E28  1685               	bsf	5,5	;volatile
  4755  0E29                     l1392:
  4756                           
  4757                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4758  0E29  300B               	movlw	11
  4759  0E2A  00F5               	movwf	??_Lcd_Cmd+1
  4760  0E2B  3062               	movlw	98
  4761  0E2C  00F4               	movwf	??_Lcd_Cmd
  4762  0E2D                     u2627:
  4763  0E2D  0BF4               	decfsz	??_Lcd_Cmd,f
  4764  0E2E  2E2D               	goto	u2627
  4765  0E2F  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4766  0E30  2E2D               	goto	u2627
  4767  0E31  0000               	nop
  4768  0E32                     l1394:
  4769                           
  4770                           ;LCD8.c: 13:     RA5 = 0;
  4771  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4772  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4773  0E34  1285               	bcf	5,5	;volatile
  4774  0E35                     l113:
  4775  0E35  0008               	return
  4776  0E36                     __end_of_Lcd_Cmd:
  4777                           
  4778                           	psect	text21
  4779  0DC5                     __ptext21:	
  4780 ;; *************** function _Lcd_Port *****************
  4781 ;; Defined at:
  4782 ;;		line 4 in file "LCD8.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  a               1    wreg     unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  a               1    3[COMMON] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         0       0       0       0       0
  4797 ;;      Locals:         1       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0
  4799 ;;      Totals:         1       0       0       0       0
  4800 ;;Total ram usage:        1 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    2
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_Lcd_Cmd
  4807 ;;		_Lcd_Init
  4808 ;;		_Lcd_Write_Char
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _Lcd_Port
  4814  0DC5                     _Lcd_Port:
  4815                           
  4816                           ;incstack = 0
  4817                           ; Regs used in _Lcd_Port: [wreg]
  4818                           ;Lcd_Port@a stored from wreg
  4819  0DC5  00F3               	movwf	Lcd_Port@a
  4820  0DC6                     l1370:
  4821                           
  4822                           ;LCD8.c: 5:     PORTD = a;
  4823  0DC6  0873               	movf	Lcd_Port@a,w
  4824  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  4825  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  4826  0DC9  0088               	movwf	8	;volatile
  4827  0DCA                     l110:
  4828  0DCA  0008               	return
  4829  0DCB                     __end_of_Lcd_Port:
  4830                           
  4831                           	psect	text22
  4832  0E36                     __ptext22:	
  4833 ;; *************** function _EUSART_conf *****************
  4834 ;; Defined at:
  4835 ;;		line 3 in file "EUSART.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    2
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           
  4864                           ;psect for function _EUSART_conf
  4865  0E36                     _EUSART_conf:
  4866  0E36                     l1740:	
  4867                           ;incstack = 0
  4868                           ; Regs used in _EUSART_conf: [wreg+status,2]
  4869                           
  4870                           
  4871                           ;EUSART.c: 4:     TXSTAbits.TXEN = 1;
  4872  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  4873  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  4874  0E38  1698               	bsf	24,5	;volatile
  4875                           
  4876                           ;EUSART.c: 5:     PIE1bits.RCIE = 0;
  4877  0E39  128C               	bcf	12,5	;volatile
  4878                           
  4879                           ;EUSART.c: 6:     PIE1bits.TXIE = 0;
  4880  0E3A  120C               	bcf	12,4	;volatile
  4881                           
  4882                           ;EUSART.c: 7:     TXSTAbits.SYNC = 0;
  4883  0E3B  1218               	bcf	24,4	;volatile
  4884                           
  4885                           ;EUSART.c: 8:     RCSTAbits.SPEN = 1;
  4886  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0E3E  1798               	bsf	24,7	;volatile
  4889                           
  4890                           ;EUSART.c: 9:     TXSTAbits.TX9 = 0;
  4891  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  4892  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  4893  0E41  1318               	bcf	24,6	;volatile
  4894                           
  4895                           ;EUSART.c: 10:     RCSTAbits.RC9 = 0;
  4896  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0E44  1318               	bcf	24,6	;volatile
  4899                           
  4900                           ;EUSART.c: 11:     BAUDCTLbits.BRG16 = 0;
  4901  0E45  1683               	bsf	3,5	;RP0=1, select bank3
  4902  0E46  1703               	bsf	3,6	;RP1=1, select bank3
  4903  0E47  1187               	bcf	7,3	;volatile
  4904  0E48                     l1742:
  4905                           
  4906                           ;EUSART.c: 12:     SPBRG = ((8000000 / 16) / 9600) - 1;
  4907  0E48  3033               	movlw	51
  4908  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  4909  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  4910  0E4B  0099               	movwf	25	;volatile
  4911  0E4C                     l1744:
  4912                           
  4913                           ;EUSART.c: 13:     TXSTAbits.BRGH = 1;
  4914  0E4C  1518               	bsf	24,2	;volatile
  4915  0E4D                     l1746:
  4916                           
  4917                           ;EUSART.c: 14:     SPBRGH = 0;
  4918  0E4D  019A               	clrf	26	;volatile
  4919  0E4E                     l1748:
  4920                           
  4921                           ;EUSART.c: 15:     RCSTAbits.CREN = 1;
  4922  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  4923  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  4924  0E50  1618               	bsf	24,4	;volatile
  4925  0E51                     l163:
  4926  0E51  0008               	return
  4927  0E52                     __end_of_EUSART_conf:
  4928                           
  4929                           	psect	text23
  4930  0E6E                     __ptext23:	
  4931 ;; *************** function _oli *****************
  4932 ;; Defined at:
  4933 ;;		line 136 in file "Master.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, pclath, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4947 ;;      Params:         0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0
  4949 ;;      Temps:          3       0       0       0       0
  4950 ;;      Totals:         3       0       0       0       0
  4951 ;;Total ram usage:        3 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    1
  4954 ;; This function calls:
  4955 ;;		_Receive
  4956 ;; This function is called by:
  4957 ;;		Interrupt level 1
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _oli
  4963  0E6E                     _oli:
  4964  0E6E                     i1l1352:
  4965  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0E70  1A8C               	btfsc	12,5	;volatile
  4968  0E71  2E73               	goto	u102_21
  4969  0E72  2E74               	goto	u102_20
  4970  0E73                     u102_21:
  4971  0E73  2E85               	goto	i1l80
  4972  0E74                     u102_20:
  4973  0E74                     i1l1354:
  4974  0E74  120A  158A  25F8  120A  158A  	fcall	_Receive
  4975  0E79  00F0               	movwf	??_oli
  4976  0E7A  0870               	movf	??_oli,w
  4977  0E7B  00F9               	movwf	_comando
  4978  0E7C                     i1l1356:
  4979  0E7C  30C7               	movlw	199
  4980  0E7D  00F0               	movwf	??_oli
  4981  0E7E                     u263_27:
  4982  0E7E  0BF0               	decfsz	??_oli,f
  4983  0E7F  2E7E               	goto	u263_27
  4984  0E80  2E81               	nop2
  4985  0E81                     i1l1358:
  4986  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0E83  128C               	bcf	12,5	;volatile
  4989  0E84  2E86               	goto	i1l83
  4990  0E85                     i1l80:
  4991  0E85  080C               	movf	12,w	;volatile
  4992  0E86                     i1l83:
  4993  0E86  0872               	movf	??_oli+2,w
  4994  0E87  008A               	movwf	10
  4995  0E88  0E71               	swapf	??_oli+1,w
  4996  0E89  0083               	movwf	3
  4997  0E8A  0EFE               	swapf	btemp,f
  4998  0E8B  0E7E               	swapf	btemp,w
  4999  0E8C  0009               	retfie
  5000  0E8D                     __end_of_oli:
  5001                           
  5002                           	psect	intentry
  5003  0004                     __pintentry:	
  5004                           ;incstack = 0
  5005                           ; Regs used in _oli: [wreg+pclath+cstack]
  5006                           
  5007  0004                     interrupt_function:
  5008  007E                     saved_w	set	btemp
  5009  0004  00FE               	movwf	btemp
  5010  0005  0E03               	swapf	3,w
  5011  0006  00F1               	movwf	??_oli+1
  5012  0007  080A               	movf	10,w
  5013  0008  00F2               	movwf	??_oli+2
  5014  0009  120A  158A  2E6E   	ljmp	_oli
  5015                           
  5016                           	psect	text24
  5017  0DF8                     __ptext24:	
  5018 ;; *************** function _Receive *****************
  5019 ;; Defined at:
  5020 ;;		line 28 in file "EUSART.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      unsigned char 
  5027 ;; Registers used:
  5028 ;;		wreg
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5034 ;;      Params:         0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_oli
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           
  5048                           ;psect for function _Receive
  5049  0DF8                     _Receive:
  5050  0DF8                     i1l1274:	
  5051                           ;incstack = 0
  5052                           ; Regs used in _Receive: [wreg]
  5053                           
  5054                           
  5055                           ;EUSART.c: 29:     if (RCSTAbits.OERR) {
  5056  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0DFA  1C98               	btfss	24,1	;volatile
  5059  0DFB  2DFD               	goto	u99_21
  5060  0DFC  2DFE               	goto	u99_20
  5061  0DFD                     u99_21:
  5062  0DFD  2E00               	goto	i1l179
  5063  0DFE                     u99_20:
  5064  0DFE                     i1l1276:
  5065                           
  5066                           ;EUSART.c: 30:         RCSTAbits.CREN = 0;
  5067  0DFE  1218               	bcf	24,4	;volatile
  5068                           
  5069                           ;EUSART.c: 31:         RCSTAbits.CREN = 1;
  5070  0DFF  1618               	bsf	24,4	;volatile
  5071  0E00                     i1l179:	
  5072                           ;EUSART.c: 34:     }
  5073                           
  5074                           
  5075                           ;EUSART.c: 33:     while (PIR1bits.RCIF == 0) {
  5076  0E00  1E8C               	btfss	12,5	;volatile
  5077  0E01  2E03               	goto	u100_21
  5078  0E02  2E04               	goto	u100_20
  5079  0E03                     u100_21:
  5080  0E03  2E00               	goto	i1l179
  5081  0E04                     u100_20:
  5082  0E04                     i1l1278:
  5083                           
  5084                           ;EUSART.c: 35:     return RCREG;
  5085  0E04  081A               	movf	26,w	;volatile
  5086  0E05                     i1l182:
  5087  0E05  0008               	return
  5088  0E06                     __end_of_Receive:
  5089  007E                     btemp	set	126	;btemp
  5090  007E                     wtemp0	set	126
  5091                           
  5092                           	psect	config
  5093                           
  5094                           ;Config register CONFIG1 @ 0x2007
  5095                           ;	Oscillator Selection bits
  5096                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  5097                           ;	Watchdog Timer Enable bit
  5098                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5099                           ;	Power-up Timer Enable bit
  5100                           ;	PWRTE = OFF, PWRT disabled
  5101                           ;	RE3/MCLR pin function select bit
  5102                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5103                           ;	Code Protection bit
  5104                           ;	CP = OFF, Program memory code protection is disabled
  5105                           ;	Data Code Protection bit
  5106                           ;	CPD = OFF, Data memory code protection is disabled
  5107                           ;	Brown Out Reset Selection bits
  5108                           ;	BOREN = OFF, BOR disabled
  5109                           ;	Internal External Switchover bit
  5110                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5111                           ;	Fail-Safe Clock Monitor Enabled bit
  5112                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5113                           ;	Low Voltage Programming Enable bit
  5114                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5115                           ;	In-Circuit Debugger Mode bit
  5116                           ;	DEBUG = 0x1, unprogrammed default
  5117  2007                     	org	8199
  5118  2007  20F1               	dw	8433
  5119                           
  5120                           ;Config register CONFIG2 @ 0x2008
  5121                           ;	Brown-out Reset Selection bit
  5122                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5123                           ;	Flash Program Memory Self Write Enable bits
  5124                           ;	WRT = OFF, Write protection off
  5125  2008                     	org	8200
  5126  2008  3FFF               	dw	16383

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     64      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SendString@X	PTR unsigned char  size(1) Largest target is 6
		 -> STR_13(CODE[2]), STR_11(CODE[2]), STR_9(CODE[2]), STR_7(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _setup->_spiInit
    _WriteNumber->_Lcd_Set_Cursor
    _WriteNumber->_Lcd_Write_String
    _WriteNumber->___fltol
    _WriteNumber->___wmul
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _SendString->_SendChar
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteNumber
    _WriteNumber->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10814
                                             59 BANK0      5     5      0
                        _EUSART_conf
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _SendString
                        _WriteNumber
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _WriteNumber                                         14    11      3    8884
                                             45 BANK0     14    11      3
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _SendChar
                         _SendString
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _SendString                                           2     2      0     331
                                              4 COMMON     2     2      0
                           _SendChar
 ---------------------------------------------------------------------------------
 (3) _SendChar                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     299
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     740
                                              7 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _Receive
 ---------------------------------------------------------------------------------
 (6) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_conf
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SendString
     _SendChar
   _WriteNumber
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _SendChar
     _SendString
       _SendChar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _oli (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 20:14:02 2021

                        _a 007A                          pc 0002                _SSPSTATbits 0094  
                       l75 0ECA                         l95 0514                         l97 0550  
                       l99 05BD                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l110 0DCA                        l113 0E35  
                      l122 0E6D                        l202 0DD1                        l116 0DF7  
                      l125 07E6                        l205 0DD7                        l134 0EEF  
                      l302 0EFC                        l128 0E1B                        l304 0F14  
                      l216 0DE0                        l208 0DD0                        l163 0E51  
                      l166 0DE2                        l175 0EAB                        l169 0DEA  
                      l710 0F2B                        l198 07F7                        l703 036E  
                      l199 07FC                        l712 0F3D                        l741 073E  
                      l574 0F83                        l495 0FEA                        l735 06F9  
                      l488 0FFF                        l737 0790                        l498 0FFF  
                      l691 037A                        l748 075A                        l749 0766  
                      l697 02E6                        _RA4 002C                        _RA5 002D  
     __size_of_WriteNumber 0243                        _oli 0E6E                        fsr0 0004  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 0078  
             ?_EUSART_conf 0070                       l2000 0754                       l2010 0787  
                     l2002 075E                       l2012 0788                       l2004 0768  
                     l2020 0386                       l2100 05E0                       l2006 077E  
                     l2022 038C                       l2030 0414                       l2110 05FE  
                     l2102 05E6                       l1400 0F21                       l2008 0783  
                     l2032 0419                       l2040 0462                       l2024 03CB  
                     l2016 037E                       l2120 0625                       l2112 0608  
                     l2104 05F0                       l1410 0E53                       l1402 0F25  
                     l2050 04C0                       l2042 0475                       l2034 041A  
                     l2026 03D1                       l2018 0384                       l2130 064A  
                     l2122 0626                       l2114 060E                       l2106 05FA  
                     l1412 0E58                       l1420 0ECF                       l1404 0F34  
                     l2060 04DB                       l2052 04C5                       l2044 048F  
                     l2036 045A                       l2028 0411                       l2140 0672  
                     l2132 064E                       l2124 0630                       l2116 0618  
                     l2108 05FD                       l1414 0E60                       l1422 0EDC  
                     l1430 0E9B                       l1406 0F39                       l2070 04FE  
                     l2062 04E5                       l2054 04CA                       l2046 04A2  
                     l2038 045B                       l2150 06B2                       l2142 0678  
                     l2134 0656                       l2126 0636                       l2118 0622  
                     l1416 0E66                       l1424 0EE2                       l1432 0E9F  
                     l1600 0244                       l2080 0544                       l2072 0508  
                     l2064 04EB                       l2056 04CF                       l2048 04BC  
                     l1440 07F3                       l2160 06C4                       l2144 0689  
                     l2136 065C                       l2128 0640                       l1370 0DC6  
                     l1418 0ECC                       l1426 0E8E                       l1610 02B2  
                     l1602 026A                       l1530 002C                       l1522 001A  
                     l1450 0EF6                       l2090 05B7                       l2082 054A  
                     l2074 050E                       l2058 04D5                       l2066 04F2  
                     l1442 07F6                       l1434 07E8                       l2146 068F  
                     l2138 0662                       l1380 0E18                       l1372 0E07  
                     l1428 0E8F                       l1620 02CA                       l1612 02B6  
                     l1604 0292                       l1540 0048                       l1532 0031  
                     l1524 0021                       l1452 0F03                       l2084 0598  
                     l2076 0531                       l2068 04F8                       l1436 07EF  
                     l1444 0DD1                       l2156 06B6                       l2148 06A3  
                     l2092 05BE                       l1390 0E26                       l1374 0E0A  
                     l1382 0DE2                       l1630 02EB                       l1622 02CB  
                     l1614 02B7                       l1606 029B                       l1550 005D  
                     l1542 004D                       l1534 0036                       l1526 0027  
                     l1454 0F0A                       l1446 0EF0                       l2086 059F  
                     l2078 0538                       l1438 07F1                       l1710 0EB0  
                     l2158 06BC                       l2094 05D2                       l1392 0E29  
                     l1720 0799                       l1376 0E10                       l1384 0DE8  
                     l1632 02F0                       l1640 0321                       l1624 02CF  
                     l1616 02C0                       l1608 02A9                       l1560 0079  
                     l1552 0062                       l1544 0053                       l1536 003E  
                     l1528 002B                       l1456 0F10                       l1448 0EF2  
                     l2088 05B1                       l1712 0EBF                       l2096 05D5  
                     l1394 0E32                       l1386 0E1D                       l1730 07C8  
                     l1722 079F                       l1378 0E13                       l1650 0354  
                     l1642 032E                       l1634 02FE                       l1626 02E3  
                     l1618 02C6                       l1570 00A4                       l1562 007E  
                     l1554 006A                       l1546 0057                       l1538 0040  
                     l1714 0EC0                       l1706 0EAC                       l2098 05D6  
                     l1740 0E36                       l1388 0E20                       l1732 07CE  
                     l1724 07AE                       l1396 0F18                       l1652 0362  
                     l1644 0339                       l1636 0302                       l1580 0141  
                     l1572 00C1                       l1556 006C                       l1548 0058  
                     l1716 0EC1                       l1708 0EAF                       l1742 0E48  
                     l1750 0DEB                       l1734 07D4                       l1726 07B7  
                     l1718 0791                       l1398 0F1A                       l1654 0366  
                     l1646 0348                       l1638 031B                       l1590 01A4  
                     l1582 014A                       l1574 00DD                       l1566 0087  
                     l1558 0074                       l1910 0F84                       l1744 0E4C  
                     l1736 07DA                       l1728 07C2                       l1656 0367  
                     l1648 0352                       l1592 01BD                       l1584 015A  
                     l1576 0109                       l1568 0097                       l1920 0FB0  
                     l1912 0F91                       l1752 0DCC                       l1746 0E4D  
                     l1738 07E0                       l1658 0372                       l1594 01DA  
                     l1586 0177                       l1578 0125                       l1922 0FB8  
                     l1754 0DD8                       l1748 0E4E                       l1596 0207  
                     l1588 0187                       l1940 0FDF                       l1932 0FC6  
                     l1924 0FBA                       l1916 0F9A                       l1756 0DDD  
                     l1598 0217                       l1942 0FEF                       l1926 0FBE  
                     l1934 0FD8                       l1918 0FAF                       l1950 0F48  
                     l1944 0FF4                       l1960 0F6B                       l1952 0F4B  
                     l1962 0F71                       l1954 0F52                       l1946 0F3E  
                     l1964 0F72                       l1956 0F56                       l1948 0F42  
                     l1980 0701                       l1972 06D8                       l1966 0F79  
                     l1958 0F5A                       l1990 0723                       l1974 06DD  
                     l1968 0F7F                       l1992 0727                       l1984 070A  
                     l1976 06E1                       l1994 0735                       l1986 070F  
                     l1978 06F1                       l1996 0745                       l1988 071C  
                     l1998 0750                       ?_oli 0070                       STR_1 0806  
                     STR_2 0823                       STR_3 0817                       STR_4 081D  
                     STR_5 0828                       STR_6 082A                       STR_7 082A  
                     STR_8 0826                       STR_9 0826                       u1100 0EAB  
                     u1101 0EAA                       u1030 0DE8                       u1110 07EF  
                     u1031 0DE7                       u1111 07EE                       u1040 0F25  
                     u1120 0DD7                       u1041 0F24                       u1121 0DD6  
                     u1130 0EF6                       u1131 0EF5                       u1060 0F39  
                     u2100 0FEF                       u2020 0F91                       u1061 0F38  
                     u2101 0FEE                       u2021 0F90                       u1070 0E58  
                     u2110 0FF4                       u2030 0FA8                       u1071 0E57  
                     u1055 0F2C                       u2111 0FF3                       u1080 0E66  
                     u1400 0079                       u2040 0FBE                       u2120 0F48  
                     u1160 0F10                       u2200 06E1                       u1081 0E65  
                     u1401 0078                       u2041 0FBD                       u2121 0F47  
                     u1161 0F0F                       u1145 0EFD                       u2201 06E0  
                     u1090 0EEF                       u1410 007E                       u2050 0FC5  
                     u2210 0701                       u1091 0EEE                       u1411 007D  
                     u2051 0FC4                       u2035 0FA3                       u1155 0F04  
                     u2211 0700                       u1340 002B                       u2140 0F5A  
                     u2300 0773                       u1501 01CC                       u1421 00CF  
                     u1341 002A                       u2141 0F59                       u1502 01D3  
                     u1422 00D6                       u1350 0031                       u2070 0FD7  
                     u2310 0783                       u2230 0722                       u1511 01F9  
                     u1503 01DA                       u1431 00EB                       u1423 00DD  
                     u1351 0030                       u2071 0FD6                       u2135 0F4C  
                     u2311 0782                       u2231 0721                       u1512 0200  
                     u1432 00F2                       u1360 0036                       u2080 0FDE  
                     u2160 0F6B                       u2320 0787                       u2400 04FE  
                     u1521 0226                       u1513 0207                       u1441 0117  
                     u1433 00F9                       u1361 0035                       u2081 0FDD  
                     u2065 0FC7                       u2161 0F6A                       u2321 0786  
                     u2305 076E                       u2225 0714                       u2401 04FD  
                     u1610 02CA                       u1530 0250                       u1522 022D  
                     u1442 011E                       u1370 0057                       u2250 0744  
                     u2410 0538                       u2330 0384                       u1611 02C9  
                     u1523 0234                       u1451 0133                       u1443 0125  
                     u1371 0056                       u2155 0F5B                       u2251 0743  
                     u2411 0537                       u2331 0383                       u1700 0366  
                     u1620 02CF                       u1452 013A                       u1380 005D  
                     u2180 0F7F                       u2420 0558                       u2340 038C  
                     u1701 0365                       u1621 02CE                       u1605 02B9  
                     u1541 025C                       u1453 0141                       u1381 005C  
                     u2181 0F7E                       u2165 0F67                       u2245 0736  
                     u2421 0556                       u2341 038B                       u1630 02E3  
                     u1550 0278                       u1542 0263                       u1390 0062  
                     u2270 0754                       u2190 06DD                       u2430 0559  
                     u2350 03D1                       u1631 02E2                       u1543 026A  
                     u1535 024B                       u1471 0169                       u1391 0061  
                     u2095 0FE1                       u2175 0F73                       u2271 0753  
                     u2191 06DC                       u2351 03D0                       u1640 02EA  
                     u1472 0170                       u2280 075A                       u2440 057C  
                     u2360 0419                       u1641 02E9                       u1561 0284  
                     u1481 0196                       u1473 0177                       u1465 0143  
                     u2281 0759                       u2265 0749                       u2441 057A  
                     u2361 0418                       u1650 02F0                       u1562 028B  
                     u1482 019D                       u2290 075E                       u2450 057D  
                     u2370 04D5                       u1651 02EF                       u1563 0292  
                     u1555 0273                       u1483 01A4                       u2291 075D  
                     u2371 04D4                       u2507 05DC                       u1660 0302  
                     u2460 059F                       u2380 04DB                       u1661 0301  
                     u2461 059E                       u2381 04DA                       u2517 05F6  
                     u1670 0311                       u1590 02B6                       u2470 05A5  
                     u2390 04F8                       u2607 07B2                       u1591 02B5  
                     u1575 0294                       u1495 01A6                       u2471 05A3  
                     u2391 04F7                       u2527 0604                       u1680 032E  
                     u2480 05A6                       u2617 07BF                       u1681 032D  
                     u1585 02AB                       u2537 061E                       u1690 0348  
                     u2490 06D1                       u2627 0E2D                       u1691 0347  
                     u1675 030C                       u2491 06D0                       u2547 062C  
                     u1685 032A                       u2557 0646                       u1695 0344  
                     u2495 06CD                       u2567 06AB                       u2577 0E15  
                     u2587 0795                       u2597 07A3                       i1l80 0E85  
                     i1l83 0E86                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 05BE                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0E36            __end_of_Receive 0E06  
                    ??_oli 0070              ___fltol@sign1 0077                      ?_main 0070  
                    STR_10 082C                      STR_11 082C                      STR_12 082E  
                    STR_13 082E            __end_of___flmul 037B            __end_of___fltol 1000  
                    _ANSEL 0188            __end_of___lwdiv 0F84                      i1l182 0E05  
                    i1l179 0E00                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001C  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019                      u99_20 0DFE  
                    u99_21 0DFD                      _setup 0EAC                      main@i 005E  
                    pclath 000A            __end_of_spiInit 07FD            __end_of_spiRead 0DE1  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 07E7  
         __end_of_Lcd_Port 0DCB            __initialization 000F               __end_of_main 06D5  
         __end_of_SendChar 0DEB                     ??_main 005B         __size_of_Lcd_Clear 000D  
                   ?_setup 0070                     _ANSELH 0189                     u100_20 0E04  
                   u100_21 0E03                     u102_20 0E74                     u102_21 0E73  
                   i1l1352 0E6E                     i1l1274 0DF8                     i1l1354 0E74  
                   i1l1276 0DFE                     i1l1356 0E7C                     i1l1278 0E04  
                   i1l1358 0E81                 _SendString 0E8D                     u263_27 0E7E  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0791                  ??_Receive 0070  
                   ___wmul 0EF0                  ??___flmul 0032                  ??___fltol 0048  
                ??___lwdiv 0077         __size_of__Umul8_16 0029                     saved_w 007E  
         __end_of_spiWrite 0DD1                  ??_spiInit 0076                  ??_spiRead 0073  
          Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0077               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073    __end_of__initialization 0016  
     __size_of_EUSART_conf 001C          __end_of_Lcd_Clear 0DF8                 ___fltol@f1 0044  
           __pcstackCOMMON 0070              __end_of_setup 0ECB                SendString@X 0075  
           _Lcd_Set_Cursor 0E52                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0077                 __pbssBANK0 0060                ?_SendString 0070  
                ?_SendChar 0070          __end_of__Umul8_16 0F3E                 __pmaintext 05BE  
                  ?___wmul 0073                 __pintentry 0004             WriteNumber@dec 0057  
           WriteNumber@cor 0054    __size_of_spiReceiveWait 0007              ??_WriteNumber 0050  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0E6E                  ?___xxtofl 0073  
               ??_Lcd_Init 0077                 ??_Lcd_Port 0073           WriteNumber@valor 004E  
                  _SSPSTAT 0094                 __stringtab 0800             _Lcd_Write_Char 0E06  
                  _Lcd_Cmd 0E1C                 ??_SendChar 0073                    _Receive 0DF8  
                  _Sensor1 0062                    _Sensor2 0061                    _Sensor3 0060  
                ?_spiWrite 0070                    ___flmul 001A                    ___fltol 0F84  
          __size_of___wmul 0025                    ___lwdiv 0F3E            ?_Lcd_Set_Cursor 0077  
      __size_of_SendString 001F                    __ptext1 0DCB                    __ptext2 0DD8  
                  __ptext3 0DD1                    __ptext4 0EAC                    __ptext5 07E7  
                  __ptext6 037B                    __ptext7 06D5                    __ptext8 0EF0  
                  __ptext9 0F3E                    _comando 0079               __size_of_oli 001F  
               ??___xxtofl 0020        __end_of_WriteNumber 05BE                    _spiInit 07E7  
                  _spiRead 0DD8     __end_of_Lcd_Write_Char 0E1C       end_of_initialization 0016  
                _RCSTAbits 0018                 ??_spiWrite 0073                  Lcd_Port@a 0073  
                _PORTAbits 0005         WriteNumber@columna 004D         WriteNumber@formato 004F  
            ___xxtofl@sign 0024                  _TRISCbits 0087                spiWrite@dat 0073  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078          Lcd_Write_String@i 0076  
              ___flmul@grs 0038                  _TXSTAbits 0098                  _Lcd_Clear 0DEB  
           _spiReceiveWait 0DD1             __end_of___wmul 0F15           _Lcd_Write_String 0ECB  
              _BAUDCTLbits 0187                _WriteNumber 037B                  SendChar@X 0073  
      start_initialization 000F                __end_of_oli 0E8D              ??_EUSART_conf 0073  
             ??_SendString 0074          __size_of_Lcd_Init 0056          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0DD8          __size_of_SendChar 000A                 ?_Lcd_Clear 0070  
                 ??___wmul 0077                  __Umul8_16 0F15            Lcd_Write_Char@a 0075  
       __end_of_SendString 0EAC                  ___flmul@a 002E                  ___flmul@b 002A  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070        __end_of_EUSART_conf 0E52  
                 ?_Receive 0070           ___lwdiv@dividend 0075            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0078                   ?___flmul 002A                   ?___fltol 0044  
               ?__Umul8_16 0073                   ?___lwdiv 0073          __size_of_spiWrite 0006  
                __pstrings 0800            WriteNumber@cent 0055            WriteNumber@fila 005A  
          WriteNumber@temp 0058                   ?_spiInit 0073                   ?_spiRead 0070  
         ___lwdiv@quotient 0021             __size_of_setup 001F       spiInit@sTransmitEdge 0075  
        interrupt_function 0004             ___wmul@product 0077                   _PIE1bits 008C  
       spiInit@sDataSample 0073                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0077          WriteNumber@unidad 0056                __stringbase 0805  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                   _Lcd_Init 0791  
                 _Lcd_Port 0DC5                _EUSART_conf 0E36   __end_of_Lcd_Write_String 0EF0  
         __size_of_Lcd_Cmd 001A                   _SendChar 0DE1           __size_of_Receive 000E  
              ??__Umul8_16 0075           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0046               ?_WriteNumber 004D         __end_of__stringtab 0806  
                 ___xxtofl 06D5            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 0F84                   __ptext11 001A                   __ptext20 0E1C  
                 __ptext12 0F15                   __ptext21 0DC5                   __ptext13 0E8D  
                 __ptext22 0E36                   __ptext14 0DE1                   __ptext23 0E6E  
                 __ptext15 0ECB                   __ptext24 0DF8                   __ptext16 0E06  
                 __ptext17 0E52                   __ptext18 0791                   __ptext19 0DEB  
         __size_of_spiInit 0016           __size_of_spiRead 0009              __size_of_main 0117  
                 _spiWrite 0DCB               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0073  
                stringcode 0800     __Umul8_16@multiplicand 0073                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
