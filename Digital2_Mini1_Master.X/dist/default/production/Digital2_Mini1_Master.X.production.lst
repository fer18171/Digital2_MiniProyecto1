

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:49:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  001A                     _RCREG	set	26
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  000C                     _PIR1bits	set	12
   466  000B                     _INTCONbits	set	11
   467  0005                     _PORTAbits	set	5
   468  0031                     _RB1	set	49
   469  0030                     _RB0	set	48
   470  0094                     _SSPSTATbits	set	148
   471  0094                     _SSPSTAT	set	148
   472  009A                     _SPBRGH	set	154
   473  0099                     _SPBRG	set	153
   474  008C                     _PIE1bits	set	140
   475  0098                     _TXSTAbits	set	152
   476  0086                     _TRISB	set	134
   477  0085                     _TRISA	set	133
   478  0088                     _TRISD	set	136
   479  0087                     _TRISCbits	set	135
   480  0087                     _TRISC	set	135
   481  043B                     _TRISC3	set	1083
   482  043D                     _TRISC5	set	1085
   483  0187                     _BAUDCTLbits	set	391
   484  0189                     _ANSELH	set	393
   485  0188                     _ANSEL	set	392
   486                           
   487                           	psect	strings
   488  0800                     __pstrings:
   489  0800                     stringtab:
   490  0800                     __stringtab:
   491  0800                     stringcode:	
   492                           ;	String table - string pointers are 1 byte each
   493                           
   494  0800                     stringdir:
   495  0800  3008               	movlw	high stringdir
   496  0801  008A               	movwf	10
   497  0802  0804               	movf	4,w
   498  0803  0A84               	incf	4,f
   499  0804  0782               	addwf	2,f
   500  0805                     __stringbase:
   501  0805  3400               	retlw	0
   502  0806                     __end_of__stringtab:
   503  0806                     STR_1:
   504  0806  3420               	retlw	32	;' '
   505  0807  3453               	retlw	83	;'S'
   506  0808  3431               	retlw	49	;'1'
   507  0809  343A               	retlw	58	;':'
   508  080A  3420               	retlw	32	;' '
   509  080B  3420               	retlw	32	;' '
   510  080C  3453               	retlw	83	;'S'
   511  080D  3432               	retlw	50	;'2'
   512  080E  343A               	retlw	58	;':'
   513  080F  3420               	retlw	32	;' '
   514  0810  3420               	retlw	32	;' '
   515  0811  3453               	retlw	83	;'S'
   516  0812  3433               	retlw	51	;'3'
   517  0813  343A               	retlw	58	;':'
   518  0814  3400               	retlw	0
   519  0815                     STR_2:
   520  0815  342E               	retlw	46	;'.'
   521  0816  3400               	retlw	0
   522                           
   523                           	psect	cinit
   524  000F                     start_initialization:	
   525                           ; #config settings
   526                           
   527  000F                     __initialization:
   528                           
   529                           ; Clear objects allocated to COMMON
   530  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   531  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   532  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   533                           
   534                           ; Clear objects allocated to BANK0
   535  0012  1283               	bcf	3,5	;RP0=0, select bank0
   536  0013  1303               	bcf	3,6	;RP1=0, select bank0
   537  0014  01DD               	clrf	__pbssBANK0& (0+127)
   538  0015  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   539  0016                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0016                     __end_of__initialization:
   543  0016  0183               	clrf	3
   544  0017  120A  118A  2C7A   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  0078                     __pbssCOMMON:
   548  0078                     _Sensor3:
   549  0078                     	ds	1
   550  0079                     _Sensor2:
   551  0079                     	ds	1
   552  007A                     _Sensor1:
   553  007A                     	ds	1
   554                           
   555                           	psect	bssBANK0
   556  005D                     __pbssBANK0:
   557  005D                     _comando:
   558  005D                     	ds	1
   559  005E                     _a:
   560  005E                     	ds	1
   561                           
   562                           	psect	cstackCOMMON
   563  0070                     __pcstackCOMMON:
   564  0070                     ?_setup:
   565  0070                     ?_Lcd_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_spiWrite:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_spiRead:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Clear:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Write_String:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Receive:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ??_Receive:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Lcd_Write_Char:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_oli:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_oli:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Port:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_spiReceiveWait:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 1 bytes @ 0x0
   609  0070                     	ds	3
   610  0073                     ??_spiWrite:
   611  0073                     ??_spiRead:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ?_spiInit:	
   615                           ; 1 bytes @ 0x3
   616                           
   617  0073                     ??_Lcd_Port:	
   618                           ; 1 bytes @ 0x3
   619                           
   620  0073                     ??_spiReceiveWait:	
   621                           ; 1 bytes @ 0x3
   622                           
   623  0073                     ?__Umul8_16:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ?___wmul:	
   627                           ; 2 bytes @ 0x3
   628                           
   629  0073                     ?___lwdiv:	
   630                           ; 2 bytes @ 0x3
   631                           
   632  0073                     ?___xxtofl:	
   633                           ; 2 bytes @ 0x3
   634                           
   635  0073                     Lcd_Port@a:	
   636                           ; 4 bytes @ 0x3
   637                           
   638  0073                     spiInit@sDataSample:	
   639                           ; 1 bytes @ 0x3
   640                           
   641  0073                     spiWrite@dat:	
   642                           ; 1 bytes @ 0x3
   643                           
   644  0073                     __Umul8_16@multiplicand:	
   645                           ; 1 bytes @ 0x3
   646                           
   647  0073                     ___wmul@multiplier:	
   648                           ; 1 bytes @ 0x3
   649                           
   650  0073                     ___lwdiv@divisor:	
   651                           ; 2 bytes @ 0x3
   652                           
   653  0073                     ___xxtofl@val:	
   654                           ; 2 bytes @ 0x3
   655                           
   656                           
   657                           ; 4 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??_Lcd_Write_Char:
   660  0074                     ??_Lcd_Cmd:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     spiInit@sClockIdle:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ??__Umul8_16:
   670  0075                     Lcd_Write_Char@a:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     spiInit@sTransmitEdge:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     ___wmul@multiplicand:	
   677                           ; 1 bytes @ 0x5
   678                           
   679  0075                     ___lwdiv@dividend:	
   680                           ; 2 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684  0075                     	ds	1
   685  0076                     ??_Lcd_Write_String:
   686  0076                     ??_spiInit:	
   687                           ; 1 bytes @ 0x6
   688                           
   689  0076                     Lcd_Cmd@a:	
   690                           ; 1 bytes @ 0x6
   691                           
   692  0076                     spiInit@sType:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           ; 1 bytes @ 0x6
   697  0076                     	ds	1
   698  0077                     ??_setup:
   699  0077                     ??_Lcd_Clear:	
   700                           ; 1 bytes @ 0x7
   701                           
   702  0077                     ?_Lcd_Set_Cursor:	
   703                           ; 1 bytes @ 0x7
   704                           
   705  0077                     ??___wmul:	
   706                           ; 1 bytes @ 0x7
   707                           
   708  0077                     ??___lwdiv:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     Lcd_Set_Cursor@b:	
   712                           ; 1 bytes @ 0x7
   713                           
   714                           
   715                           ; 1 bytes @ 0x7
   716  0077                     	ds	1
   717  0078                     ??_Lcd_Set_Cursor:
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0020                     ??_Lcd_Init:
   724  0020                     ??___xxtofl:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     Lcd_Set_Cursor@a:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     ___lwdiv@counter:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     Lcd_Write_String@i:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     ___wmul@product:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0020                     __Umul8_16@product:	
   740                           ; 2 bytes @ 0x0
   741                           
   742                           
   743                           ; 2 bytes @ 0x0
   744  0020                     	ds	1
   745  0021                     ___lwdiv@quotient:
   746                           
   747                           ; 2 bytes @ 0x1
   748  0021                     	ds	1
   749  0022                     Lcd_Write_String@a:
   750  0022                     __Umul8_16@word_mpld:	
   751                           ; 1 bytes @ 0x2
   752                           
   753                           
   754                           ; 2 bytes @ 0x2
   755  0022                     	ds	2
   756  0024                     __Umul8_16@multiplier:
   757  0024                     ___xxtofl@sign:	
   758                           ; 1 bytes @ 0x4
   759                           
   760                           
   761                           ; 1 bytes @ 0x4
   762  0024                     	ds	1
   763  0025                     ___xxtofl@exp:
   764                           
   765                           ; 1 bytes @ 0x5
   766  0025                     	ds	1
   767  0026                     ___xxtofl@arg:
   768                           
   769                           ; 4 bytes @ 0x6
   770  0026                     	ds	4
   771  002A                     ?___flmul:
   772  002A                     ___flmul@b:	
   773                           ; 4 bytes @ 0xA
   774                           
   775                           
   776                           ; 4 bytes @ 0xA
   777  002A                     	ds	4
   778  002E                     ___flmul@a:
   779                           
   780                           ; 4 bytes @ 0xE
   781  002E                     	ds	4
   782  0032                     ??___flmul:
   783                           
   784                           ; 1 bytes @ 0x12
   785  0032                     	ds	5
   786  0037                     ___flmul@sign:
   787                           
   788                           ; 1 bytes @ 0x17
   789  0037                     	ds	1
   790  0038                     ___flmul@grs:
   791                           
   792                           ; 4 bytes @ 0x18
   793  0038                     	ds	4
   794  003C                     ___flmul@aexp:
   795                           
   796                           ; 1 bytes @ 0x1C
   797  003C                     	ds	1
   798  003D                     ___flmul@bexp:
   799                           
   800                           ; 1 bytes @ 0x1D
   801  003D                     	ds	1
   802  003E                     ___flmul@prod:
   803                           
   804                           ; 4 bytes @ 0x1E
   805  003E                     	ds	4
   806  0042                     ___flmul@temp:
   807                           
   808                           ; 2 bytes @ 0x22
   809  0042                     	ds	2
   810  0044                     ?___fltol:
   811  0044                     ___fltol@f1:	
   812                           ; 4 bytes @ 0x24
   813                           
   814                           
   815                           ; 4 bytes @ 0x24
   816  0044                     	ds	4
   817  0048                     ??___fltol:
   818                           
   819                           ; 1 bytes @ 0x28
   820  0048                     	ds	5
   821  004D                     ___fltol@sign1:
   822                           
   823                           ; 1 bytes @ 0x2D
   824  004D                     	ds	1
   825  004E                     ___fltol@exp1:
   826                           
   827                           ; 1 bytes @ 0x2E
   828  004E                     	ds	1
   829  004F                     ?_WriteFloat:
   830  004F                     WriteFloat@columna:	
   831                           ; 1 bytes @ 0x2F
   832                           
   833                           
   834                           ; 1 bytes @ 0x2F
   835  004F                     	ds	1
   836  0050                     WriteFloat@valor:
   837                           
   838                           ; 1 bytes @ 0x30
   839  0050                     	ds	1
   840  0051                     ??_WriteFloat:
   841                           
   842                           ; 1 bytes @ 0x31
   843  0051                     	ds	4
   844  0055                     WriteFloat@cent:
   845                           
   846                           ; 1 bytes @ 0x35
   847  0055                     	ds	1
   848  0056                     WriteFloat@unidad:
   849                           
   850                           ; 1 bytes @ 0x36
   851  0056                     	ds	1
   852  0057                     WriteFloat@dec:
   853                           
   854                           ; 1 bytes @ 0x37
   855  0057                     	ds	1
   856  0058                     WriteFloat@fila:
   857                           
   858                           ; 1 bytes @ 0x38
   859  0058                     	ds	1
   860  0059                     WriteFloat@temp:
   861                           
   862                           ; 2 bytes @ 0x39
   863  0059                     	ds	2
   864  005B                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x3B
   867  005B                     	ds	2
   868                           
   869                           	psect	maintext
   870  047A                     __pmaintext:	
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 55 in file "Master.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B00/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       2       0       0       0
   893 ;;      Totals:         0       2       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels required when called:    6
   896 ;; This function calls:
   897 ;;		_Lcd_Clear
   898 ;;		_Lcd_Init
   899 ;;		_Lcd_Set_Cursor
   900 ;;		_Lcd_Write_String
   901 ;;		_WriteFloat
   902 ;;		_setup
   903 ;;		_spiRead
   904 ;;		_spiWrite
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _main
   912  047A                     _main:
   913  047A                     l1889:	
   914                           ;incstack = 0
   915                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   916                           
   917                           
   918                           ;Master.c: 56:     }
   919  047A  120A  118A  27D6  120A  118A  	fcall	_setup
   920                           
   921                           ;Master.c: 57: }
   922  047F  120A  118A  2679  120A  118A  	fcall	_Lcd_Init
   923  0484                     l1891:
   924                           
   925                           ;Master.c: 61: 
   926  0484  1283               	bcf	3,5	;RP0=0, select bank0
   927  0485  1303               	bcf	3,6	;RP1=0, select bank0
   928  0486  1585               	bsf	5,3	;volatile
   929  0487                     l1893:
   930                           
   931                           ;Master.c: 62: 
   932  0487  1085               	bcf	5,1	;volatile
   933  0488                     l1895:
   934                           
   935                           ;Master.c: 64: void setup(void) {
   936  0488  3003               	movlw	3
   937  0489  1283               	bcf	3,5	;RP0=0, select bank0
   938  048A  1303               	bcf	3,6	;RP1=0, select bank0
   939  048B  00DC               	movwf	??_main+1
   940  048C  3097               	movlw	151
   941  048D  00DB               	movwf	??_main
   942  048E                     u1947:
   943  048E  0BDB               	decfsz	??_main,f
   944  048F  2C8E               	goto	u1947
   945  0490  0BDC               	decfsz	??_main+1,f
   946  0491  2C8E               	goto	u1947
   947  0492                     l1897:
   948                           
   949                           ;Master.c: 65: 
   950  0492  3001               	movlw	1
   951  0493  120A  158A  2796  120A  118A  	fcall	_spiWrite
   952  0498                     l1899:
   953                           
   954                           ;Master.c: 66:     TRISC = 0;
   955  0498  120A  158A  27A3  120A  118A  	fcall	_spiRead
   956  049D  1283               	bcf	3,5	;RP0=0, select bank0
   957  049E  1303               	bcf	3,6	;RP1=0, select bank0
   958  049F  00DB               	movwf	??_main
   959  04A0  085B               	movf	??_main,w
   960  04A1  00FA               	movwf	_Sensor1
   961  04A2                     l1901:
   962                           
   963                           ;Master.c: 67:     TRISCbits.TRISC4 = 1;
   964  04A2  3003               	movlw	3
   965  04A3  1283               	bcf	3,5	;RP0=0, select bank0
   966  04A4  1303               	bcf	3,6	;RP1=0, select bank0
   967  04A5  00DC               	movwf	??_main+1
   968  04A6  3097               	movlw	151
   969  04A7  00DB               	movwf	??_main
   970  04A8                     u1957:
   971  04A8  0BDB               	decfsz	??_main,f
   972  04A9  2CA8               	goto	u1957
   973  04AA  0BDC               	decfsz	??_main+1,f
   974  04AB  2CA8               	goto	u1957
   975  04AC                     l1903:
   976                           
   977                           ;Master.c: 69:     TRISD = 0;
   978  04AC  1283               	bcf	3,5	;RP0=0, select bank0
   979  04AD  1303               	bcf	3,6	;RP1=0, select bank0
   980  04AE  1485               	bsf	5,1	;volatile
   981  04AF                     l1905:
   982                           
   983                           ;Master.c: 70:     ANSEL = 0;
   984  04AF  1105               	bcf	5,2	;volatile
   985  04B0                     l1907:
   986                           
   987                           ;Master.c: 72:     TRISA = 0;
   988  04B0  3003               	movlw	3
   989  04B1  1283               	bcf	3,5	;RP0=0, select bank0
   990  04B2  1303               	bcf	3,6	;RP1=0, select bank0
   991  04B3  00DC               	movwf	??_main+1
   992  04B4  3097               	movlw	151
   993  04B5  00DB               	movwf	??_main
   994  04B6                     u1967:
   995  04B6  0BDB               	decfsz	??_main,f
   996  04B7  2CB6               	goto	u1967
   997  04B8  0BDC               	decfsz	??_main+1,f
   998  04B9  2CB6               	goto	u1967
   999  04BA                     l1909:
  1000                           
  1001                           ;Master.c: 73:     TRISB = 0;
  1002  04BA  3002               	movlw	2
  1003  04BB  120A  158A  2796  120A  118A  	fcall	_spiWrite
  1004  04C0                     l1911:
  1005                           
  1006                           ;Master.c: 74:     Sensor1 = 0;
  1007  04C0  120A  158A  27A3  120A  118A  	fcall	_spiRead
  1008  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1009  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1010  04C7  00DB               	movwf	??_main
  1011  04C8  085B               	movf	??_main,w
  1012  04C9  00F9               	movwf	_Sensor2
  1013  04CA                     l1913:
  1014                           
  1015                           ;Master.c: 75:     Sensor2 = 0;
  1016  04CA  3003               	movlw	3
  1017  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1018  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1019  04CD  00DC               	movwf	??_main+1
  1020  04CE  3097               	movlw	151
  1021  04CF  00DB               	movwf	??_main
  1022  04D0                     u1977:
  1023  04D0  0BDB               	decfsz	??_main,f
  1024  04D1  2CD0               	goto	u1977
  1025  04D2  0BDC               	decfsz	??_main+1,f
  1026  04D3  2CD0               	goto	u1977
  1027  04D4                     l1915:
  1028                           
  1029                           ;Master.c: 77: 
  1030  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1031  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1032  04D6  1505               	bsf	5,2	;volatile
  1033  04D7                     l1917:
  1034                           
  1035                           ;Master.c: 78:     INTCONbits.GIE = 1;
  1036  04D7  1185               	bcf	5,3	;volatile
  1037  04D8                     l1919:
  1038                           
  1039                           ;Master.c: 80:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  1040  04D8  3003               	movlw	3
  1041  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1042  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1043  04DB  00DC               	movwf	??_main+1
  1044  04DC  3097               	movlw	151
  1045  04DD  00DB               	movwf	??_main
  1046  04DE                     u1987:
  1047  04DE  0BDB               	decfsz	??_main,f
  1048  04DF  2CDE               	goto	u1987
  1049  04E0  0BDC               	decfsz	??_main+1,f
  1050  04E1  2CDE               	goto	u1987
  1051  04E2                     l1921:
  1052                           
  1053                           ;Master.c: 81: }
  1054  04E2  3003               	movlw	3
  1055  04E3  120A  158A  2796  120A  118A  	fcall	_spiWrite
  1056  04E8                     l1923:
  1057                           
  1058                           ;Master.c: 82: 
  1059  04E8  120A  158A  27A3  120A  118A  	fcall	_spiRead
  1060  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1061  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1062  04EF  00DB               	movwf	??_main
  1063  04F0  085B               	movf	??_main,w
  1064  04F1  00F8               	movwf	_Sensor3
  1065  04F2                     l1925:
  1066                           
  1067                           ;Master.c: 83: 
  1068  04F2  3003               	movlw	3
  1069  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1070  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1071  04F5  00DC               	movwf	??_main+1
  1072  04F6  3097               	movlw	151
  1073  04F7  00DB               	movwf	??_main
  1074  04F8                     u1997:
  1075  04F8  0BDB               	decfsz	??_main,f
  1076  04F9  2CF8               	goto	u1997
  1077  04FA  0BDC               	decfsz	??_main+1,f
  1078  04FB  2CF8               	goto	u1997
  1079                           
  1080                           ;Master.c: 85: 
  1081  04FC  120A  118A  27F3  120A  118A  	fcall	_Lcd_Clear
  1082                           
  1083                           ;Master.c: 86: 
  1084  0501  01F7               	clrf	Lcd_Set_Cursor@b
  1085  0502  0AF7               	incf	Lcd_Set_Cursor@b,f
  1086  0503  3001               	movlw	1
  1087  0504  120A  118A  27B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1088  0509                     l1927:
  1089                           
  1090                           ;Master.c: 87: void __attribute__((picinterrupt(("")))) oli(void) {
  1091  0509  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1092  050A  120A  118A  2770  120A  118A  	fcall	_Lcd_Write_String
  1093  050F                     l1929:
  1094                           
  1095                           ;Master.c: 88: 
  1096  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0511  01CF               	clrf	WriteFloat@columna
  1099  0512  0ACF               	incf	WriteFloat@columna,f
  1100  0513  087A               	movf	_Sensor1,w
  1101  0514  00DB               	movwf	??_main
  1102  0515  085B               	movf	??_main,w
  1103  0516  00D0               	movwf	WriteFloat@valor
  1104  0517  3002               	movlw	2
  1105  0518  120A  118A  237B  120A  118A  	fcall	_WriteFloat
  1106  051D                     l1931:
  1107                           
  1108                           ;Master.c: 89:     if (PIR1bits.RCIF) {
  1109  051D  3006               	movlw	6
  1110  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1111  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0520  00DB               	movwf	??_main
  1113  0521  085B               	movf	??_main,w
  1114  0522  00CF               	movwf	WriteFloat@columna
  1115  0523  0879               	movf	_Sensor2,w
  1116  0524  00DC               	movwf	??_main+1
  1117  0525  085C               	movf	??_main+1,w
  1118  0526  00D0               	movwf	WriteFloat@valor
  1119  0527  3002               	movlw	2
  1120  0528  120A  118A  237B  120A  118A  	fcall	_WriteFloat
  1121  052D                     l1933:
  1122                           
  1123                           ;Master.c: 90:         comando = Receive();
  1124  052D  300B               	movlw	11
  1125  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1126  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0530  00DB               	movwf	??_main
  1128  0531  085B               	movf	??_main,w
  1129  0532  00CF               	movwf	WriteFloat@columna
  1130  0533  0878               	movf	_Sensor3,w
  1131  0534  00DC               	movwf	??_main+1
  1132  0535  085C               	movf	??_main+1,w
  1133  0536  00D0               	movwf	WriteFloat@valor
  1134  0537  3002               	movlw	2
  1135  0538  120A  118A  237B  120A  118A  	fcall	_WriteFloat
  1136  053D  2C84               	goto	l1891
  1137  053E  120A  118A  280C   	ljmp	start
  1138  0541                     __end_of_main:
  1139                           
  1140                           	psect	text1
  1141  0F96                     __ptext1:	
  1142 ;; *************** function _spiWrite *****************
  1143 ;; Defined at:
  1144 ;;		line 34 in file "SPI.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  dat             1    wreg     unsigned char 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  dat             1    3[COMMON] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         1       0       0       0       0
  1162 ;;Total ram usage:        1 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _spiWrite
  1174  0F96                     _spiWrite:
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _spiWrite: [wreg]
  1178                           ;spiWrite@dat stored from wreg
  1179  0F96  00F3               	movwf	spiWrite@dat
  1180  0F97                     l1125:
  1181                           
  1182                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1183  0F97  0873               	movf	spiWrite@dat,w
  1184  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0F9A  0093               	movwf	19	;volatile
  1187  0F9B                     l167:
  1188  0F9B  0008               	return
  1189  0F9C                     __end_of_spiWrite:
  1190                           
  1191                           	psect	text2
  1192  0FA3                     __ptext2:	
  1193 ;; *************** function _spiRead *****************
  1194 ;; Defined at:
  1195 ;;		line 47 in file "SPI.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      unsigned char 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    3
  1216 ;; This function calls:
  1217 ;;		_spiReceiveWait
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _spiRead
  1225  0FA3                     _spiRead:
  1226  0FA3                     l1127:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1229                           
  1230                           
  1231                           ;SPI.c: 49:     spiReceiveWait();
  1232  0FA3  120A  158A  279C  120A  158A  	fcall	_spiReceiveWait
  1233  0FA8                     l1129:
  1234                           
  1235                           ;SPI.c: 50:     return(SSPBUF);
  1236  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0FAA  0813               	movf	19,w	;volatile
  1239  0FAB                     l175:
  1240  0FAB  0008               	return
  1241  0FAC                     __end_of_spiRead:
  1242                           
  1243                           	psect	text3
  1244  0F9C                     __ptext3:	
  1245 ;; *************** function _spiReceiveWait *****************
  1246 ;; Defined at:
  1247 ;;		line 29 in file "SPI.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		None
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_spiRead
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _spiReceiveWait
  1277  0F9C                     _spiReceiveWait:
  1278  0F9C                     l829:	
  1279                           ;incstack = 0
  1280                           ; Regs used in _spiReceiveWait: []
  1281                           
  1282  0F9C                     l161:	
  1283                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1284                           
  1285  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0F9E  1C14               	btfss	20,0	;volatile
  1288  0F9F  2FA1               	goto	u81
  1289  0FA0  2FA2               	goto	u80
  1290  0FA1                     u81:
  1291  0FA1  2F9C               	goto	l161
  1292  0FA2                     u80:
  1293  0FA2                     l164:
  1294  0FA2  0008               	return
  1295  0FA3                     __end_of_spiReceiveWait:
  1296                           
  1297                           	psect	text4
  1298  07D6                     __ptext4:	
  1299 ;; *************** function _setup *****************
  1300 ;; Defined at:
  1301 ;;		line 100 in file "Master.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    3
  1322 ;; This function calls:
  1323 ;;		_spiInit
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _setup
  1331  07D6                     _setup:
  1332  07D6                     l1573:	
  1333                           ;incstack = 0
  1334                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1335                           
  1336                           
  1337                           ;Master.c: 102:     unidad = temp / 100;
  1338  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  1339  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  1340  07D8  0187               	clrf	7	;volatile
  1341  07D9                     l1575:
  1342                           
  1343                           ;Master.c: 103:     temp = temp - unidad * 100;
  1344  07D9  1607               	bsf	7,4	;volatile
  1345  07DA                     l1577:
  1346                           
  1347                           ;Master.c: 104:     dec = temp / 10;
  1348  07DA  1787               	bsf	7,7	;volatile
  1349                           
  1350                           ;Master.c: 105:     temp = temp - dec * 10;
  1351  07DB  0188               	clrf	8	;volatile
  1352                           
  1353                           ;Master.c: 106:     cent = temp;
  1354  07DC  1683               	bsf	3,5	;RP0=1, select bank3
  1355  07DD  1703               	bsf	3,6	;RP1=1, select bank3
  1356  07DE  0188               	clrf	8	;volatile
  1357                           
  1358                           ;Master.c: 107: 
  1359  07DF  0189               	clrf	9	;volatile
  1360                           
  1361                           ;Master.c: 108: 
  1362  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  1363  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  1364  07E2  0185               	clrf	5	;volatile
  1365                           
  1366                           ;Master.c: 109:     unidad = unidad + 48;
  1367  07E3  0186               	clrf	6	;volatile
  1368                           
  1369                           ;Master.c: 110:     dec = dec + 48;
  1370  07E4  01FA               	clrf	_Sensor1
  1371                           
  1372                           ;Master.c: 111:     cent = cent + 48;
  1373  07E5  01F9               	clrf	_Sensor2
  1374                           
  1375                           ;Master.c: 112: 
  1376  07E6  01F8               	clrf	_Sensor3
  1377  07E7                     l1579:
  1378                           
  1379                           ;Master.c: 114:     Lcd_Set_Cursor(fila, columna);
  1380  07E7  178B               	bsf	11,7	;volatile
  1381  07E8                     l1581:
  1382                           
  1383                           ;Master.c: 115:     Lcd_Write_Char(unidad);
  1384  07E8  170B               	bsf	11,6	;volatile
  1385  07E9                     l1583:
  1386                           
  1387                           ;Master.c: 116:     Lcd_Set_Cursor(fila, columna + 1);
  1388  07E9  01F3               	clrf	spiInit@sDataSample
  1389  07EA  01F4               	clrf	spiInit@sClockIdle
  1390  07EB  01F5               	clrf	spiInit@sTransmitEdge
  1391  07EC  3020               	movlw	32
  1392  07ED  120A  158A  27D0  120A  118A  	fcall	_spiInit
  1393  07F2                     l65:
  1394  07F2  0008               	return
  1395  07F3                     __end_of_setup:
  1396                           
  1397                           	psect	text5
  1398  0FD0                     __ptext5:	
  1399 ;; *************** function _spiInit *****************
  1400 ;; Defined at:
  1401 ;;		line 12 in file "SPI.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  sType           1    wreg     enum E1264
  1404 ;;  sDataSample     1    3[COMMON] enum E1272
  1405 ;;  sClockIdle      1    4[COMMON] enum E1276
  1406 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  sType           1    6[COMMON] enum E1264
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         3       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0
  1421 ;;      Totals:         4       0       0       0       0
  1422 ;;Total ram usage:        4 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_setup
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _spiInit
  1434  0FD0                     _spiInit:
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1438                           ;spiInit@sType stored from wreg
  1439  0FD0  00F6               	movwf	spiInit@sType
  1440  0FD1                     l1303:
  1441                           
  1442                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1443  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0FD3  1287               	bcf	7,5	;volatile
  1446                           
  1447                           ;SPI.c: 15:     if(sType & 0b00000100)
  1448  0FD4  1D76               	btfss	spiInit@sType,2
  1449  0FD5  2FD7               	goto	u901
  1450  0FD6  2FD8               	goto	u900
  1451  0FD7                     u901:
  1452  0FD7  2FDC               	goto	l1309
  1453  0FD8                     u900:
  1454  0FD8                     l1305:
  1455                           
  1456                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1457  0FD8  0875               	movf	spiInit@sTransmitEdge,w
  1458  0FD9  0094               	movwf	20	;volatile
  1459  0FDA                     l1307:
  1460                           
  1461                           ;SPI.c: 18:         TRISC3 = 1;
  1462  0FDA  1587               	bsf	7,3	;volatile
  1463                           
  1464                           ;SPI.c: 19:     }
  1465  0FDB  2FE0               	goto	l157
  1466  0FDC                     l1309:
  1467                           
  1468                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1469  0FDC  0873               	movf	spiInit@sDataSample,w
  1470  0FDD  0475               	iorwf	spiInit@sTransmitEdge,w
  1471  0FDE  0094               	movwf	20	;volatile
  1472  0FDF                     l1311:
  1473                           
  1474                           ;SPI.c: 23:         TRISC3 = 0;
  1475  0FDF  1187               	bcf	7,3	;volatile
  1476  0FE0                     l157:	
  1477                           ;SPI.c: 24:     }
  1478                           
  1479                           
  1480                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1481  0FE0  0876               	movf	spiInit@sType,w
  1482  0FE1  0474               	iorwf	spiInit@sClockIdle,w
  1483  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0FE4  0094               	movwf	20	;volatile
  1486  0FE5                     l158:
  1487  0FE5  0008               	return
  1488  0FE6                     __end_of_spiInit:
  1489                           
  1490                           	psect	text6
  1491  037B                     __ptext6:	
  1492 ;; *************** function _WriteFloat *****************
  1493 ;; Defined at:
  1494 ;;		line 132 in file "Master.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  fila            1    wreg     unsigned char 
  1497 ;;  columna         1   47[BANK0 ] unsigned char 
  1498 ;;  valor           1   48[BANK0 ] unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  fila            1   56[BANK0 ] unsigned char 
  1501 ;;  temp            2   57[BANK0 ] unsigned int 
  1502 ;;  dec             1   55[BANK0 ] unsigned char 
  1503 ;;  unidad          1   54[BANK0 ] unsigned char 
  1504 ;;  cent            1   53[BANK0 ] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         0       2       0       0       0
  1515 ;;      Locals:         0       6       0       0       0
  1516 ;;      Temps:          0       4       0       0       0
  1517 ;;      Totals:         0      12       0       0       0
  1518 ;;Total ram usage:       12 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    5
  1521 ;; This function calls:
  1522 ;;		_Lcd_Set_Cursor
  1523 ;;		_Lcd_Write_Char
  1524 ;;		_Lcd_Write_String
  1525 ;;		___flmul
  1526 ;;		___fltol
  1527 ;;		___lwdiv
  1528 ;;		___wmul
  1529 ;;		___xxtofl
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _WriteFloat
  1537  037B                     _WriteFloat:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _WriteFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1541                           ;WriteFloat@fila stored from wreg
  1542  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1543  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1544  037D  00D8               	movwf	WriteFloat@fila
  1545  037E                     l1855:
  1546  037E  0850               	movf	WriteFloat@valor,w
  1547  037F  00D1               	movwf	??_WriteFloat
  1548  0380  01D2               	clrf	??_WriteFloat+1
  1549  0381  01D3               	clrf	??_WriteFloat+2
  1550  0382  01D4               	clrf	??_WriteFloat+3
  1551  0383  0854               	movf	??_WriteFloat+3,w
  1552  0384  00F6               	movwf	___xxtofl@val+3
  1553  0385  0853               	movf	??_WriteFloat+2,w
  1554  0386  00F5               	movwf	___xxtofl@val+2
  1555  0387  0852               	movf	??_WriteFloat+1,w
  1556  0388  00F4               	movwf	___xxtofl@val+1
  1557  0389  0851               	movf	??_WriteFloat,w
  1558  038A  00F3               	movwf	___xxtofl@val
  1559  038B  3001               	movlw	1
  1560  038C  120A  118A  2541  120A  118A  	fcall	___xxtofl
  1561  0391  0876               	movf	?___xxtofl+3,w
  1562  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0394  00B1               	movwf	___flmul@a+3
  1565  0395  0875               	movf	?___xxtofl+2,w
  1566  0396  00B0               	movwf	___flmul@a+2
  1567  0397  0874               	movf	?___xxtofl+1,w
  1568  0398  00AF               	movwf	___flmul@a+1
  1569  0399  0873               	movf	?___xxtofl,w
  1570  039A  00AE               	movwf	___flmul@a
  1571  039B  303F               	movlw	63
  1572  039C  00AD               	movwf	___flmul@b+3
  1573  039D  30FB               	movlw	251
  1574  039E  00AC               	movwf	___flmul@b+2
  1575  039F  3002               	movlw	2
  1576  03A0  00AB               	movwf	___flmul@b+1
  1577  03A1  300C               	movlw	12
  1578  03A2  00AA               	movwf	___flmul@b
  1579  03A3  120A  118A  201A  120A  118A  	fcall	___flmul
  1580  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1581  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1582  03AA  082D               	movf	?___flmul+3,w
  1583  03AB  00C7               	movwf	___fltol@f1+3
  1584  03AC  082C               	movf	?___flmul+2,w
  1585  03AD  00C6               	movwf	___fltol@f1+2
  1586  03AE  082B               	movf	?___flmul+1,w
  1587  03AF  00C5               	movwf	___fltol@f1+1
  1588  03B0  082A               	movf	?___flmul,w
  1589  03B1  00C4               	movwf	___fltol@f1
  1590  03B2  120A  118A  25FD  120A  118A  	fcall	___fltol
  1591  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1592  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1593  03B9  0845               	movf	?___fltol+1,w
  1594  03BA  00DA               	movwf	WriteFloat@temp+1
  1595  03BB  0844               	movf	?___fltol,w
  1596  03BC  00D9               	movwf	WriteFloat@temp
  1597  03BD                     l1857:
  1598  03BD  3064               	movlw	100
  1599  03BE  00F3               	movwf	___lwdiv@divisor
  1600  03BF  3000               	movlw	0
  1601  03C0  00F4               	movwf	___lwdiv@divisor+1
  1602  03C1  085A               	movf	WriteFloat@temp+1,w
  1603  03C2  00F6               	movwf	___lwdiv@dividend+1
  1604  03C3  0859               	movf	WriteFloat@temp,w
  1605  03C4  00F5               	movwf	___lwdiv@dividend
  1606  03C5  120A  118A  26D6  120A  118A  	fcall	___lwdiv
  1607  03CA  0873               	movf	?___lwdiv,w
  1608  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1609  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1610  03CD  00D1               	movwf	??_WriteFloat
  1611  03CE  0851               	movf	??_WriteFloat,w
  1612  03CF  00D6               	movwf	WriteFloat@unidad
  1613  03D0                     l1859:
  1614  03D0  0856               	movf	WriteFloat@unidad,w
  1615  03D1  00D1               	movwf	??_WriteFloat
  1616  03D2  01D2               	clrf	??_WriteFloat+1
  1617  03D3  0851               	movf	??_WriteFloat,w
  1618  03D4  00F3               	movwf	___wmul@multiplier
  1619  03D5  0852               	movf	??_WriteFloat+1,w
  1620  03D6  00F4               	movwf	___wmul@multiplier+1
  1621  03D7  309C               	movlw	156
  1622  03D8  00F5               	movwf	___wmul@multiplicand
  1623  03D9  30FF               	movlw	255
  1624  03DA  00F6               	movwf	___wmul@multiplicand+1
  1625  03DB  120A  118A  271C  120A  118A  	fcall	___wmul
  1626  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1627  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1628  03E2  0859               	movf	WriteFloat@temp,w
  1629  03E3  0773               	addwf	?___wmul,w
  1630  03E4  00D9               	movwf	WriteFloat@temp
  1631  03E5  085A               	movf	WriteFloat@temp+1,w
  1632  03E6  1803               	skipnc
  1633  03E7  0A5A               	incf	WriteFloat@temp+1,w
  1634  03E8  0774               	addwf	?___wmul+1,w
  1635  03E9  00DA               	movwf	WriteFloat@temp+1
  1636  03EA                     l1861:
  1637  03EA  300A               	movlw	10
  1638  03EB  00F3               	movwf	___lwdiv@divisor
  1639  03EC  3000               	movlw	0
  1640  03ED  00F4               	movwf	___lwdiv@divisor+1
  1641  03EE  085A               	movf	WriteFloat@temp+1,w
  1642  03EF  00F6               	movwf	___lwdiv@dividend+1
  1643  03F0  0859               	movf	WriteFloat@temp,w
  1644  03F1  00F5               	movwf	___lwdiv@dividend
  1645  03F2  120A  118A  26D6  120A  118A  	fcall	___lwdiv
  1646  03F7  0873               	movf	?___lwdiv,w
  1647  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1648  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1649  03FA  00D1               	movwf	??_WriteFloat
  1650  03FB  0851               	movf	??_WriteFloat,w
  1651  03FC  00D7               	movwf	WriteFloat@dec
  1652  03FD                     l1863:
  1653  03FD  0857               	movf	WriteFloat@dec,w
  1654  03FE  00D1               	movwf	??_WriteFloat
  1655  03FF  01D2               	clrf	??_WriteFloat+1
  1656  0400  0851               	movf	??_WriteFloat,w
  1657  0401  00F3               	movwf	___wmul@multiplier
  1658  0402  0852               	movf	??_WriteFloat+1,w
  1659  0403  00F4               	movwf	___wmul@multiplier+1
  1660  0404  30F6               	movlw	246
  1661  0405  00F5               	movwf	___wmul@multiplicand
  1662  0406  30FF               	movlw	255
  1663  0407  00F6               	movwf	___wmul@multiplicand+1
  1664  0408  120A  118A  271C  120A  118A  	fcall	___wmul
  1665  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1666  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1667  040F  0859               	movf	WriteFloat@temp,w
  1668  0410  0773               	addwf	?___wmul,w
  1669  0411  00D9               	movwf	WriteFloat@temp
  1670  0412  085A               	movf	WriteFloat@temp+1,w
  1671  0413  1803               	skipnc
  1672  0414  0A5A               	incf	WriteFloat@temp+1,w
  1673  0415  0774               	addwf	?___wmul+1,w
  1674  0416  00DA               	movwf	WriteFloat@temp+1
  1675  0417                     l1865:
  1676  0417  0859               	movf	WriteFloat@temp,w
  1677  0418  00D1               	movwf	??_WriteFloat
  1678  0419  0851               	movf	??_WriteFloat,w
  1679  041A  00D5               	movwf	WriteFloat@cent
  1680  041B                     l1867:
  1681  041B  0856               	movf	WriteFloat@unidad,w
  1682  041C  3E30               	addlw	48
  1683  041D  00D1               	movwf	??_WriteFloat
  1684  041E  0851               	movf	??_WriteFloat,w
  1685  041F  00D6               	movwf	WriteFloat@unidad
  1686  0420                     l1869:
  1687  0420  0857               	movf	WriteFloat@dec,w
  1688  0421  3E30               	addlw	48
  1689  0422  00D1               	movwf	??_WriteFloat
  1690  0423  0851               	movf	??_WriteFloat,w
  1691  0424  00D7               	movwf	WriteFloat@dec
  1692  0425                     l1871:
  1693  0425  0855               	movf	WriteFloat@cent,w
  1694  0426  3E30               	addlw	48
  1695  0427  00D1               	movwf	??_WriteFloat
  1696  0428  0851               	movf	??_WriteFloat,w
  1697  0429  00D5               	movwf	WriteFloat@cent
  1698  042A                     l1873:
  1699  042A  084F               	movf	WriteFloat@columna,w
  1700  042B  00D1               	movwf	??_WriteFloat
  1701  042C  0851               	movf	??_WriteFloat,w
  1702  042D  00F7               	movwf	Lcd_Set_Cursor@b
  1703  042E  0858               	movf	WriteFloat@fila,w
  1704  042F  120A  118A  27B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1705  0434                     l1875:
  1706  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0436  0856               	movf	WriteFloat@unidad,w
  1709  0437  120A  158A  27BA  120A  118A  	fcall	_Lcd_Write_Char
  1710  043C                     l1877:
  1711  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1712  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1713  043E  084F               	movf	WriteFloat@columna,w
  1714  043F  3E01               	addlw	1
  1715  0440  00D1               	movwf	??_WriteFloat
  1716  0441  0851               	movf	??_WriteFloat,w
  1717  0442  00F7               	movwf	Lcd_Set_Cursor@b
  1718  0443  0858               	movf	WriteFloat@fila,w
  1719  0444  120A  118A  27B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1720  0449                     l1879:
  1721  0449  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1722  044A  120A  118A  2770  120A  118A  	fcall	_Lcd_Write_String
  1723  044F                     l1881:
  1724  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0451  084F               	movf	WriteFloat@columna,w
  1727  0452  3E02               	addlw	2
  1728  0453  00D1               	movwf	??_WriteFloat
  1729  0454  0851               	movf	??_WriteFloat,w
  1730  0455  00F7               	movwf	Lcd_Set_Cursor@b
  1731  0456  0858               	movf	WriteFloat@fila,w
  1732  0457  120A  118A  27B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1733  045C                     l1883:
  1734  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1735  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1736  045E  0857               	movf	WriteFloat@dec,w
  1737  045F  120A  158A  27BA  120A  118A  	fcall	_Lcd_Write_Char
  1738  0464                     l1885:
  1739  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0466  084F               	movf	WriteFloat@columna,w
  1742  0467  3E03               	addlw	3
  1743  0468  00D1               	movwf	??_WriteFloat
  1744  0469  0851               	movf	??_WriteFloat,w
  1745  046A  00F7               	movwf	Lcd_Set_Cursor@b
  1746  046B  0858               	movf	WriteFloat@fila,w
  1747  046C  120A  118A  27B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1748  0471                     l1887:
  1749  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0473  0855               	movf	WriteFloat@cent,w
  1752  0474  120A  158A  27BA  120A  118A  	fcall	_Lcd_Write_Char
  1753  0479                     l74:
  1754  0479  0008               	return
  1755  047A                     __end_of_WriteFloat:
  1756                           
  1757                           	psect	text7
  1758  0541                     __ptext7:	
  1759 ;; *************** function ___xxtofl *****************
  1760 ;; Defined at:
  1761 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  sign            1    wreg     unsigned char 
  1764 ;;  val             4    3[COMMON] long 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  sign            1    4[BANK0 ] unsigned char 
  1767 ;;  arg             4    6[BANK0 ] unsigned long 
  1768 ;;  exp             1    5[BANK0 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  4    3[COMMON] unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         4       0       0       0       0
  1779 ;;      Locals:         0       6       0       0       0
  1780 ;;      Temps:          0       4       0       0       0
  1781 ;;      Totals:         4      10       0       0       0
  1782 ;;Total ram usage:       14 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    2
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_WriteFloat
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function ___xxtofl
  1794  0541                     ___xxtofl:
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1798                           ;___xxtofl@sign stored from wreg
  1799  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0543  00A4               	movwf	___xxtofl@sign
  1802  0544                     l1787:
  1803  0544  0824               	movf	___xxtofl@sign,w
  1804  0545  1903               	btfsc	3,2
  1805  0546  2D48               	goto	u1801
  1806  0547  2D49               	goto	u1800
  1807  0548                     u1801:
  1808  0548  2D5D               	goto	l1793
  1809  0549                     u1800:
  1810  0549                     l1789:
  1811  0549  1FF6               	btfss	___xxtofl@val+3,7
  1812  054A  2D4C               	goto	u1811
  1813  054B  2D4D               	goto	u1810
  1814  054C                     u1811:
  1815  054C  2D5D               	goto	l1793
  1816  054D                     u1810:
  1817  054D                     l1791:
  1818  054D  0973               	comf	___xxtofl@val,w
  1819  054E  00A6               	movwf	___xxtofl@arg
  1820  054F  0974               	comf	___xxtofl@val+1,w
  1821  0550  00A7               	movwf	___xxtofl@arg+1
  1822  0551  0975               	comf	___xxtofl@val+2,w
  1823  0552  00A8               	movwf	___xxtofl@arg+2
  1824  0553  0976               	comf	___xxtofl@val+3,w
  1825  0554  00A9               	movwf	___xxtofl@arg+3
  1826  0555  0AA6               	incf	___xxtofl@arg,f
  1827  0556  1903               	skipnz
  1828  0557  0AA7               	incf	___xxtofl@arg+1,f
  1829  0558  1903               	skipnz
  1830  0559  0AA8               	incf	___xxtofl@arg+2,f
  1831  055A  1903               	skipnz
  1832  055B  0AA9               	incf	___xxtofl@arg+3,f
  1833  055C  2D65               	goto	l694
  1834  055D                     l1793:
  1835  055D  0876               	movf	___xxtofl@val+3,w
  1836  055E  00A9               	movwf	___xxtofl@arg+3
  1837  055F  0875               	movf	___xxtofl@val+2,w
  1838  0560  00A8               	movwf	___xxtofl@arg+2
  1839  0561  0874               	movf	___xxtofl@val+1,w
  1840  0562  00A7               	movwf	___xxtofl@arg+1
  1841  0563  0873               	movf	___xxtofl@val,w
  1842  0564  00A6               	movwf	___xxtofl@arg
  1843  0565                     l694:
  1844  0565  0876               	movf	___xxtofl@val+3,w
  1845  0566  0475               	iorwf	___xxtofl@val+2,w
  1846  0567  0474               	iorwf	___xxtofl@val+1,w
  1847  0568  0473               	iorwf	___xxtofl@val,w
  1848  0569  1D03               	skipz
  1849  056A  2D6C               	goto	u1821
  1850  056B  2D6D               	goto	u1820
  1851  056C                     u1821:
  1852  056C  2D76               	goto	l1799
  1853  056D                     u1820:
  1854  056D                     l1795:
  1855  056D  3000               	movlw	0
  1856  056E  00F6               	movwf	?___xxtofl+3
  1857  056F  3000               	movlw	0
  1858  0570  00F5               	movwf	?___xxtofl+2
  1859  0571  3000               	movlw	0
  1860  0572  00F4               	movwf	?___xxtofl+1
  1861  0573  3000               	movlw	0
  1862  0574  00F3               	movwf	?___xxtofl
  1863  0575  2DFC               	goto	l696
  1864  0576                     l1799:
  1865  0576  3096               	movlw	150
  1866  0577  00A0               	movwf	??___xxtofl
  1867  0578  0820               	movf	??___xxtofl,w
  1868  0579  00A5               	movwf	___xxtofl@exp
  1869  057A  2D88               	goto	l1803
  1870  057B                     l1801:
  1871  057B  3001               	movlw	1
  1872  057C  00A0               	movwf	??___xxtofl
  1873  057D  0820               	movf	??___xxtofl,w
  1874  057E  07A5               	addwf	___xxtofl@exp,f
  1875  057F  3001               	movlw	1
  1876  0580                     u1835:
  1877  0580  1003               	clrc
  1878  0581  0CA9               	rrf	___xxtofl@arg+3,f
  1879  0582  0CA8               	rrf	___xxtofl@arg+2,f
  1880  0583  0CA7               	rrf	___xxtofl@arg+1,f
  1881  0584  0CA6               	rrf	___xxtofl@arg,f
  1882  0585  3EFF               	addlw	-1
  1883  0586  1D03               	skipz
  1884  0587  2D80               	goto	u1835
  1885  0588                     l1803:
  1886  0588  30FE               	movlw	254
  1887  0589  0529               	andwf	___xxtofl@arg+3,w
  1888  058A  1D03               	btfss	3,2
  1889  058B  2D8D               	goto	u1841
  1890  058C  2D8E               	goto	u1840
  1891  058D                     u1841:
  1892  058D  2D7B               	goto	l1801
  1893  058E                     u1840:
  1894  058E  2DAA               	goto	l700
  1895  058F                     l1805:
  1896  058F  3001               	movlw	1
  1897  0590  00A0               	movwf	??___xxtofl
  1898  0591  0820               	movf	??___xxtofl,w
  1899  0592  07A5               	addwf	___xxtofl@exp,f
  1900  0593                     l1807:
  1901  0593  3001               	movlw	1
  1902  0594  07A6               	addwf	___xxtofl@arg,f
  1903  0595  3000               	movlw	0
  1904  0596  1803               	skipnc
  1905  0597  3001               	movlw	1
  1906  0598  07A7               	addwf	___xxtofl@arg+1,f
  1907  0599  3000               	movlw	0
  1908  059A  1803               	skipnc
  1909  059B  3001               	movlw	1
  1910  059C  07A8               	addwf	___xxtofl@arg+2,f
  1911  059D  3000               	movlw	0
  1912  059E  1803               	skipnc
  1913  059F  3001               	movlw	1
  1914  05A0  07A9               	addwf	___xxtofl@arg+3,f
  1915  05A1                     l1809:
  1916  05A1  3001               	movlw	1
  1917  05A2                     u1855:
  1918  05A2  1003               	clrc
  1919  05A3  0CA9               	rrf	___xxtofl@arg+3,f
  1920  05A4  0CA8               	rrf	___xxtofl@arg+2,f
  1921  05A5  0CA7               	rrf	___xxtofl@arg+1,f
  1922  05A6  0CA6               	rrf	___xxtofl@arg,f
  1923  05A7  3EFF               	addlw	-1
  1924  05A8  1D03               	skipz
  1925  05A9  2DA2               	goto	u1855
  1926  05AA                     l700:
  1927  05AA  30FF               	movlw	255
  1928  05AB  0529               	andwf	___xxtofl@arg+3,w
  1929  05AC  1D03               	btfss	3,2
  1930  05AD  2DAF               	goto	u1861
  1931  05AE  2DB0               	goto	u1860
  1932  05AF                     u1861:
  1933  05AF  2D8F               	goto	l1805
  1934  05B0                     u1860:
  1935  05B0  2DBC               	goto	l1813
  1936  05B1                     l1811:
  1937  05B1  3001               	movlw	1
  1938  05B2  02A5               	subwf	___xxtofl@exp,f
  1939  05B3  3001               	movlw	1
  1940  05B4  00A0               	movwf	??___xxtofl
  1941  05B5                     u1875:
  1942  05B5  1003               	clrc
  1943  05B6  0DA6               	rlf	___xxtofl@arg,f
  1944  05B7  0DA7               	rlf	___xxtofl@arg+1,f
  1945  05B8  0DA8               	rlf	___xxtofl@arg+2,f
  1946  05B9  0DA9               	rlf	___xxtofl@arg+3,f
  1947  05BA  0BA0               	decfsz	??___xxtofl,f
  1948  05BB  2DB5               	goto	u1875
  1949  05BC                     l1813:
  1950  05BC  1BA8               	btfsc	___xxtofl@arg+2,7
  1951  05BD  2DBF               	goto	u1881
  1952  05BE  2DC0               	goto	u1880
  1953  05BF                     u1881:
  1954  05BF  2DC6               	goto	l707
  1955  05C0                     u1880:
  1956  05C0                     l1815:
  1957  05C0  3002               	movlw	2
  1958  05C1  0225               	subwf	___xxtofl@exp,w
  1959  05C2  1803               	skipnc
  1960  05C3  2DC5               	goto	u1891
  1961  05C4  2DC6               	goto	u1890
  1962  05C5                     u1891:
  1963  05C5  2DB1               	goto	l1811
  1964  05C6                     u1890:
  1965  05C6                     l707:
  1966  05C6  1825               	btfsc	___xxtofl@exp,0
  1967  05C7  2DC9               	goto	u1901
  1968  05C8  2DCA               	goto	u1900
  1969  05C9                     u1901:
  1970  05C9  2DD2               	goto	l708
  1971  05CA                     u1900:
  1972  05CA                     l1817:
  1973  05CA  30FF               	movlw	255
  1974  05CB  05A6               	andwf	___xxtofl@arg,f
  1975  05CC  30FF               	movlw	255
  1976  05CD  05A7               	andwf	___xxtofl@arg+1,f
  1977  05CE  307F               	movlw	127
  1978  05CF  05A8               	andwf	___xxtofl@arg+2,f
  1979  05D0  30FF               	movlw	255
  1980  05D1  05A9               	andwf	___xxtofl@arg+3,f
  1981  05D2                     l708:
  1982  05D2  1003               	clrc
  1983  05D3  0CA5               	rrf	___xxtofl@exp,f
  1984  05D4                     l1819:
  1985  05D4  0825               	movf	___xxtofl@exp,w
  1986  05D5  00A0               	movwf	??___xxtofl
  1987  05D6  01A1               	clrf	??___xxtofl+1
  1988  05D7  01A2               	clrf	??___xxtofl+2
  1989  05D8  01A3               	clrf	??___xxtofl+3
  1990  05D9  3018               	movlw	24
  1991  05DA                     u1915:
  1992  05DA  1003               	clrc
  1993  05DB  0DA0               	rlf	??___xxtofl,f
  1994  05DC  0DA1               	rlf	??___xxtofl+1,f
  1995  05DD  0DA2               	rlf	??___xxtofl+2,f
  1996  05DE  0DA3               	rlf	??___xxtofl+3,f
  1997  05DF                     u1910:
  1998  05DF  3EFF               	addlw	-1
  1999  05E0  1D03               	skipz
  2000  05E1  2DDA               	goto	u1915
  2001  05E2  0820               	movf	??___xxtofl,w
  2002  05E3  04A6               	iorwf	___xxtofl@arg,f
  2003  05E4  0821               	movf	??___xxtofl+1,w
  2004  05E5  04A7               	iorwf	___xxtofl@arg+1,f
  2005  05E6  0822               	movf	??___xxtofl+2,w
  2006  05E7  04A8               	iorwf	___xxtofl@arg+2,f
  2007  05E8  0823               	movf	??___xxtofl+3,w
  2008  05E9  04A9               	iorwf	___xxtofl@arg+3,f
  2009  05EA                     l1821:
  2010  05EA  0824               	movf	___xxtofl@sign,w
  2011  05EB  1903               	btfsc	3,2
  2012  05EC  2DEE               	goto	u1921
  2013  05ED  2DEF               	goto	u1920
  2014  05EE                     u1921:
  2015  05EE  2DF4               	goto	l1827
  2016  05EF                     u1920:
  2017  05EF                     l1823:
  2018  05EF  1FF6               	btfss	___xxtofl@val+3,7
  2019  05F0  2DF2               	goto	u1931
  2020  05F1  2DF3               	goto	u1930
  2021  05F2                     u1931:
  2022  05F2  2DF4               	goto	l1827
  2023  05F3                     u1930:
  2024  05F3                     l1825:
  2025  05F3  17A9               	bsf	___xxtofl@arg+3,7
  2026  05F4                     l1827:
  2027  05F4  0829               	movf	___xxtofl@arg+3,w
  2028  05F5  00F6               	movwf	?___xxtofl+3
  2029  05F6  0828               	movf	___xxtofl@arg+2,w
  2030  05F7  00F5               	movwf	?___xxtofl+2
  2031  05F8  0827               	movf	___xxtofl@arg+1,w
  2032  05F9  00F4               	movwf	?___xxtofl+1
  2033  05FA  0826               	movf	___xxtofl@arg,w
  2034  05FB  00F3               	movwf	?___xxtofl
  2035  05FC                     l696:
  2036  05FC  0008               	return
  2037  05FD                     __end_of___xxtofl:
  2038                           
  2039                           	psect	text8
  2040  071C                     __ptext8:	
  2041 ;; *************** function ___wmul *****************
  2042 ;; Defined at:
  2043 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  multiplier      2    3[COMMON] unsigned int 
  2046 ;;  multiplicand    2    5[COMMON] unsigned int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  product         2    0[BANK0 ] unsigned int 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    3[COMMON] unsigned int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         4       0       0       0       0
  2059 ;;      Locals:         0       2       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         4       2       0       0       0
  2062 ;;Total ram usage:        6 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    2
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_WriteFloat
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function ___wmul
  2074  071C                     ___wmul:
  2075  071C                     l1747:	
  2076                           ;incstack = 0
  2077                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2078                           
  2079  071C  1283               	bcf	3,5	;RP0=0, select bank0
  2080  071D  1303               	bcf	3,6	;RP1=0, select bank0
  2081  071E  01A0               	clrf	___wmul@product
  2082  071F  01A1               	clrf	___wmul@product+1
  2083  0720                     l1749:
  2084  0720  1C73               	btfss	___wmul@multiplier,0
  2085  0721  2F23               	goto	u1691
  2086  0722  2F24               	goto	u1690
  2087  0723                     u1691:
  2088  0723  2F2C               	goto	l261
  2089  0724                     u1690:
  2090  0724                     l1751:
  2091  0724  0875               	movf	___wmul@multiplicand,w
  2092  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0727  07A0               	addwf	___wmul@product,f
  2095  0728  1803               	skipnc
  2096  0729  0AA1               	incf	___wmul@product+1,f
  2097  072A  0876               	movf	___wmul@multiplicand+1,w
  2098  072B  07A1               	addwf	___wmul@product+1,f
  2099  072C                     l261:
  2100  072C  3001               	movlw	1
  2101  072D                     u1705:
  2102  072D  1003               	clrc
  2103  072E  0DF5               	rlf	___wmul@multiplicand,f
  2104  072F  0DF6               	rlf	___wmul@multiplicand+1,f
  2105  0730  3EFF               	addlw	-1
  2106  0731  1D03               	skipz
  2107  0732  2F2D               	goto	u1705
  2108  0733                     l1753:
  2109  0733  3001               	movlw	1
  2110  0734                     u1715:
  2111  0734  1003               	clrc
  2112  0735  0CF4               	rrf	___wmul@multiplier+1,f
  2113  0736  0CF3               	rrf	___wmul@multiplier,f
  2114  0737  3EFF               	addlw	-1
  2115  0738  1D03               	skipz
  2116  0739  2F34               	goto	u1715
  2117  073A                     l1755:
  2118  073A  0873               	movf	___wmul@multiplier,w
  2119  073B  0474               	iorwf	___wmul@multiplier+1,w
  2120  073C  1D03               	btfss	3,2
  2121  073D  2F3F               	goto	u1721
  2122  073E  2F40               	goto	u1720
  2123  073F                     u1721:
  2124  073F  2F20               	goto	l1749
  2125  0740                     u1720:
  2126  0740                     l1757:
  2127  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0742  0821               	movf	___wmul@product+1,w
  2130  0743  00F4               	movwf	?___wmul+1
  2131  0744  0820               	movf	___wmul@product,w
  2132  0745  00F3               	movwf	?___wmul
  2133  0746                     l263:
  2134  0746  0008               	return
  2135  0747                     __end_of___wmul:
  2136                           
  2137                           	psect	text9
  2138  06D6                     __ptext9:	
  2139 ;; *************** function ___lwdiv *****************
  2140 ;; Defined at:
  2141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  divisor         2    3[COMMON] unsigned int 
  2144 ;;  dividend        2    5[COMMON] unsigned int 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        2    1[BANK0 ] unsigned int 
  2147 ;;  counter         1    0[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2    3[COMMON] unsigned int 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         4       0       0       0       0
  2158 ;;      Locals:         0       3       0       0       0
  2159 ;;      Temps:          1       0       0       0       0
  2160 ;;      Totals:         5       3       0       0       0
  2161 ;;Total ram usage:        8 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    2
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_WriteFloat
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function ___lwdiv
  2173  06D6                     ___lwdiv:
  2174  06D6                     l1761:	
  2175                           ;incstack = 0
  2176                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2177                           
  2178  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2179  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2180  06D8  01A1               	clrf	___lwdiv@quotient
  2181  06D9  01A2               	clrf	___lwdiv@quotient+1
  2182  06DA                     l1763:
  2183  06DA  0873               	movf	___lwdiv@divisor,w
  2184  06DB  0474               	iorwf	___lwdiv@divisor+1,w
  2185  06DC  1903               	btfsc	3,2
  2186  06DD  2EDF               	goto	u1731
  2187  06DE  2EE0               	goto	u1730
  2188  06DF                     u1731:
  2189  06DF  2F17               	goto	l1783
  2190  06E0                     u1730:
  2191  06E0                     l1765:
  2192  06E0  01A0               	clrf	___lwdiv@counter
  2193  06E1  0AA0               	incf	___lwdiv@counter,f
  2194  06E2  2EEE               	goto	l1771
  2195  06E3                     l1767:
  2196  06E3  3001               	movlw	1
  2197  06E4                     u1745:
  2198  06E4  1003               	clrc
  2199  06E5  0DF3               	rlf	___lwdiv@divisor,f
  2200  06E6  0DF4               	rlf	___lwdiv@divisor+1,f
  2201  06E7  3EFF               	addlw	-1
  2202  06E8  1D03               	skipz
  2203  06E9  2EE4               	goto	u1745
  2204  06EA                     l1769:
  2205  06EA  3001               	movlw	1
  2206  06EB  00F7               	movwf	??___lwdiv
  2207  06EC  0877               	movf	??___lwdiv,w
  2208  06ED  07A0               	addwf	___lwdiv@counter,f
  2209  06EE                     l1771:
  2210  06EE  1FF4               	btfss	___lwdiv@divisor+1,7
  2211  06EF  2EF1               	goto	u1751
  2212  06F0  2EF2               	goto	u1750
  2213  06F1                     u1751:
  2214  06F1  2EE3               	goto	l1767
  2215  06F2                     u1750:
  2216  06F2                     l1773:
  2217  06F2  3001               	movlw	1
  2218  06F3                     u1765:
  2219  06F3  1003               	clrc
  2220  06F4  0DA1               	rlf	___lwdiv@quotient,f
  2221  06F5  0DA2               	rlf	___lwdiv@quotient+1,f
  2222  06F6  3EFF               	addlw	-1
  2223  06F7  1D03               	skipz
  2224  06F8  2EF3               	goto	u1765
  2225  06F9  0874               	movf	___lwdiv@divisor+1,w
  2226  06FA  0276               	subwf	___lwdiv@dividend+1,w
  2227  06FB  1D03               	skipz
  2228  06FC  2EFF               	goto	u1775
  2229  06FD  0873               	movf	___lwdiv@divisor,w
  2230  06FE  0275               	subwf	___lwdiv@dividend,w
  2231  06FF                     u1775:
  2232  06FF  1C03               	skipc
  2233  0700  2F02               	goto	u1771
  2234  0701  2F03               	goto	u1770
  2235  0702                     u1771:
  2236  0702  2F0A               	goto	l1779
  2237  0703                     u1770:
  2238  0703                     l1775:
  2239  0703  0873               	movf	___lwdiv@divisor,w
  2240  0704  02F5               	subwf	___lwdiv@dividend,f
  2241  0705  0874               	movf	___lwdiv@divisor+1,w
  2242  0706  1C03               	skipc
  2243  0707  03F6               	decf	___lwdiv@dividend+1,f
  2244  0708  02F6               	subwf	___lwdiv@dividend+1,f
  2245  0709                     l1777:
  2246  0709  1421               	bsf	___lwdiv@quotient,0
  2247  070A                     l1779:
  2248  070A  3001               	movlw	1
  2249  070B                     u1785:
  2250  070B  1003               	clrc
  2251  070C  0CF4               	rrf	___lwdiv@divisor+1,f
  2252  070D  0CF3               	rrf	___lwdiv@divisor,f
  2253  070E  3EFF               	addlw	-1
  2254  070F  1D03               	skipz
  2255  0710  2F0B               	goto	u1785
  2256  0711                     l1781:
  2257  0711  3001               	movlw	1
  2258  0712  02A0               	subwf	___lwdiv@counter,f
  2259  0713  1D03               	btfss	3,2
  2260  0714  2F16               	goto	u1791
  2261  0715  2F17               	goto	u1790
  2262  0716                     u1791:
  2263  0716  2EF2               	goto	l1773
  2264  0717                     u1790:
  2265  0717                     l1783:
  2266  0717  0822               	movf	___lwdiv@quotient+1,w
  2267  0718  00F4               	movwf	?___lwdiv+1
  2268  0719  0821               	movf	___lwdiv@quotient,w
  2269  071A  00F3               	movwf	?___lwdiv
  2270  071B                     l533:
  2271  071B  0008               	return
  2272  071C                     __end_of___lwdiv:
  2273                           
  2274                           	psect	text10
  2275  05FD                     __ptext10:	
  2276 ;; *************** function ___fltol *****************
  2277 ;; Defined at:
  2278 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  f1              4   36[BANK0 ] unsigned int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  exp1            1   46[BANK0 ] unsigned char 
  2283 ;;  sign1           1   45[BANK0 ] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  4   36[BANK0 ] long 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       4       0       0       0
  2294 ;;      Locals:         0       2       0       0       0
  2295 ;;      Temps:          0       5       0       0       0
  2296 ;;      Totals:         0      11       0       0       0
  2297 ;;Total ram usage:       11 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_WriteFloat
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function ___fltol
  2309  05FD                     ___fltol:
  2310  05FD                     l1327:	
  2311                           ;incstack = 0
  2312                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2313                           
  2314  05FD  1003               	clrc
  2315  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2316  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0600  0D46               	rlf	___fltol@f1+2,w
  2318  0601  0D47               	rlf	___fltol@f1+3,w
  2319  0602  00C8               	movwf	??___fltol
  2320  0603  0848               	movf	??___fltol,w
  2321  0604  00CE               	movwf	___fltol@exp1
  2322  0605  084E               	movf	___fltol@exp1,w
  2323  0606  1D03               	btfss	3,2
  2324  0607  2E09               	goto	u951
  2325  0608  2E0A               	goto	u950
  2326  0609                     u951:
  2327  0609  2E13               	goto	l1333
  2328  060A                     u950:
  2329  060A                     l1329:
  2330  060A  3000               	movlw	0
  2331  060B  00C7               	movwf	?___fltol+3
  2332  060C  3000               	movlw	0
  2333  060D  00C6               	movwf	?___fltol+2
  2334  060E  3000               	movlw	0
  2335  060F  00C5               	movwf	?___fltol+1
  2336  0610  3000               	movlw	0
  2337  0611  00C4               	movwf	?___fltol
  2338  0612  2E78               	goto	l447
  2339  0613                     l1333:
  2340  0613  0844               	movf	___fltol@f1,w
  2341  0614  00C8               	movwf	??___fltol
  2342  0615  0845               	movf	___fltol@f1+1,w
  2343  0616  00C9               	movwf	??___fltol+1
  2344  0617  0846               	movf	___fltol@f1+2,w
  2345  0618  00CA               	movwf	??___fltol+2
  2346  0619  0847               	movf	___fltol@f1+3,w
  2347  061A  00CB               	movwf	??___fltol+3
  2348  061B  301F               	movlw	31
  2349  061C                     u965:
  2350  061C  1003               	clrc
  2351  061D  0CCB               	rrf	??___fltol+3,f
  2352  061E  0CCA               	rrf	??___fltol+2,f
  2353  061F  0CC9               	rrf	??___fltol+1,f
  2354  0620  0CC8               	rrf	??___fltol,f
  2355  0621                     u960:
  2356  0621  3EFF               	addlw	-1
  2357  0622  1D03               	skipz
  2358  0623  2E1C               	goto	u965
  2359  0624  0848               	movf	??___fltol,w
  2360  0625  00CC               	movwf	??___fltol+4
  2361  0626  084C               	movf	??___fltol+4,w
  2362  0627  00CD               	movwf	___fltol@sign1
  2363  0628                     l1335:
  2364  0628  17C6               	bsf	___fltol@f1+2,7
  2365  0629                     l1337:
  2366  0629  30FF               	movlw	255
  2367  062A  05C4               	andwf	___fltol@f1,f
  2368  062B  30FF               	movlw	255
  2369  062C  05C5               	andwf	___fltol@f1+1,f
  2370  062D  30FF               	movlw	255
  2371  062E  05C6               	andwf	___fltol@f1+2,f
  2372  062F  3000               	movlw	0
  2373  0630  05C7               	andwf	___fltol@f1+3,f
  2374  0631                     l1339:
  2375  0631  3096               	movlw	150
  2376  0632  02CE               	subwf	___fltol@exp1,f
  2377  0633                     l1341:
  2378  0633  1FCE               	btfss	___fltol@exp1,7
  2379  0634  2E36               	goto	u971
  2380  0635  2E37               	goto	u970
  2381  0636                     u971:
  2382  0636  2E51               	goto	l1351
  2383  0637                     u970:
  2384  0637                     l1343:
  2385  0637  084E               	movf	___fltol@exp1,w
  2386  0638  3A80               	xorlw	128
  2387  0639  3E97               	addlw	151
  2388  063A  1803               	skipnc
  2389  063B  2E3D               	goto	u981
  2390  063C  2E3E               	goto	u980
  2391  063D                     u981:
  2392  063D  2E3F               	goto	l1349
  2393  063E                     u980:
  2394  063E  2E0A               	goto	l1329
  2395  063F                     l1349:
  2396  063F  3001               	movlw	1
  2397  0640                     u995:
  2398  0640  1003               	clrc
  2399  0641  0CC7               	rrf	___fltol@f1+3,f
  2400  0642  0CC6               	rrf	___fltol@f1+2,f
  2401  0643  0CC5               	rrf	___fltol@f1+1,f
  2402  0644  0CC4               	rrf	___fltol@f1,f
  2403  0645  3EFF               	addlw	-1
  2404  0646  1D03               	skipz
  2405  0647  2E40               	goto	u995
  2406  0648  3001               	movlw	1
  2407  0649  00C8               	movwf	??___fltol
  2408  064A  0848               	movf	??___fltol,w
  2409  064B  07CE               	addwf	___fltol@exp1,f
  2410  064C  1D03               	btfss	3,2
  2411  064D  2E4F               	goto	u1001
  2412  064E  2E50               	goto	u1000
  2413  064F                     u1001:
  2414  064F  2E3F               	goto	l1349
  2415  0650                     u1000:
  2416  0650  2E68               	goto	l1359
  2417  0651                     l1351:
  2418  0651  3020               	movlw	32
  2419  0652  024E               	subwf	___fltol@exp1,w
  2420  0653  1C03               	skipc
  2421  0654  2E56               	goto	u1011
  2422  0655  2E57               	goto	u1010
  2423  0656                     u1011:
  2424  0656  2E63               	goto	l454
  2425  0657                     u1010:
  2426  0657  2E0A               	goto	l1329
  2427  0658                     l1357:
  2428  0658  3001               	movlw	1
  2429  0659  00C8               	movwf	??___fltol
  2430  065A                     u1025:
  2431  065A  1003               	clrc
  2432  065B  0DC4               	rlf	___fltol@f1,f
  2433  065C  0DC5               	rlf	___fltol@f1+1,f
  2434  065D  0DC6               	rlf	___fltol@f1+2,f
  2435  065E  0DC7               	rlf	___fltol@f1+3,f
  2436  065F  0BC8               	decfsz	??___fltol,f
  2437  0660  2E5A               	goto	u1025
  2438  0661  3001               	movlw	1
  2439  0662  02CE               	subwf	___fltol@exp1,f
  2440  0663                     l454:
  2441  0663  084E               	movf	___fltol@exp1,w
  2442  0664  1D03               	btfss	3,2
  2443  0665  2E67               	goto	u1031
  2444  0666  2E68               	goto	u1030
  2445  0667                     u1031:
  2446  0667  2E58               	goto	l1357
  2447  0668                     u1030:
  2448  0668                     l1359:
  2449  0668  084D               	movf	___fltol@sign1,w
  2450  0669  1903               	btfsc	3,2
  2451  066A  2E6C               	goto	u1041
  2452  066B  2E6D               	goto	u1040
  2453  066C                     u1041:
  2454  066C  2E78               	goto	l457
  2455  066D                     u1040:
  2456  066D                     l1361:
  2457  066D  09C4               	comf	___fltol@f1,f
  2458  066E  09C5               	comf	___fltol@f1+1,f
  2459  066F  09C6               	comf	___fltol@f1+2,f
  2460  0670  09C7               	comf	___fltol@f1+3,f
  2461  0671  0AC4               	incf	___fltol@f1,f
  2462  0672  1903               	skipnz
  2463  0673  0AC5               	incf	___fltol@f1+1,f
  2464  0674  1903               	skipnz
  2465  0675  0AC6               	incf	___fltol@f1+2,f
  2466  0676  1903               	skipnz
  2467  0677  0AC7               	incf	___fltol@f1+3,f
  2468  0678                     l457:
  2469  0678                     l447:
  2470  0678  0008               	return
  2471  0679                     __end_of___fltol:
  2472                           
  2473                           	psect	text11
  2474  001A                     __ptext11:	
  2475 ;; *************** function ___flmul *****************
  2476 ;; Defined at:
  2477 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  b               4   10[BANK0 ] long 
  2480 ;;  a               4   14[BANK0 ] long 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  prod            4   30[BANK0 ] struct .
  2483 ;;  grs             4   24[BANK0 ] unsigned long 
  2484 ;;  temp            2   34[BANK0 ] struct .
  2485 ;;  bexp            1   29[BANK0 ] unsigned char 
  2486 ;;  aexp            1   28[BANK0 ] unsigned char 
  2487 ;;  sign            1   23[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  4   10[BANK0 ] unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       8       0       0       0
  2498 ;;      Locals:         0      13       0       0       0
  2499 ;;      Temps:          0       5       0       0       0
  2500 ;;      Totals:         0      26       0       0       0
  2501 ;;Total ram usage:       26 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    3
  2504 ;; This function calls:
  2505 ;;		__Umul8_16
  2506 ;; This function is called by:
  2507 ;;		_WriteFloat
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function ___flmul
  2513  001A                     ___flmul:
  2514  001A                     l1389:	
  2515                           ;incstack = 0
  2516                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2517                           
  2518  001A  1283               	bcf	3,5	;RP0=0, select bank0
  2519  001B  1303               	bcf	3,6	;RP1=0, select bank0
  2520  001C  082D               	movf	___flmul@b+3,w
  2521  001D  3980               	andlw	128
  2522  001E  00B2               	movwf	??___flmul
  2523  001F  0832               	movf	??___flmul,w
  2524  0020  00B7               	movwf	___flmul@sign
  2525  0021                     l1391:
  2526  0021  082D               	movf	___flmul@b+3,w
  2527  0022  00B2               	movwf	??___flmul
  2528  0023  0732               	addwf	??___flmul,w
  2529  0024  00B3               	movwf	??___flmul+1
  2530  0025  0833               	movf	??___flmul+1,w
  2531  0026  00BD               	movwf	___flmul@bexp
  2532  0027                     l1393:
  2533  0027  1FAC               	btfss	___flmul@b+2,7
  2534  0028  282A               	goto	u1121
  2535  0029  282B               	goto	u1120
  2536  002A                     u1121:
  2537  002A  282C               	goto	l1397
  2538  002B                     u1120:
  2539  002B                     l1395:
  2540  002B  143D               	bsf	___flmul@bexp,0
  2541  002C                     l1397:
  2542  002C  083D               	movf	___flmul@bexp,w
  2543  002D  1903               	btfsc	3,2
  2544  002E  2830               	goto	u1131
  2545  002F  2831               	goto	u1130
  2546  0030                     u1131:
  2547  0030  2840               	goto	l1405
  2548  0031                     u1130:
  2549  0031                     l1399:
  2550  0031  0A3D               	incf	___flmul@bexp,w
  2551  0032  1D03               	btfss	3,2
  2552  0033  2835               	goto	u1141
  2553  0034  2836               	goto	u1140
  2554  0035                     u1141:
  2555  0035  283E               	goto	l1403
  2556  0036                     u1140:
  2557  0036                     l1401:
  2558  0036  3000               	movlw	0
  2559  0037  00AD               	movwf	___flmul@b+3
  2560  0038  3000               	movlw	0
  2561  0039  00AC               	movwf	___flmul@b+2
  2562  003A  3000               	movlw	0
  2563  003B  00AB               	movwf	___flmul@b+1
  2564  003C  3000               	movlw	0
  2565  003D  00AA               	movwf	___flmul@b
  2566  003E                     l1403:
  2567  003E  17AC               	bsf	___flmul@b+2,7
  2568  003F  2848               	goto	l1407
  2569  0040                     l1405:
  2570  0040  3000               	movlw	0
  2571  0041  00AD               	movwf	___flmul@b+3
  2572  0042  3000               	movlw	0
  2573  0043  00AC               	movwf	___flmul@b+2
  2574  0044  3000               	movlw	0
  2575  0045  00AB               	movwf	___flmul@b+1
  2576  0046  3000               	movlw	0
  2577  0047  00AA               	movwf	___flmul@b
  2578  0048                     l1407:
  2579  0048  0831               	movf	___flmul@a+3,w
  2580  0049  3980               	andlw	128
  2581  004A  00B2               	movwf	??___flmul
  2582  004B  0832               	movf	??___flmul,w
  2583  004C  06B7               	xorwf	___flmul@sign,f
  2584  004D                     l1409:
  2585  004D  0831               	movf	___flmul@a+3,w
  2586  004E  00B2               	movwf	??___flmul
  2587  004F  0732               	addwf	??___flmul,w
  2588  0050  00B3               	movwf	??___flmul+1
  2589  0051  0833               	movf	??___flmul+1,w
  2590  0052  00BC               	movwf	___flmul@aexp
  2591  0053                     l1411:
  2592  0053  1FB0               	btfss	___flmul@a+2,7
  2593  0054  2856               	goto	u1151
  2594  0055  2857               	goto	u1150
  2595  0056                     u1151:
  2596  0056  2858               	goto	l1415
  2597  0057                     u1150:
  2598  0057                     l1413:
  2599  0057  143C               	bsf	___flmul@aexp,0
  2600  0058                     l1415:
  2601  0058  083C               	movf	___flmul@aexp,w
  2602  0059  1903               	btfsc	3,2
  2603  005A  285C               	goto	u1161
  2604  005B  285D               	goto	u1160
  2605  005C                     u1161:
  2606  005C  286C               	goto	l1423
  2607  005D                     u1160:
  2608  005D                     l1417:
  2609  005D  0A3C               	incf	___flmul@aexp,w
  2610  005E  1D03               	btfss	3,2
  2611  005F  2861               	goto	u1171
  2612  0060  2862               	goto	u1170
  2613  0061                     u1171:
  2614  0061  286A               	goto	l1421
  2615  0062                     u1170:
  2616  0062                     l1419:
  2617  0062  3000               	movlw	0
  2618  0063  00B1               	movwf	___flmul@a+3
  2619  0064  3000               	movlw	0
  2620  0065  00B0               	movwf	___flmul@a+2
  2621  0066  3000               	movlw	0
  2622  0067  00AF               	movwf	___flmul@a+1
  2623  0068  3000               	movlw	0
  2624  0069  00AE               	movwf	___flmul@a
  2625  006A                     l1421:
  2626  006A  17B0               	bsf	___flmul@a+2,7
  2627  006B  2874               	goto	l1425
  2628  006C                     l1423:
  2629  006C  3000               	movlw	0
  2630  006D  00B1               	movwf	___flmul@a+3
  2631  006E  3000               	movlw	0
  2632  006F  00B0               	movwf	___flmul@a+2
  2633  0070  3000               	movlw	0
  2634  0071  00AF               	movwf	___flmul@a+1
  2635  0072  3000               	movlw	0
  2636  0073  00AE               	movwf	___flmul@a
  2637  0074                     l1425:
  2638  0074  083C               	movf	___flmul@aexp,w
  2639  0075  1903               	btfsc	3,2
  2640  0076  2878               	goto	u1181
  2641  0077  2879               	goto	u1180
  2642  0078                     u1181:
  2643  0078  287E               	goto	l1429
  2644  0079                     u1180:
  2645  0079                     l1427:
  2646  0079  083D               	movf	___flmul@bexp,w
  2647  007A  1D03               	btfss	3,2
  2648  007B  287D               	goto	u1191
  2649  007C  287E               	goto	u1190
  2650  007D                     u1191:
  2651  007D  2887               	goto	l1433
  2652  007E                     u1190:
  2653  007E                     l1429:
  2654  007E  3000               	movlw	0
  2655  007F  00AD               	movwf	?___flmul+3
  2656  0080  3000               	movlw	0
  2657  0081  00AC               	movwf	?___flmul+2
  2658  0082  3000               	movlw	0
  2659  0083  00AB               	movwf	?___flmul+1
  2660  0084  3000               	movlw	0
  2661  0085  00AA               	movwf	?___flmul
  2662  0086  2B7A               	goto	l650
  2663  0087                     l1433:
  2664  0087  082A               	movf	___flmul@b,w
  2665  0088  00B2               	movwf	??___flmul
  2666  0089  0832               	movf	??___flmul,w
  2667  008A  00F3               	movwf	__Umul8_16@multiplicand
  2668  008B  0830               	movf	___flmul@a+2,w
  2669  008C  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2670  0091  0874               	movf	?__Umul8_16+1,w
  2671  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0094  00C3               	movwf	___flmul@temp+1
  2674  0095  0873               	movf	?__Umul8_16,w
  2675  0096  00C2               	movwf	___flmul@temp
  2676  0097                     l1435:
  2677  0097  0842               	movf	___flmul@temp,w
  2678  0098  00B2               	movwf	??___flmul
  2679  0099  01B3               	clrf	??___flmul+1
  2680  009A  01B4               	clrf	??___flmul+2
  2681  009B  01B5               	clrf	??___flmul+3
  2682  009C  0835               	movf	??___flmul+3,w
  2683  009D  00BB               	movwf	___flmul@grs+3
  2684  009E  0834               	movf	??___flmul+2,w
  2685  009F  00BA               	movwf	___flmul@grs+2
  2686  00A0  0833               	movf	??___flmul+1,w
  2687  00A1  00B9               	movwf	___flmul@grs+1
  2688  00A2  0832               	movf	??___flmul,w
  2689  00A3  00B8               	movwf	___flmul@grs
  2690  00A4                     l1437:
  2691  00A4  0843               	movf	___flmul@temp+1,w
  2692  00A5  00B2               	movwf	??___flmul
  2693  00A6  01B3               	clrf	??___flmul+1
  2694  00A7  01B4               	clrf	??___flmul+2
  2695  00A8  01B5               	clrf	??___flmul+3
  2696  00A9  0835               	movf	??___flmul+3,w
  2697  00AA  00C1               	movwf	___flmul@prod+3
  2698  00AB  0834               	movf	??___flmul+2,w
  2699  00AC  00C0               	movwf	___flmul@prod+2
  2700  00AD  0833               	movf	??___flmul+1,w
  2701  00AE  00BF               	movwf	___flmul@prod+1
  2702  00AF  0832               	movf	??___flmul,w
  2703  00B0  00BE               	movwf	___flmul@prod
  2704  00B1  082B               	movf	___flmul@b+1,w
  2705  00B2  00B2               	movwf	??___flmul
  2706  00B3  0832               	movf	??___flmul,w
  2707  00B4  00F3               	movwf	__Umul8_16@multiplicand
  2708  00B5  082F               	movf	___flmul@a+1,w
  2709  00B6  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2710  00BB  0874               	movf	?__Umul8_16+1,w
  2711  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2712  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2713  00BE  00C3               	movwf	___flmul@temp+1
  2714  00BF  0873               	movf	?__Umul8_16,w
  2715  00C0  00C2               	movwf	___flmul@temp
  2716  00C1                     l1439:
  2717  00C1  0842               	movf	___flmul@temp,w
  2718  00C2  00B2               	movwf	??___flmul
  2719  00C3  01B3               	clrf	??___flmul+1
  2720  00C4  01B4               	clrf	??___flmul+2
  2721  00C5  01B5               	clrf	??___flmul+3
  2722  00C6  0832               	movf	??___flmul,w
  2723  00C7  07B8               	addwf	___flmul@grs,f
  2724  00C8  0833               	movf	??___flmul+1,w
  2725  00C9  1103               	clrz
  2726  00CA  1803               	skipnc
  2727  00CB  3E01               	addlw	1
  2728  00CC  1903               	skipnz
  2729  00CD  28CF               	goto	u1201
  2730  00CE  07B9               	addwf	___flmul@grs+1,f
  2731  00CF                     u1201:
  2732  00CF  0834               	movf	??___flmul+2,w
  2733  00D0  1103               	clrz
  2734  00D1  1803               	skipnc
  2735  00D2  3E01               	addlw	1
  2736  00D3  1903               	skipnz
  2737  00D4  28D6               	goto	u1202
  2738  00D5  07BA               	addwf	___flmul@grs+2,f
  2739  00D6                     u1202:
  2740  00D6  0835               	movf	??___flmul+3,w
  2741  00D7  1103               	clrz
  2742  00D8  1803               	skipnc
  2743  00D9  3E01               	addlw	1
  2744  00DA  1903               	skipnz
  2745  00DB  28DD               	goto	u1203
  2746  00DC  07BB               	addwf	___flmul@grs+3,f
  2747  00DD                     u1203:
  2748  00DD                     l1441:
  2749  00DD  0843               	movf	___flmul@temp+1,w
  2750  00DE  00B2               	movwf	??___flmul
  2751  00DF  01B3               	clrf	??___flmul+1
  2752  00E0  01B4               	clrf	??___flmul+2
  2753  00E1  01B5               	clrf	??___flmul+3
  2754  00E2  0832               	movf	??___flmul,w
  2755  00E3  07BE               	addwf	___flmul@prod,f
  2756  00E4  0833               	movf	??___flmul+1,w
  2757  00E5  1103               	clrz
  2758  00E6  1803               	skipnc
  2759  00E7  3E01               	addlw	1
  2760  00E8  1903               	skipnz
  2761  00E9  28EB               	goto	u1211
  2762  00EA  07BF               	addwf	___flmul@prod+1,f
  2763  00EB                     u1211:
  2764  00EB  0834               	movf	??___flmul+2,w
  2765  00EC  1103               	clrz
  2766  00ED  1803               	skipnc
  2767  00EE  3E01               	addlw	1
  2768  00EF  1903               	skipnz
  2769  00F0  28F2               	goto	u1212
  2770  00F1  07C0               	addwf	___flmul@prod+2,f
  2771  00F2                     u1212:
  2772  00F2  0835               	movf	??___flmul+3,w
  2773  00F3  1103               	clrz
  2774  00F4  1803               	skipnc
  2775  00F5  3E01               	addlw	1
  2776  00F6  1903               	skipnz
  2777  00F7  28F9               	goto	u1213
  2778  00F8  07C1               	addwf	___flmul@prod+3,f
  2779  00F9                     u1213:
  2780  00F9  082C               	movf	___flmul@b+2,w
  2781  00FA  00B2               	movwf	??___flmul
  2782  00FB  0832               	movf	??___flmul,w
  2783  00FC  00F3               	movwf	__Umul8_16@multiplicand
  2784  00FD  082E               	movf	___flmul@a,w
  2785  00FE  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2786  0103  0874               	movf	?__Umul8_16+1,w
  2787  0104  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0105  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0106  00C3               	movwf	___flmul@temp+1
  2790  0107  0873               	movf	?__Umul8_16,w
  2791  0108  00C2               	movwf	___flmul@temp
  2792  0109                     l1443:
  2793  0109  0842               	movf	___flmul@temp,w
  2794  010A  00B2               	movwf	??___flmul
  2795  010B  01B3               	clrf	??___flmul+1
  2796  010C  01B4               	clrf	??___flmul+2
  2797  010D  01B5               	clrf	??___flmul+3
  2798  010E  0832               	movf	??___flmul,w
  2799  010F  07B8               	addwf	___flmul@grs,f
  2800  0110  0833               	movf	??___flmul+1,w
  2801  0111  1103               	clrz
  2802  0112  1803               	skipnc
  2803  0113  3E01               	addlw	1
  2804  0114  1903               	skipnz
  2805  0115  2917               	goto	u1221
  2806  0116  07B9               	addwf	___flmul@grs+1,f
  2807  0117                     u1221:
  2808  0117  0834               	movf	??___flmul+2,w
  2809  0118  1103               	clrz
  2810  0119  1803               	skipnc
  2811  011A  3E01               	addlw	1
  2812  011B  1903               	skipnz
  2813  011C  291E               	goto	u1222
  2814  011D  07BA               	addwf	___flmul@grs+2,f
  2815  011E                     u1222:
  2816  011E  0835               	movf	??___flmul+3,w
  2817  011F  1103               	clrz
  2818  0120  1803               	skipnc
  2819  0121  3E01               	addlw	1
  2820  0122  1903               	skipnz
  2821  0123  2925               	goto	u1223
  2822  0124  07BB               	addwf	___flmul@grs+3,f
  2823  0125                     u1223:
  2824  0125                     l1445:
  2825  0125  0843               	movf	___flmul@temp+1,w
  2826  0126  00B2               	movwf	??___flmul
  2827  0127  01B3               	clrf	??___flmul+1
  2828  0128  01B4               	clrf	??___flmul+2
  2829  0129  01B5               	clrf	??___flmul+3
  2830  012A  0832               	movf	??___flmul,w
  2831  012B  07BE               	addwf	___flmul@prod,f
  2832  012C  0833               	movf	??___flmul+1,w
  2833  012D  1103               	clrz
  2834  012E  1803               	skipnc
  2835  012F  3E01               	addlw	1
  2836  0130  1903               	skipnz
  2837  0131  2933               	goto	u1231
  2838  0132  07BF               	addwf	___flmul@prod+1,f
  2839  0133                     u1231:
  2840  0133  0834               	movf	??___flmul+2,w
  2841  0134  1103               	clrz
  2842  0135  1803               	skipnc
  2843  0136  3E01               	addlw	1
  2844  0137  1903               	skipnz
  2845  0138  293A               	goto	u1232
  2846  0139  07C0               	addwf	___flmul@prod+2,f
  2847  013A                     u1232:
  2848  013A  0835               	movf	??___flmul+3,w
  2849  013B  1103               	clrz
  2850  013C  1803               	skipnc
  2851  013D  3E01               	addlw	1
  2852  013E  1903               	skipnz
  2853  013F  2941               	goto	u1233
  2854  0140  07C1               	addwf	___flmul@prod+3,f
  2855  0141                     u1233:
  2856  0141                     l1447:
  2857  0141  3008               	movlw	8
  2858  0142  00B2               	movwf	??___flmul
  2859  0143                     u1245:
  2860  0143  1003               	clrc
  2861  0144  0DB8               	rlf	___flmul@grs,f
  2862  0145  0DB9               	rlf	___flmul@grs+1,f
  2863  0146  0DBA               	rlf	___flmul@grs+2,f
  2864  0147  0DBB               	rlf	___flmul@grs+3,f
  2865  0148  0BB2               	decfsz	??___flmul,f
  2866  0149  2943               	goto	u1245
  2867  014A                     l1449:
  2868  014A  082B               	movf	___flmul@b+1,w
  2869  014B  00B2               	movwf	??___flmul
  2870  014C  0832               	movf	??___flmul,w
  2871  014D  00F3               	movwf	__Umul8_16@multiplicand
  2872  014E  082E               	movf	___flmul@a,w
  2873  014F  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2874  0154  0874               	movf	?__Umul8_16+1,w
  2875  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0157  00C3               	movwf	___flmul@temp+1
  2878  0158  0873               	movf	?__Umul8_16,w
  2879  0159  00C2               	movwf	___flmul@temp
  2880  015A                     l1451:
  2881  015A  0842               	movf	___flmul@temp,w
  2882  015B  00B2               	movwf	??___flmul
  2883  015C  0843               	movf	___flmul@temp+1,w
  2884  015D  00B3               	movwf	??___flmul+1
  2885  015E  01B4               	clrf	??___flmul+2
  2886  015F  01B5               	clrf	??___flmul+3
  2887  0160  0832               	movf	??___flmul,w
  2888  0161  07B8               	addwf	___flmul@grs,f
  2889  0162  0833               	movf	??___flmul+1,w
  2890  0163  1103               	clrz
  2891  0164  1803               	skipnc
  2892  0165  3E01               	addlw	1
  2893  0166  1903               	skipnz
  2894  0167  2969               	goto	u1251
  2895  0168  07B9               	addwf	___flmul@grs+1,f
  2896  0169                     u1251:
  2897  0169  0834               	movf	??___flmul+2,w
  2898  016A  1103               	clrz
  2899  016B  1803               	skipnc
  2900  016C  3E01               	addlw	1
  2901  016D  1903               	skipnz
  2902  016E  2970               	goto	u1252
  2903  016F  07BA               	addwf	___flmul@grs+2,f
  2904  0170                     u1252:
  2905  0170  0835               	movf	??___flmul+3,w
  2906  0171  1103               	clrz
  2907  0172  1803               	skipnc
  2908  0173  3E01               	addlw	1
  2909  0174  1903               	skipnz
  2910  0175  2977               	goto	u1253
  2911  0176  07BB               	addwf	___flmul@grs+3,f
  2912  0177                     u1253:
  2913  0177                     l1453:
  2914  0177  082A               	movf	___flmul@b,w
  2915  0178  00B2               	movwf	??___flmul
  2916  0179  0832               	movf	??___flmul,w
  2917  017A  00F3               	movwf	__Umul8_16@multiplicand
  2918  017B  082F               	movf	___flmul@a+1,w
  2919  017C  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2920  0181  0874               	movf	?__Umul8_16+1,w
  2921  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0184  00C3               	movwf	___flmul@temp+1
  2924  0185  0873               	movf	?__Umul8_16,w
  2925  0186  00C2               	movwf	___flmul@temp
  2926  0187                     l1455:
  2927  0187  0842               	movf	___flmul@temp,w
  2928  0188  00B2               	movwf	??___flmul
  2929  0189  0843               	movf	___flmul@temp+1,w
  2930  018A  00B3               	movwf	??___flmul+1
  2931  018B  01B4               	clrf	??___flmul+2
  2932  018C  01B5               	clrf	??___flmul+3
  2933  018D  0832               	movf	??___flmul,w
  2934  018E  07B8               	addwf	___flmul@grs,f
  2935  018F  0833               	movf	??___flmul+1,w
  2936  0190  1103               	clrz
  2937  0191  1803               	skipnc
  2938  0192  3E01               	addlw	1
  2939  0193  1903               	skipnz
  2940  0194  2996               	goto	u1261
  2941  0195  07B9               	addwf	___flmul@grs+1,f
  2942  0196                     u1261:
  2943  0196  0834               	movf	??___flmul+2,w
  2944  0197  1103               	clrz
  2945  0198  1803               	skipnc
  2946  0199  3E01               	addlw	1
  2947  019A  1903               	skipnz
  2948  019B  299D               	goto	u1262
  2949  019C  07BA               	addwf	___flmul@grs+2,f
  2950  019D                     u1262:
  2951  019D  0835               	movf	??___flmul+3,w
  2952  019E  1103               	clrz
  2953  019F  1803               	skipnc
  2954  01A0  3E01               	addlw	1
  2955  01A1  1903               	skipnz
  2956  01A2  29A4               	goto	u1263
  2957  01A3  07BB               	addwf	___flmul@grs+3,f
  2958  01A4                     u1263:
  2959  01A4                     l1457:
  2960  01A4  3008               	movlw	8
  2961  01A5  00B2               	movwf	??___flmul
  2962  01A6                     u1275:
  2963  01A6  1003               	clrc
  2964  01A7  0DB8               	rlf	___flmul@grs,f
  2965  01A8  0DB9               	rlf	___flmul@grs+1,f
  2966  01A9  0DBA               	rlf	___flmul@grs+2,f
  2967  01AA  0DBB               	rlf	___flmul@grs+3,f
  2968  01AB  0BB2               	decfsz	??___flmul,f
  2969  01AC  29A6               	goto	u1275
  2970  01AD  082A               	movf	___flmul@b,w
  2971  01AE  00B2               	movwf	??___flmul
  2972  01AF  0832               	movf	??___flmul,w
  2973  01B0  00F3               	movwf	__Umul8_16@multiplicand
  2974  01B1  082E               	movf	___flmul@a,w
  2975  01B2  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  2976  01B7  0874               	movf	?__Umul8_16+1,w
  2977  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2978  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2979  01BA  00C3               	movwf	___flmul@temp+1
  2980  01BB  0873               	movf	?__Umul8_16,w
  2981  01BC  00C2               	movwf	___flmul@temp
  2982  01BD                     l1459:
  2983  01BD  0842               	movf	___flmul@temp,w
  2984  01BE  00B2               	movwf	??___flmul
  2985  01BF  0843               	movf	___flmul@temp+1,w
  2986  01C0  00B3               	movwf	??___flmul+1
  2987  01C1  01B4               	clrf	??___flmul+2
  2988  01C2  01B5               	clrf	??___flmul+3
  2989  01C3  0832               	movf	??___flmul,w
  2990  01C4  07B8               	addwf	___flmul@grs,f
  2991  01C5  0833               	movf	??___flmul+1,w
  2992  01C6  1103               	clrz
  2993  01C7  1803               	skipnc
  2994  01C8  3E01               	addlw	1
  2995  01C9  1903               	skipnz
  2996  01CA  29CC               	goto	u1281
  2997  01CB  07B9               	addwf	___flmul@grs+1,f
  2998  01CC                     u1281:
  2999  01CC  0834               	movf	??___flmul+2,w
  3000  01CD  1103               	clrz
  3001  01CE  1803               	skipnc
  3002  01CF  3E01               	addlw	1
  3003  01D0  1903               	skipnz
  3004  01D1  29D3               	goto	u1282
  3005  01D2  07BA               	addwf	___flmul@grs+2,f
  3006  01D3                     u1282:
  3007  01D3  0835               	movf	??___flmul+3,w
  3008  01D4  1103               	clrz
  3009  01D5  1803               	skipnc
  3010  01D6  3E01               	addlw	1
  3011  01D7  1903               	skipnz
  3012  01D8  29DA               	goto	u1283
  3013  01D9  07BB               	addwf	___flmul@grs+3,f
  3014  01DA                     u1283:
  3015  01DA                     l1461:
  3016  01DA  082B               	movf	___flmul@b+1,w
  3017  01DB  00B2               	movwf	??___flmul
  3018  01DC  0832               	movf	??___flmul,w
  3019  01DD  00F3               	movwf	__Umul8_16@multiplicand
  3020  01DE  0830               	movf	___flmul@a+2,w
  3021  01DF  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  3022  01E4  0874               	movf	?__Umul8_16+1,w
  3023  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3024  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3025  01E7  00C3               	movwf	___flmul@temp+1
  3026  01E8  0873               	movf	?__Umul8_16,w
  3027  01E9  00C2               	movwf	___flmul@temp
  3028  01EA  0842               	movf	___flmul@temp,w
  3029  01EB  00B2               	movwf	??___flmul
  3030  01EC  0843               	movf	___flmul@temp+1,w
  3031  01ED  00B3               	movwf	??___flmul+1
  3032  01EE  01B4               	clrf	??___flmul+2
  3033  01EF  01B5               	clrf	??___flmul+3
  3034  01F0  0832               	movf	??___flmul,w
  3035  01F1  07BE               	addwf	___flmul@prod,f
  3036  01F2  0833               	movf	??___flmul+1,w
  3037  01F3  1103               	clrz
  3038  01F4  1803               	skipnc
  3039  01F5  3E01               	addlw	1
  3040  01F6  1903               	skipnz
  3041  01F7  29F9               	goto	u1291
  3042  01F8  07BF               	addwf	___flmul@prod+1,f
  3043  01F9                     u1291:
  3044  01F9  0834               	movf	??___flmul+2,w
  3045  01FA  1103               	clrz
  3046  01FB  1803               	skipnc
  3047  01FC  3E01               	addlw	1
  3048  01FD  1903               	skipnz
  3049  01FE  2A00               	goto	u1292
  3050  01FF  07C0               	addwf	___flmul@prod+2,f
  3051  0200                     u1292:
  3052  0200  0835               	movf	??___flmul+3,w
  3053  0201  1103               	clrz
  3054  0202  1803               	skipnc
  3055  0203  3E01               	addlw	1
  3056  0204  1903               	skipnz
  3057  0205  2A07               	goto	u1293
  3058  0206  07C1               	addwf	___flmul@prod+3,f
  3059  0207                     u1293:
  3060  0207                     l1463:
  3061  0207  082C               	movf	___flmul@b+2,w
  3062  0208  00B2               	movwf	??___flmul
  3063  0209  0832               	movf	??___flmul,w
  3064  020A  00F3               	movwf	__Umul8_16@multiplicand
  3065  020B  082F               	movf	___flmul@a+1,w
  3066  020C  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  3067  0211  0874               	movf	?__Umul8_16+1,w
  3068  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0214  00C3               	movwf	___flmul@temp+1
  3071  0215  0873               	movf	?__Umul8_16,w
  3072  0216  00C2               	movwf	___flmul@temp
  3073  0217                     l1465:
  3074  0217  0842               	movf	___flmul@temp,w
  3075  0218  00B2               	movwf	??___flmul
  3076  0219  0843               	movf	___flmul@temp+1,w
  3077  021A  00B3               	movwf	??___flmul+1
  3078  021B  01B4               	clrf	??___flmul+2
  3079  021C  01B5               	clrf	??___flmul+3
  3080  021D  0832               	movf	??___flmul,w
  3081  021E  07BE               	addwf	___flmul@prod,f
  3082  021F  0833               	movf	??___flmul+1,w
  3083  0220  1103               	clrz
  3084  0221  1803               	skipnc
  3085  0222  3E01               	addlw	1
  3086  0223  1903               	skipnz
  3087  0224  2A26               	goto	u1301
  3088  0225  07BF               	addwf	___flmul@prod+1,f
  3089  0226                     u1301:
  3090  0226  0834               	movf	??___flmul+2,w
  3091  0227  1103               	clrz
  3092  0228  1803               	skipnc
  3093  0229  3E01               	addlw	1
  3094  022A  1903               	skipnz
  3095  022B  2A2D               	goto	u1302
  3096  022C  07C0               	addwf	___flmul@prod+2,f
  3097  022D                     u1302:
  3098  022D  0835               	movf	??___flmul+3,w
  3099  022E  1103               	clrz
  3100  022F  1803               	skipnc
  3101  0230  3E01               	addlw	1
  3102  0231  1903               	skipnz
  3103  0232  2A34               	goto	u1303
  3104  0233  07C1               	addwf	___flmul@prod+3,f
  3105  0234                     u1303:
  3106  0234  082C               	movf	___flmul@b+2,w
  3107  0235  00B2               	movwf	??___flmul
  3108  0236  0832               	movf	??___flmul,w
  3109  0237  00F3               	movwf	__Umul8_16@multiplicand
  3110  0238  0830               	movf	___flmul@a+2,w
  3111  0239  120A  118A  2747  120A  118A  	fcall	__Umul8_16
  3112  023E  0874               	movf	?__Umul8_16+1,w
  3113  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0241  00C3               	movwf	___flmul@temp+1
  3116  0242  0873               	movf	?__Umul8_16,w
  3117  0243  00C2               	movwf	___flmul@temp
  3118  0244                     l1467:
  3119  0244  0842               	movf	___flmul@temp,w
  3120  0245  00B2               	movwf	??___flmul
  3121  0246  0843               	movf	___flmul@temp+1,w
  3122  0247  00B3               	movwf	??___flmul+1
  3123  0248  01B4               	clrf	??___flmul+2
  3124  0249  01B5               	clrf	??___flmul+3
  3125  024A  3008               	movlw	8
  3126  024B                     u1315:
  3127  024B  1003               	clrc
  3128  024C  0DB2               	rlf	??___flmul,f
  3129  024D  0DB3               	rlf	??___flmul+1,f
  3130  024E  0DB4               	rlf	??___flmul+2,f
  3131  024F  0DB5               	rlf	??___flmul+3,f
  3132  0250                     u1310:
  3133  0250  3EFF               	addlw	-1
  3134  0251  1D03               	skipz
  3135  0252  2A4B               	goto	u1315
  3136  0253  0832               	movf	??___flmul,w
  3137  0254  07BE               	addwf	___flmul@prod,f
  3138  0255  0833               	movf	??___flmul+1,w
  3139  0256  1103               	clrz
  3140  0257  1803               	skipnc
  3141  0258  3E01               	addlw	1
  3142  0259  1903               	skipnz
  3143  025A  2A5C               	goto	u1321
  3144  025B  07BF               	addwf	___flmul@prod+1,f
  3145  025C                     u1321:
  3146  025C  0834               	movf	??___flmul+2,w
  3147  025D  1103               	clrz
  3148  025E  1803               	skipnc
  3149  025F  3E01               	addlw	1
  3150  0260  1903               	skipnz
  3151  0261  2A63               	goto	u1322
  3152  0262  07C0               	addwf	___flmul@prod+2,f
  3153  0263                     u1322:
  3154  0263  0835               	movf	??___flmul+3,w
  3155  0264  1103               	clrz
  3156  0265  1803               	skipnc
  3157  0266  3E01               	addlw	1
  3158  0267  1903               	skipnz
  3159  0268  2A6A               	goto	u1323
  3160  0269  07C1               	addwf	___flmul@prod+3,f
  3161  026A                     u1323:
  3162  026A                     l1469:
  3163  026A  0838               	movf	___flmul@grs,w
  3164  026B  00B2               	movwf	??___flmul
  3165  026C  0839               	movf	___flmul@grs+1,w
  3166  026D  00B3               	movwf	??___flmul+1
  3167  026E  083A               	movf	___flmul@grs+2,w
  3168  026F  00B4               	movwf	??___flmul+2
  3169  0270  083B               	movf	___flmul@grs+3,w
  3170  0271  00B5               	movwf	??___flmul+3
  3171  0272  3018               	movlw	24
  3172  0273                     u1335:
  3173  0273  1003               	clrc
  3174  0274  0CB5               	rrf	??___flmul+3,f
  3175  0275  0CB4               	rrf	??___flmul+2,f
  3176  0276  0CB3               	rrf	??___flmul+1,f
  3177  0277  0CB2               	rrf	??___flmul,f
  3178  0278                     u1330:
  3179  0278  3EFF               	addlw	-1
  3180  0279  1D03               	skipz
  3181  027A  2A73               	goto	u1335
  3182  027B  0832               	movf	??___flmul,w
  3183  027C  07BE               	addwf	___flmul@prod,f
  3184  027D  0833               	movf	??___flmul+1,w
  3185  027E  1103               	clrz
  3186  027F  1803               	skipnc
  3187  0280  3E01               	addlw	1
  3188  0281  1903               	skipnz
  3189  0282  2A84               	goto	u1341
  3190  0283  07BF               	addwf	___flmul@prod+1,f
  3191  0284                     u1341:
  3192  0284  0834               	movf	??___flmul+2,w
  3193  0285  1103               	clrz
  3194  0286  1803               	skipnc
  3195  0287  3E01               	addlw	1
  3196  0288  1903               	skipnz
  3197  0289  2A8B               	goto	u1342
  3198  028A  07C0               	addwf	___flmul@prod+2,f
  3199  028B                     u1342:
  3200  028B  0835               	movf	??___flmul+3,w
  3201  028C  1103               	clrz
  3202  028D  1803               	skipnc
  3203  028E  3E01               	addlw	1
  3204  028F  1903               	skipnz
  3205  0290  2A92               	goto	u1343
  3206  0291  07C1               	addwf	___flmul@prod+3,f
  3207  0292                     u1343:
  3208  0292                     l1471:
  3209  0292  3008               	movlw	8
  3210  0293  00B2               	movwf	??___flmul
  3211  0294                     u1355:
  3212  0294  1003               	clrc
  3213  0295  0DB8               	rlf	___flmul@grs,f
  3214  0296  0DB9               	rlf	___flmul@grs+1,f
  3215  0297  0DBA               	rlf	___flmul@grs+2,f
  3216  0298  0DBB               	rlf	___flmul@grs+3,f
  3217  0299  0BB2               	decfsz	??___flmul,f
  3218  029A  2A94               	goto	u1355
  3219  029B                     l1473:
  3220  029B  083D               	movf	___flmul@bexp,w
  3221  029C  073C               	addwf	___flmul@aexp,w
  3222  029D  00B2               	movwf	??___flmul
  3223  029E  01B3               	clrf	??___flmul+1
  3224  029F  0DB3               	rlf	??___flmul+1,f
  3225  02A0  0832               	movf	??___flmul,w
  3226  02A1  3E82               	addlw	130
  3227  02A2  00C2               	movwf	___flmul@temp
  3228  02A3  0833               	movf	??___flmul+1,w
  3229  02A4  1803               	skipnc
  3230  02A5  3E01               	addlw	1
  3231  02A6  3EFF               	addlw	255
  3232  02A7  00C3               	movwf	___flmul@temp+1
  3233  02A8  2AC6               	goto	l1485
  3234  02A9                     l1475:
  3235  02A9  3001               	movlw	1
  3236  02AA  00B2               	movwf	??___flmul
  3237  02AB                     u1365:
  3238  02AB  1003               	clrc
  3239  02AC  0DBE               	rlf	___flmul@prod,f
  3240  02AD  0DBF               	rlf	___flmul@prod+1,f
  3241  02AE  0DC0               	rlf	___flmul@prod+2,f
  3242  02AF  0DC1               	rlf	___flmul@prod+3,f
  3243  02B0  0BB2               	decfsz	??___flmul,f
  3244  02B1  2AAB               	goto	u1365
  3245  02B2                     l1477:
  3246  02B2  1FBB               	btfss	___flmul@grs+3,7
  3247  02B3  2AB5               	goto	u1371
  3248  02B4  2AB6               	goto	u1370
  3249  02B5                     u1371:
  3250  02B5  2AB7               	goto	l1481
  3251  02B6                     u1370:
  3252  02B6                     l1479:
  3253  02B6  143E               	bsf	___flmul@prod,0
  3254  02B7                     l1481:
  3255  02B7  3001               	movlw	1
  3256  02B8  00B2               	movwf	??___flmul
  3257  02B9                     u1385:
  3258  02B9  1003               	clrc
  3259  02BA  0DB8               	rlf	___flmul@grs,f
  3260  02BB  0DB9               	rlf	___flmul@grs+1,f
  3261  02BC  0DBA               	rlf	___flmul@grs+2,f
  3262  02BD  0DBB               	rlf	___flmul@grs+3,f
  3263  02BE  0BB2               	decfsz	??___flmul,f
  3264  02BF  2AB9               	goto	u1385
  3265  02C0                     l1483:
  3266  02C0  30FF               	movlw	255
  3267  02C1  07C2               	addwf	___flmul@temp,f
  3268  02C2  1803               	skipnc
  3269  02C3  0AC3               	incf	___flmul@temp+1,f
  3270  02C4  30FF               	movlw	255
  3271  02C5  07C3               	addwf	___flmul@temp+1,f
  3272  02C6                     l1485:
  3273  02C6  1FC0               	btfss	___flmul@prod+2,7
  3274  02C7  2AC9               	goto	u1391
  3275  02C8  2ACA               	goto	u1390
  3276  02C9                     u1391:
  3277  02C9  2AA9               	goto	l1475
  3278  02CA                     u1390:
  3279  02CA                     l1487:
  3280  02CA  01BC               	clrf	___flmul@aexp
  3281  02CB                     l1489:
  3282  02CB  1FBB               	btfss	___flmul@grs+3,7
  3283  02CC  2ACE               	goto	u1401
  3284  02CD  2ACF               	goto	u1400
  3285  02CE                     u1401:
  3286  02CE  2AEB               	goto	l1497
  3287  02CF                     u1400:
  3288  02CF                     l1491:
  3289  02CF  30FF               	movlw	255
  3290  02D0  0538               	andwf	___flmul@grs,w
  3291  02D1  00B2               	movwf	??___flmul
  3292  02D2  30FF               	movlw	255
  3293  02D3  0539               	andwf	___flmul@grs+1,w
  3294  02D4  00B3               	movwf	??___flmul+1
  3295  02D5  30FF               	movlw	255
  3296  02D6  053A               	andwf	___flmul@grs+2,w
  3297  02D7  00B4               	movwf	??___flmul+2
  3298  02D8  307F               	movlw	127
  3299  02D9  053B               	andwf	___flmul@grs+3,w
  3300  02DA  00B5               	movwf	??___flmul+3
  3301  02DB  0835               	movf	??___flmul+3,w
  3302  02DC  0434               	iorwf	??___flmul+2,w
  3303  02DD  0433               	iorwf	??___flmul+1,w
  3304  02DE  0432               	iorwf	??___flmul,w
  3305  02DF  1903               	skipnz
  3306  02E0  2AE2               	goto	u1411
  3307  02E1  2AE3               	goto	u1410
  3308  02E2                     u1411:
  3309  02E2  2AE6               	goto	l656
  3310  02E3                     u1410:
  3311  02E3                     l1493:
  3312  02E3  01BC               	clrf	___flmul@aexp
  3313  02E4  0ABC               	incf	___flmul@aexp,f
  3314  02E5  2AEB               	goto	l1497
  3315  02E6                     l656:
  3316  02E6  1C3E               	btfss	___flmul@prod,0
  3317  02E7  2AE9               	goto	u1421
  3318  02E8  2AEA               	goto	u1420
  3319  02E9                     u1421:
  3320  02E9  2AEB               	goto	l1497
  3321  02EA                     u1420:
  3322  02EA  2AE3               	goto	l1493
  3323  02EB                     l1497:
  3324  02EB  083C               	movf	___flmul@aexp,w
  3325  02EC  1903               	btfsc	3,2
  3326  02ED  2AEF               	goto	u1431
  3327  02EE  2AF0               	goto	u1430
  3328  02EF                     u1431:
  3329  02EF  2B21               	goto	l1507
  3330  02F0                     u1430:
  3331  02F0                     l1499:
  3332  02F0  3001               	movlw	1
  3333  02F1  07BE               	addwf	___flmul@prod,f
  3334  02F2  3000               	movlw	0
  3335  02F3  1803               	skipnc
  3336  02F4  3001               	movlw	1
  3337  02F5  07BF               	addwf	___flmul@prod+1,f
  3338  02F6  3000               	movlw	0
  3339  02F7  1803               	skipnc
  3340  02F8  3001               	movlw	1
  3341  02F9  07C0               	addwf	___flmul@prod+2,f
  3342  02FA  3000               	movlw	0
  3343  02FB  1803               	skipnc
  3344  02FC  3001               	movlw	1
  3345  02FD  07C1               	addwf	___flmul@prod+3,f
  3346  02FE                     l1501:
  3347  02FE  1C41               	btfss	___flmul@prod+3,0
  3348  02FF  2B01               	goto	u1441
  3349  0300  2B02               	goto	u1440
  3350  0301                     u1441:
  3351  0301  2B21               	goto	l1507
  3352  0302                     u1440:
  3353  0302                     l1503:
  3354  0302  083E               	movf	___flmul@prod,w
  3355  0303  00B2               	movwf	??___flmul
  3356  0304  083F               	movf	___flmul@prod+1,w
  3357  0305  00B3               	movwf	??___flmul+1
  3358  0306  0840               	movf	___flmul@prod+2,w
  3359  0307  00B4               	movwf	??___flmul+2
  3360  0308  0841               	movf	___flmul@prod+3,w
  3361  0309  00B5               	movwf	??___flmul+3
  3362  030A  3001               	movlw	1
  3363  030B  00B6               	movwf	??___flmul+4
  3364  030C                     u1455:
  3365  030C  0D35               	rlf	??___flmul+3,w
  3366  030D  0CB5               	rrf	??___flmul+3,f
  3367  030E  0CB4               	rrf	??___flmul+2,f
  3368  030F  0CB3               	rrf	??___flmul+1,f
  3369  0310  0CB2               	rrf	??___flmul,f
  3370  0311                     u1450:
  3371  0311  0BB6               	decfsz	??___flmul+4,f
  3372  0312  2B0C               	goto	u1455
  3373  0313  0835               	movf	??___flmul+3,w
  3374  0314  00C1               	movwf	___flmul@prod+3
  3375  0315  0834               	movf	??___flmul+2,w
  3376  0316  00C0               	movwf	___flmul@prod+2
  3377  0317  0833               	movf	??___flmul+1,w
  3378  0318  00BF               	movwf	___flmul@prod+1
  3379  0319  0832               	movf	??___flmul,w
  3380  031A  00BE               	movwf	___flmul@prod
  3381  031B                     l1505:
  3382  031B  3001               	movlw	1
  3383  031C  07C2               	addwf	___flmul@temp,f
  3384  031D  1803               	skipnc
  3385  031E  0AC3               	incf	___flmul@temp+1,f
  3386  031F  3000               	movlw	0
  3387  0320  07C3               	addwf	___flmul@temp+1,f
  3388  0321                     l1507:
  3389  0321  0843               	movf	___flmul@temp+1,w
  3390  0322  3A80               	xorlw	128
  3391  0323  00FF               	movwf	btemp+1
  3392  0324  3080               	movlw	128
  3393  0325  027F               	subwf	btemp+1,w
  3394  0326  1D03               	skipz
  3395  0327  2B2A               	goto	u1465
  3396  0328  30FF               	movlw	255
  3397  0329  0242               	subwf	___flmul@temp,w
  3398  032A                     u1465:
  3399  032A  1C03               	skipc
  3400  032B  2B2D               	goto	u1461
  3401  032C  2B2E               	goto	u1460
  3402  032D                     u1461:
  3403  032D  2B39               	goto	l1511
  3404  032E                     u1460:
  3405  032E                     l1509:
  3406  032E  307F               	movlw	127
  3407  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0331  00C1               	movwf	___flmul@prod+3
  3410  0332  3080               	movlw	128
  3411  0333  00C0               	movwf	___flmul@prod+2
  3412  0334  3000               	movlw	0
  3413  0335  00BF               	movwf	___flmul@prod+1
  3414  0336  3000               	movlw	0
  3415  0337  00BE               	movwf	___flmul@prod
  3416  0338  2B6E               	goto	l662
  3417  0339                     l1511:
  3418  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3419  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3420  033B  0843               	movf	___flmul@temp+1,w
  3421  033C  3A80               	xorlw	128
  3422  033D  00FF               	movwf	btemp+1
  3423  033E  3080               	movlw	128
  3424  033F  027F               	subwf	btemp+1,w
  3425  0340  1D03               	skipz
  3426  0341  2B44               	goto	u1475
  3427  0342  3001               	movlw	1
  3428  0343  0242               	subwf	___flmul@temp,w
  3429  0344                     u1475:
  3430  0344  1803               	skipnc
  3431  0345  2B47               	goto	u1471
  3432  0346  2B48               	goto	u1470
  3433  0347                     u1471:
  3434  0347  2B54               	goto	l1517
  3435  0348                     u1470:
  3436  0348                     l1513:
  3437  0348  3000               	movlw	0
  3438  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3439  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3440  034B  00C1               	movwf	___flmul@prod+3
  3441  034C  3000               	movlw	0
  3442  034D  00C0               	movwf	___flmul@prod+2
  3443  034E  3000               	movlw	0
  3444  034F  00BF               	movwf	___flmul@prod+1
  3445  0350  3000               	movlw	0
  3446  0351  00BE               	movwf	___flmul@prod
  3447  0352                     l1515:
  3448  0352  01B7               	clrf	___flmul@sign
  3449  0353  2B6E               	goto	l662
  3450  0354                     l1517:
  3451  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0356  0842               	movf	___flmul@temp,w
  3454  0357  00B2               	movwf	??___flmul
  3455  0358  0832               	movf	??___flmul,w
  3456  0359  00BD               	movwf	___flmul@bexp
  3457  035A  30FF               	movlw	255
  3458  035B  05BE               	andwf	___flmul@prod,f
  3459  035C  30FF               	movlw	255
  3460  035D  05BF               	andwf	___flmul@prod+1,f
  3461  035E  307F               	movlw	127
  3462  035F  05C0               	andwf	___flmul@prod+2,f
  3463  0360  3000               	movlw	0
  3464  0361  05C1               	andwf	___flmul@prod+3,f
  3465  0362                     l1519:
  3466  0362  1C3D               	btfss	___flmul@bexp,0
  3467  0363  2B65               	goto	u1481
  3468  0364  2B66               	goto	u1480
  3469  0365                     u1481:
  3470  0365  2B67               	goto	l1523
  3471  0366                     u1480:
  3472  0366                     l1521:
  3473  0366  17C0               	bsf	___flmul@prod+2,7
  3474  0367                     l1523:
  3475  0367  083D               	movf	___flmul@bexp,w
  3476  0368  00B2               	movwf	??___flmul
  3477  0369  1003               	clrc
  3478  036A  0C32               	rrf	??___flmul,w
  3479  036B  00B3               	movwf	??___flmul+1
  3480  036C  0833               	movf	??___flmul+1,w
  3481  036D  00C1               	movwf	___flmul@prod+3
  3482  036E                     l662:
  3483  036E  0837               	movf	___flmul@sign,w
  3484  036F  00B2               	movwf	??___flmul
  3485  0370  0832               	movf	??___flmul,w
  3486  0371  04C1               	iorwf	___flmul@prod+3,f
  3487  0372                     l1525:
  3488  0372  0841               	movf	___flmul@prod+3,w
  3489  0373  00AD               	movwf	?___flmul+3
  3490  0374  0840               	movf	___flmul@prod+2,w
  3491  0375  00AC               	movwf	?___flmul+2
  3492  0376  083F               	movf	___flmul@prod+1,w
  3493  0377  00AB               	movwf	?___flmul+1
  3494  0378  083E               	movf	___flmul@prod,w
  3495  0379  00AA               	movwf	?___flmul
  3496  037A                     l650:
  3497  037A  0008               	return
  3498  037B                     __end_of___flmul:
  3499                           
  3500                           	psect	text12
  3501  0747                     __ptext12:	
  3502 ;; *************** function __Umul8_16 *****************
  3503 ;; Defined at:
  3504 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  multiplier      1    wreg     unsigned char 
  3507 ;;  multiplicand    1    3[COMMON] unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3510 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3511 ;;  product         2    0[BANK0 ] unsigned int 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2    3[COMMON] unsigned int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         2       0       0       0       0
  3522 ;;      Locals:         0       5       0       0       0
  3523 ;;      Temps:          2       0       0       0       0
  3524 ;;      Totals:         4       5       0       0       0
  3525 ;;Total ram usage:        9 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		___flmul
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function __Umul8_16
  3537  0747                     __Umul8_16:
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3541                           ;__Umul8_16@multiplier stored from wreg
  3542  0747  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0748  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0749  00A4               	movwf	__Umul8_16@multiplier
  3545  074A                     l1273:
  3546  074A  01A0               	clrf	__Umul8_16@product
  3547  074B  01A1               	clrf	__Umul8_16@product+1
  3548  074C                     l1275:
  3549  074C  0873               	movf	__Umul8_16@multiplicand,w
  3550  074D  00F5               	movwf	??__Umul8_16
  3551  074E  01F6               	clrf	??__Umul8_16+1
  3552  074F  0875               	movf	??__Umul8_16,w
  3553  0750  00A2               	movwf	__Umul8_16@word_mpld
  3554  0751  0876               	movf	??__Umul8_16+1,w
  3555  0752  00A3               	movwf	__Umul8_16@word_mpld+1
  3556  0753                     l1277:
  3557  0753  1C24               	btfss	__Umul8_16@multiplier,0
  3558  0754  2F56               	goto	u841
  3559  0755  2F57               	goto	u840
  3560  0756                     u841:
  3561  0756  2F5D               	goto	l669
  3562  0757                     u840:
  3563  0757                     l1279:
  3564  0757  0822               	movf	__Umul8_16@word_mpld,w
  3565  0758  07A0               	addwf	__Umul8_16@product,f
  3566  0759  1803               	skipnc
  3567  075A  0AA1               	incf	__Umul8_16@product+1,f
  3568  075B  0823               	movf	__Umul8_16@word_mpld+1,w
  3569  075C  07A1               	addwf	__Umul8_16@product+1,f
  3570  075D                     l669:
  3571  075D  3001               	movlw	1
  3572  075E                     u855:
  3573  075E  1003               	clrc
  3574  075F  0DA2               	rlf	__Umul8_16@word_mpld,f
  3575  0760  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3576  0761  3EFF               	addlw	-1
  3577  0762  1D03               	skipz
  3578  0763  2F5E               	goto	u855
  3579  0764  1003               	clrc
  3580  0765  0CA4               	rrf	__Umul8_16@multiplier,f
  3581  0766                     l1281:
  3582  0766  0824               	movf	__Umul8_16@multiplier,w
  3583  0767  1D03               	btfss	3,2
  3584  0768  2F6A               	goto	u861
  3585  0769  2F6B               	goto	u860
  3586  076A                     u861:
  3587  076A  2F53               	goto	l1277
  3588  076B                     u860:
  3589  076B                     l1283:
  3590  076B  0821               	movf	__Umul8_16@product+1,w
  3591  076C  00F4               	movwf	?__Umul8_16+1
  3592  076D  0820               	movf	__Umul8_16@product,w
  3593  076E  00F3               	movwf	?__Umul8_16
  3594  076F                     l671:
  3595  076F  0008               	return
  3596  0770                     __end_of__Umul8_16:
  3597                           
  3598                           	psect	text13
  3599  0770                     __ptext13:	
  3600 ;; *************** function _Lcd_Write_String *****************
  3601 ;; Defined at:
  3602 ;;		line 54 in file "LCD8.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  a               1    wreg     PTR unsigned char 
  3605 ;;		 -> STR_2(2), STR_1(15), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3608 ;;		 -> STR_2(2), STR_1(15), 
  3609 ;;  i               2    0[BANK0 ] int 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       0       0       0       0
  3620 ;;      Locals:         0       3       0       0       0
  3621 ;;      Temps:          0       0       0       0       0
  3622 ;;      Totals:         0       3       0       0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    4
  3626 ;; This function calls:
  3627 ;;		_Lcd_Write_Char
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;;		_WriteFloat
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _Lcd_Write_String
  3636  0770                     _Lcd_Write_String:
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3640                           ;Lcd_Write_String@a stored from wreg
  3641  0770  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0771  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0772  00A2               	movwf	Lcd_Write_String@a
  3644  0773                     l1739:
  3645                           
  3646                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  3647  0773  01A0               	clrf	Lcd_Write_String@i
  3648  0774  01A1               	clrf	Lcd_Write_String@i+1
  3649  0775  2F8B               	goto	l1745
  3650  0776                     l1741:
  3651                           
  3652                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  3653  0776  0820               	movf	Lcd_Write_String@i,w
  3654  0777  0722               	addwf	Lcd_Write_String@a,w
  3655  0778  0084               	movwf	4
  3656  0779  120A  158A  2000  120A  118A  	fcall	stringdir
  3657  077E  120A  158A  27BA  120A  118A  	fcall	_Lcd_Write_Char
  3658  0783                     l1743:
  3659  0783  3001               	movlw	1
  3660  0784  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0785  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0786  07A0               	addwf	Lcd_Write_String@i,f
  3663  0787  1803               	skipnc
  3664  0788  0AA1               	incf	Lcd_Write_String@i+1,f
  3665  0789  3000               	movlw	0
  3666  078A  07A1               	addwf	Lcd_Write_String@i+1,f
  3667  078B                     l1745:
  3668  078B  0820               	movf	Lcd_Write_String@i,w
  3669  078C  0722               	addwf	Lcd_Write_String@a,w
  3670  078D  0084               	movwf	4
  3671  078E  120A  158A  2000  120A  118A  	fcall	stringdir
  3672  0793  3A00               	xorlw	0
  3673  0794  1D03               	skipz
  3674  0795  2F97               	goto	u1681
  3675  0796  2F98               	goto	u1680
  3676  0797                     u1681:
  3677  0797  2F76               	goto	l1741
  3678  0798                     u1680:
  3679  0798                     l109:
  3680  0798  0008               	return
  3681  0799                     __end_of_Lcd_Write_String:
  3682                           
  3683                           	psect	text14
  3684  0FBA                     __ptext14:	
  3685 ;; *************** function _Lcd_Write_Char *****************
  3686 ;; Defined at:
  3687 ;;		line 46 in file "LCD8.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  a               1    wreg     unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  a               1    5[COMMON] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0
  3703 ;;      Temps:          1       0       0       0       0
  3704 ;;      Totals:         2       0       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    3
  3708 ;; This function calls:
  3709 ;;		_Lcd_Port
  3710 ;; This function is called by:
  3711 ;;		_WriteFloat
  3712 ;;		_Lcd_Write_String
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _Lcd_Write_Char
  3718  0FBA                     _Lcd_Write_Char:
  3719                           
  3720                           ;incstack = 0
  3721                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3722                           ;Lcd_Write_Char@a stored from wreg
  3723  0FBA  00F5               	movwf	Lcd_Write_Char@a
  3724  0FBB                     l1711:
  3725                           
  3726                           ;LCD8.c: 47:     RB0 = 1;
  3727  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0FBD  1406               	bsf	6,0	;volatile
  3730  0FBE                     l1713:
  3731                           
  3732                           ;LCD8.c: 48:     Lcd_Port(a);
  3733  0FBE  0875               	movf	Lcd_Write_Char@a,w
  3734  0FBF  120A  158A  2790  120A  158A  	fcall	_Lcd_Port
  3735  0FC4                     l1715:
  3736                           
  3737                           ;LCD8.c: 49:     RB1 = 1;
  3738  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0FC6  1486               	bsf	6,1	;volatile
  3741  0FC7                     l1717:
  3742                           
  3743                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3744  0FC7  301A               	movlw	26
  3745  0FC8  00F4               	movwf	??_Lcd_Write_Char
  3746  0FC9                     u2007:
  3747  0FC9  0BF4               	decfsz	??_Lcd_Write_Char,f
  3748  0FCA  2FC9               	goto	u2007
  3749  0FCB  0000               	nop
  3750  0FCC                     l1719:
  3751                           
  3752                           ;LCD8.c: 51:     RB1 = 0;
  3753  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0FCE  1086               	bcf	6,1	;volatile
  3756  0FCF                     l103:
  3757  0FCF  0008               	return
  3758  0FD0                     __end_of_Lcd_Write_Char:
  3759                           
  3760                           	psect	text15
  3761  07B8                     __ptext15:	
  3762 ;; *************** function _Lcd_Set_Cursor *****************
  3763 ;; Defined at:
  3764 ;;		line 21 in file "LCD8.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  a               1    wreg     unsigned char 
  3767 ;;  b               1    7[COMMON] unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  a               1    0[BANK0 ] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, pclath, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         1       0       0       0       0
  3780 ;;      Locals:         0       1       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         1       1       0       0       0
  3783 ;;Total ram usage:        2 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    4
  3786 ;; This function calls:
  3787 ;;		_Lcd_Cmd
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;;		_WriteFloat
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function _Lcd_Set_Cursor
  3796  07B8                     _Lcd_Set_Cursor:
  3797                           
  3798                           ;incstack = 0
  3799                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3800                           ;Lcd_Set_Cursor@a stored from wreg
  3801  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3802  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3803  07BA  00A0               	movwf	Lcd_Set_Cursor@a
  3804  07BB                     l1731:
  3805                           
  3806                           ;LCD8.c: 22:     if (a == 1) {
  3807  07BB  0320               	decf	Lcd_Set_Cursor@a,w
  3808  07BC  1D03               	btfss	3,2
  3809  07BD  2FBF               	goto	u1661
  3810  07BE  2FC0               	goto	u1660
  3811  07BF                     u1661:
  3812  07BF  2FC8               	goto	l1735
  3813  07C0                     u1660:
  3814  07C0                     l1733:
  3815                           
  3816                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  3817  07C0  0877               	movf	Lcd_Set_Cursor@b,w
  3818  07C1  3E7F               	addlw	127
  3819  07C2  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3820                           
  3821                           ;LCD8.c: 24:     } else if (a == 2) {
  3822  07C7  2FD5               	goto	l97
  3823  07C8                     l1735:
  3824  07C8  3002               	movlw	2
  3825  07C9  0620               	xorwf	Lcd_Set_Cursor@a,w
  3826  07CA  1D03               	btfss	3,2
  3827  07CB  2FCD               	goto	u1671
  3828  07CC  2FCE               	goto	u1670
  3829  07CD                     u1671:
  3830  07CD  2FD5               	goto	l97
  3831  07CE                     u1670:
  3832  07CE                     l1737:
  3833                           
  3834                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  3835  07CE  0877               	movf	Lcd_Set_Cursor@b,w
  3836  07CF  3EBF               	addlw	191
  3837  07D0  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3838  07D5                     l97:
  3839  07D5  0008               	return
  3840  07D6                     __end_of_Lcd_Set_Cursor:
  3841                           
  3842                           	psect	text16
  3843  0679                     __ptext16:	
  3844 ;; *************** function _Lcd_Init *****************
  3845 ;; Defined at:
  3846 ;;		line 29 in file "LCD8.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, pclath, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0
  3862 ;;      Temps:          0       2       0       0       0
  3863 ;;      Totals:         0       2       0       0       0
  3864 ;;Total ram usage:        2 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    4
  3867 ;; This function calls:
  3868 ;;		_Lcd_Cmd
  3869 ;;		_Lcd_Port
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _Lcd_Init
  3877  0679                     _Lcd_Init:
  3878  0679                     l1831:	
  3879                           ;incstack = 0
  3880                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3881                           
  3882                           
  3883                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3884  0679  3027               	movlw	39
  3885  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3886  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3887  067C  00A1               	movwf	??_Lcd_Init+1
  3888  067D  30F4               	movlw	244
  3889  067E  00A0               	movwf	??_Lcd_Init
  3890  067F                     u2017:
  3891  067F  0BA0               	decfsz	??_Lcd_Init,f
  3892  0680  2E7F               	goto	u2017
  3893  0681  0BA1               	decfsz	??_Lcd_Init+1,f
  3894  0682  2E7F               	goto	u2017
  3895  0683  0000               	nop
  3896  0684                     l1833:
  3897                           
  3898                           ;LCD8.c: 31:     Lcd_Port(0x00);
  3899  0684  3000               	movlw	0
  3900  0685  120A  158A  2790  120A  118A  	fcall	_Lcd_Port
  3901  068A                     l1835:
  3902                           
  3903                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3904  068A  3034               	movlw	52
  3905  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3906  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3907  068D  00A1               	movwf	??_Lcd_Init+1
  3908  068E  30F1               	movlw	241
  3909  068F  00A0               	movwf	??_Lcd_Init
  3910  0690                     u2027:
  3911  0690  0BA0               	decfsz	??_Lcd_Init,f
  3912  0691  2E90               	goto	u2027
  3913  0692  0BA1               	decfsz	??_Lcd_Init+1,f
  3914  0693  2E90               	goto	u2027
  3915                           
  3916                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  3917  0694  3030               	movlw	48
  3918  0695  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3919  069A                     l1837:
  3920                           
  3921                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3922  069A  300D               	movlw	13
  3923  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3924  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3925  069D  00A1               	movwf	??_Lcd_Init+1
  3926  069E  30FB               	movlw	251
  3927  069F  00A0               	movwf	??_Lcd_Init
  3928  06A0                     u2037:
  3929  06A0  0BA0               	decfsz	??_Lcd_Init,f
  3930  06A1  2EA0               	goto	u2037
  3931  06A2  0BA1               	decfsz	??_Lcd_Init+1,f
  3932  06A3  2EA0               	goto	u2037
  3933  06A4                     l1839:
  3934                           
  3935                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  3936  06A4  3030               	movlw	48
  3937  06A5  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3938                           
  3939                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  3940  06AA  3069               	movlw	105
  3941  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3942  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3943  06AD  00A0               	movwf	??_Lcd_Init
  3944  06AE                     u2047:
  3945  06AE  0BA0               	decfsz	??_Lcd_Init,f
  3946  06AF  2EAE               	goto	u2047
  3947  06B0  2EB1               	nop2
  3948  06B1                     l1841:
  3949                           
  3950                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  3951  06B1  3030               	movlw	48
  3952  06B2  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3953  06B7                     l1843:
  3954                           
  3955                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  3956  06B7  3038               	movlw	56
  3957  06B8  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3958  06BD                     l1845:
  3959                           
  3960                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  3961  06BD  3010               	movlw	16
  3962  06BE  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3963  06C3                     l1847:
  3964                           
  3965                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  3966  06C3  3001               	movlw	1
  3967  06C4  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3968  06C9                     l1849:
  3969                           
  3970                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  3971  06C9  3006               	movlw	6
  3972  06CA  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3973  06CF                     l1851:
  3974                           
  3975                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  3976  06CF  300C               	movlw	12
  3977  06D0  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  3978  06D5                     l100:
  3979  06D5  0008               	return
  3980  06D6                     __end_of_Lcd_Init:
  3981                           
  3982                           	psect	text17
  3983  07F3                     __ptext17:	
  3984 ;; *************** function _Lcd_Clear *****************
  3985 ;; Defined at:
  3986 ;;		line 16 in file "LCD8.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    4
  4007 ;; This function calls:
  4008 ;;		_Lcd_Cmd
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _Lcd_Clear
  4016  07F3                     _Lcd_Clear:
  4017  07F3                     l1853:	
  4018                           ;incstack = 0
  4019                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4020                           
  4021                           
  4022                           ;LCD8.c: 17:     Lcd_Cmd(0);
  4023  07F3  3000               	movlw	0
  4024  07F4  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4025                           
  4026                           ;LCD8.c: 18:     Lcd_Cmd(1);
  4027  07F9  3001               	movlw	1
  4028  07FA  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4029  07FF                     l91:
  4030  07FF  0008               	return
  4031  0800                     __end_of_Lcd_Clear:
  4032                           
  4033                           	psect	text18
  4034  0FE6                     __ptext18:	
  4035 ;; *************** function _Lcd_Cmd *****************
  4036 ;; Defined at:
  4037 ;;		line 8 in file "LCD8.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  a               1    wreg     unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  a               1    6[COMMON] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4051 ;;      Params:         0       0       0       0       0
  4052 ;;      Locals:         1       0       0       0       0
  4053 ;;      Temps:          2       0       0       0       0
  4054 ;;      Totals:         3       0       0       0       0
  4055 ;;Total ram usage:        3 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    3
  4058 ;; This function calls:
  4059 ;;		_Lcd_Port
  4060 ;; This function is called by:
  4061 ;;		_Lcd_Clear
  4062 ;;		_Lcd_Set_Cursor
  4063 ;;		_Lcd_Init
  4064 ;;		_Lcd_Shift_Right
  4065 ;;		_Lcd_Shift_Left
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _Lcd_Cmd
  4071  0FE6                     _Lcd_Cmd:
  4072                           
  4073                           ;incstack = 0
  4074                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4075                           ;Lcd_Cmd@a stored from wreg
  4076  0FE6  00F6               	movwf	Lcd_Cmd@a
  4077  0FE7                     l1721:
  4078                           
  4079                           ;LCD8.c: 9:     RB0 = 0;
  4080  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4082  0FE9  1006               	bcf	6,0	;volatile
  4083  0FEA                     l1723:
  4084                           
  4085                           ;LCD8.c: 10:     Lcd_Port(a);
  4086  0FEA  0876               	movf	Lcd_Cmd@a,w
  4087  0FEB  120A  158A  2790  120A  158A  	fcall	_Lcd_Port
  4088  0FF0                     l1725:
  4089                           
  4090                           ;LCD8.c: 11:     RB1 = 1;
  4091  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0FF2  1486               	bsf	6,1	;volatile
  4094  0FF3                     l1727:
  4095                           
  4096                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4097  0FF3  300B               	movlw	11
  4098  0FF4  00F5               	movwf	??_Lcd_Cmd+1
  4099  0FF5  3062               	movlw	98
  4100  0FF6  00F4               	movwf	??_Lcd_Cmd
  4101  0FF7                     u2057:
  4102  0FF7  0BF4               	decfsz	??_Lcd_Cmd,f
  4103  0FF8  2FF7               	goto	u2057
  4104  0FF9  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4105  0FFA  2FF7               	goto	u2057
  4106  0FFB  0000               	nop
  4107  0FFC                     l1729:
  4108                           
  4109                           ;LCD8.c: 13:     RB1 = 0;
  4110  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0FFE  1086               	bcf	6,1	;volatile
  4113  0FFF                     l88:
  4114  0FFF  0008               	return
  4115  1000                     __end_of_Lcd_Cmd:
  4116                           
  4117                           	psect	text19
  4118  0F90                     __ptext19:	
  4119 ;; *************** function _Lcd_Port *****************
  4120 ;; Defined at:
  4121 ;;		line 4 in file "LCD8.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  a               1    wreg     unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  a               1    3[COMMON] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         0       0       0       0       0
  4136 ;;      Locals:         1       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0
  4138 ;;      Totals:         1       0       0       0       0
  4139 ;;Total ram usage:        1 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    2
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_Lcd_Cmd
  4146 ;;		_Lcd_Init
  4147 ;;		_Lcd_Write_Char
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function _Lcd_Port
  4153  0F90                     _Lcd_Port:
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _Lcd_Port: [wreg]
  4157                           ;Lcd_Port@a stored from wreg
  4158  0F90  00F3               	movwf	Lcd_Port@a
  4159  0F91                     l1709:
  4160                           
  4161                           ;LCD8.c: 5:     PORTD = a;
  4162  0F91  0873               	movf	Lcd_Port@a,w
  4163  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0F94  0088               	movwf	8	;volatile
  4166  0F95                     l85:
  4167  0F95  0008               	return
  4168  0F96                     __end_of_Lcd_Port:
  4169                           
  4170                           	psect	text20
  4171  0799                     __ptext20:	
  4172 ;; *************** function _oli *****************
  4173 ;; Defined at:
  4174 ;;		line 123 in file "Master.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0
  4190 ;;      Temps:          3       0       0       0       0
  4191 ;;      Totals:         3       0       0       0       0
  4192 ;;Total ram usage:        3 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    1
  4195 ;; This function calls:
  4196 ;;		_Receive
  4197 ;; This function is called by:
  4198 ;;		Interrupt level 1
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _oli
  4204  0799                     _oli:
  4205  0799                     i1l1697:
  4206  0799  1283               	bcf	3,5	;RP0=0, select bank0
  4207  079A  1303               	bcf	3,6	;RP1=0, select bank0
  4208  079B  1E8C               	btfss	12,5	;volatile
  4209  079C  2F9E               	goto	u165_21
  4210  079D  2F9F               	goto	u165_20
  4211  079E                     u165_21:
  4212  079E  2FB1               	goto	i1l71
  4213  079F                     u165_20:
  4214  079F                     i1l1699:
  4215  079F  120A  158A  27AC  120A  118A  	fcall	_Receive
  4216  07A4  00F0               	movwf	??_oli
  4217  07A5  0870               	movf	??_oli,w
  4218  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4219  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  4220  07A8  00DD               	movwf	_comando
  4221  07A9                     i1l1701:
  4222  07A9  30C7               	movlw	199
  4223  07AA  00F0               	movwf	??_oli
  4224  07AB                     u206_27:
  4225  07AB  0BF0               	decfsz	??_oli,f
  4226  07AC  2FAB               	goto	u206_27
  4227  07AD  2FAE               	nop2
  4228  07AE                     i1l1703:
  4229  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  4230  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  4231  07B0  128C               	bcf	12,5	;volatile
  4232  07B1                     i1l71:
  4233  07B1  0872               	movf	??_oli+2,w
  4234  07B2  008A               	movwf	10
  4235  07B3  0E71               	swapf	??_oli+1,w
  4236  07B4  0083               	movwf	3
  4237  07B5  0EFE               	swapf	btemp,f
  4238  07B6  0E7E               	swapf	btemp,w
  4239  07B7  0009               	retfie
  4240  07B8                     __end_of_oli:
  4241                           
  4242                           	psect	intentry
  4243  0004                     __pintentry:	
  4244                           ;incstack = 0
  4245                           ; Regs used in _oli: [wreg+pclath+cstack]
  4246                           
  4247  0004                     interrupt_function:
  4248  007E                     saved_w	set	btemp
  4249  0004  00FE               	movwf	btemp
  4250  0005  0E03               	swapf	3,w
  4251  0006  00F1               	movwf	??_oli+1
  4252  0007  080A               	movf	10,w
  4253  0008  00F2               	movwf	??_oli+2
  4254  0009  120A  118A  2F99   	ljmp	_oli
  4255                           
  4256                           	psect	text21
  4257  0FAC                     __ptext21:	
  4258 ;; *************** function _Receive *****************
  4259 ;; Defined at:
  4260 ;;		line 18 in file "EUSART.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_oli
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _Receive
  4289  0FAC                     _Receive:
  4290  0FAC                     i1l1643:	
  4291                           ;incstack = 0
  4292                           ; Regs used in _Receive: [wreg]
  4293                           
  4294                           
  4295                           ;EUSART.c: 19:     if (RCSTAbits.OERR){
  4296  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0FAE  1C98               	btfss	24,1	;volatile
  4299  0FAF  2FB1               	goto	u163_21
  4300  0FB0  2FB2               	goto	u163_20
  4301  0FB1                     u163_21:
  4302  0FB1  2FB4               	goto	i1l138
  4303  0FB2                     u163_20:
  4304  0FB2                     i1l1645:
  4305                           
  4306                           ;EUSART.c: 20:         RCSTAbits.CREN=0;
  4307  0FB2  1218               	bcf	24,4	;volatile
  4308                           
  4309                           ;EUSART.c: 21:         RCSTAbits.CREN=1;
  4310  0FB3  1618               	bsf	24,4	;volatile
  4311  0FB4                     i1l138:	
  4312                           ;EUSART.c: 24:     }
  4313                           
  4314                           
  4315                           ;EUSART.c: 23:     while (PIR1bits.RCIF==0){
  4316  0FB4  1E8C               	btfss	12,5	;volatile
  4317  0FB5  2FB7               	goto	u164_21
  4318  0FB6  2FB8               	goto	u164_20
  4319  0FB7                     u164_21:
  4320  0FB7  2FB4               	goto	i1l138
  4321  0FB8                     u164_20:
  4322  0FB8                     i1l1647:
  4323                           
  4324                           ;EUSART.c: 25:     return RCREG;
  4325  0FB8  081A               	movf	26,w	;volatile
  4326  0FB9                     i1l141:
  4327  0FB9  0008               	return
  4328  0FBA                     __end_of_Receive:
  4329  007E                     btemp	set	126	;btemp
  4330  007E                     wtemp0	set	126
  4331                           
  4332                           	psect	config
  4333                           
  4334                           ;Config register CONFIG1 @ 0x2007
  4335                           ;	Oscillator Selection bits
  4336                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4337                           ;	Watchdog Timer Enable bit
  4338                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4339                           ;	Power-up Timer Enable bit
  4340                           ;	PWRTE = OFF, PWRT disabled
  4341                           ;	RE3/MCLR pin function select bit
  4342                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4343                           ;	Code Protection bit
  4344                           ;	CP = OFF, Program memory code protection is disabled
  4345                           ;	Data Code Protection bit
  4346                           ;	CPD = OFF, Data memory code protection is disabled
  4347                           ;	Brown Out Reset Selection bits
  4348                           ;	BOREN = OFF, BOR disabled
  4349                           ;	Internal External Switchover bit
  4350                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4351                           ;	Fail-Safe Clock Monitor Enabled bit
  4352                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4353                           ;	Low Voltage Programming Enable bit
  4354                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4355                           ;	In-Circuit Debugger Mode bit
  4356                           ;	DEBUG = 0x1, unprogrammed default
  4357  2007                     	org	8199
  4358  2007  20F1               	dw	8433
  4359                           
  4360                           ;Config register CONFIG2 @ 0x2008
  4361                           ;	Brown-out Reset Selection bit
  4362                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4363                           ;	Flash Program Memory Self Write Enable bits
  4364                           ;	WRT = OFF, Write protection off
  4365  2008                     	org	8200
  4366  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     61      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[2]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_spiInit
    _WriteFloat->_Lcd_Set_Cursor
    _WriteFloat->___lwdiv
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteFloat
    _WriteFloat->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8026
                                             59 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _WriteFloat
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _WriteFloat                                          12    10      2    6596
                                             47 BANK0     12    10      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     264
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     636
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _Receive
 ---------------------------------------------------------------------------------
 (6) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _WriteFloat
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _oli (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:49:29 2021

                        _a 005E                          pc 0002                _SSPSTATbits 0094  
                       l65 07F2                         l74 0479                         l91 07FF  
                       l85 0F95                         l88 0FFF                         l97 07D5  
                       u80 0FA2                         u81 0FA1                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l100 06D5  
                      l103 0FCF                        l109 0798                        l161 0F9C  
                      l164 0FA2                        l261 072C                        l157 0FE0  
                      l158 0FE5                        l263 0746                        l175 0FAB  
                      l167 0F9B                        l700 05AA                        l533 071B  
                      l454 0663                        l447 0678                        l457 0678  
                      l650 037A                        l707 05C6                        l708 05D2  
                      l662 036E                        l671 076F                        l656 02E6  
                      l669 075D                        l829 0F9C                        l694 0565  
                      l696 05FC                        _RB0 0030                        _RB1 0031  
                      u900 0FD8                        u901 0FD7                        u840 0757  
                      u841 0756                        u860 076B                        u861 076A  
                      u950 060A                        u855 075E                        u951 0609  
                      u960 0621                        u970 0637                        u971 0636  
                      u980 063E                        u981 063D                        u965 061C  
                      u995 0640                        _oli 0799                        fsr0 0004  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 004E  
                     l1125 0F97                       l1311 0FDF                       l1303 0FD1  
                     l1127 0FA3                       l1401 0036                       l1305 0FD8  
                     l1129 0FA8                       l1411 0053                       l1403 003E  
                     l1307 0FDA                       l1501 02FE                       l1421 006A  
                     l1413 0057                       l1405 0040                       l1341 0633  
                     l1333 0613                       l1309 0FDC                       l1511 0339  
                     l1503 0302                       l1423 006C                       l1415 0058  
                     l1407 0048                       l1343 0637                       l1351 0651  
                     l1335 0628                       l1327 05FD                       l1281 0766  
                     l1273 074A                       l1521 0366                       l1513 0348  
                     l1505 031B                       l1441 00DD                       l1433 0087  
                     l1425 0074                       l1417 005D                       l1409 004D  
                     l1361 066D                       l1337 0629                       l1329 060A  
                     l1283 076B                       l1275 074C                       l1523 0367  
                     l1515 0352                       l1507 0321                       l1451 015A  
                     l1443 0109                       l1435 0097                       l1427 0079  
                     l1419 0062                       l1339 0631                       l1277 0753  
                     l1525 0372                       l1517 0354                       l1509 032E  
                     l1461 01DA                       l1453 0177                       l1445 0125  
                     l1437 00A4                       l1429 007E                       l1357 0658  
                     l1349 063F                       l1711 0FBB                       l1279 0757  
                     l1519 0362                       l1471 0292                       l1463 0207  
                     l1455 0187                       l1447 0141                       l1439 00C1  
                     l1391 0021                       l1359 0668                       l1721 0FE7  
                     l1713 0FBE                       l1481 02B7                       l1473 029B  
                     l1465 0217                       l1457 01A4                       l1449 014A  
                     l1393 0027                       l1801 057B                       l1723 0FEA  
                     l1731 07BB                       l1715 0FC4                       l1491 02CF  
                     l1483 02C0                       l1475 02A9                       l1467 0244  
                     l1459 01BD                       l1395 002B                       l1811 05B1  
                     l1803 0588                       l1709 0F91                       l1725 0FF0  
                     l1733 07C0                       l1717 0FC7                       l1741 0776  
                     l1493 02E3                       l1477 02B2                       l1485 02C6  
                     l1469 026A                       l1397 002C                       l1389 001A  
                     l1821 05EA                       l1813 05BC                       l1805 058F  
                     l1581 07E8                       l1573 07D6                       l1901 04A2  
                     l1727 0FF3                       l1831 0679                       l1735 07C8  
                     l1719 0FCC                       l1743 0783                       l1487 02CA  
                     l1479 02B6                       l1399 0031                       l1751 0724  
                     l1823 05EF                       l1815 05C0                       l1807 0593  
                     l1583 07E9                       l1575 07D9                       l1911 04C0  
                     l1903 04AC                       l1729 0FFC                       l1841 06B1  
                     l1833 0684                       l1737 07CE                       l1745 078B  
                     l1497 02EB                       l1489 02CB                       l1761 06D6  
                     l1753 0733                       l1825 05F3                       l1817 05CA  
                     l1809 05A1                       l1577 07DA                       l1921 04E2  
                     l1913 04CA                       l1905 04AF                       l1851 06CF  
                     l1843 06B7                       l1835 068A                       l1739 0773  
                     l1499 02F0                       l1771 06EE                       l1763 06DA  
                     l1755 073A                       l1747 071C                       l1827 05F4  
                     l1819 05D4                       l1579 07E7                       l1931 051D  
                     l1923 04E8                       l1915 04D4                       l1907 04B0  
                     l1853 07F3                       l1845 06BD                       l1837 069A  
                     l1781 0711                       l1773 06F2                       l1765 06E0  
                     l1757 0740                       l1749 0720                       l1861 03EA  
                     l1933 052D                       l1925 04F2                       l1917 04D7  
                     l1909 04BA                       l1847 06C3                       l1839 06A4  
                     l1775 0703                       l1767 06E3                       l1783 0717  
                     l1791 054D                       l1871 0425                       l1863 03FD  
                     l1855 037E                       l1927 0509                       l1919 04D8  
                     l1849 06C9                       l1777 0709                       l1769 06EA  
                     l1793 055D                       l1881 044F                       l1873 042A  
                     l1865 0417                       l1857 03BD                       l1929 050F  
                     l1779 070A                       l1795 056D                       l1787 0544  
                     l1883 045C                       l1875 0434                       l1867 041B  
                     l1859 03D0                       l1891 0484                       l1789 0549  
                     l1885 0464                       l1877 043C                       l1869 0420  
                     l1893 0487                       l1799 0576                       l1887 0471  
                     l1879 0449                       l1895 0488                       l1897 0492  
                     l1889 047A                       l1899 0498                       ?_oli 0070  
                     STR_1 0806                       STR_2 0815                       u1000 0650  
                     u1001 064F                       u1010 0657                       u1011 0656  
                     u1030 0668                       u1031 0667                       u1120 002B  
                     u1040 066D                       u1201 00CF                       u1121 002A  
                     u1041 066C                       u1025 065A                       u1202 00D6  
                     u1130 0031                       u1211 00EB                       u1203 00DD  
                     u1131 0030                       u1212 00F2                       u1140 0036  
                     u1301 0226                       u1221 0117                       u1213 00F9  
                     u1141 0035                       u1310 0250                       u1302 022D  
                     u1222 011E                       u1150 0057                       u2007 0FC9  
                     u1303 0234                       u1231 0133                       u1223 0125  
                     u1151 0056                       u1400 02CF                       u1232 013A  
                     u1160 005D                       u2017 067F                       u1401 02CE  
                     u1321 025C                       u1233 0141                       u1161 005C  
                     u1410 02E3                       u1330 0278                       u1322 0263  
                     u1170 0062                       u2027 0690                       u1411 02E2  
                     u1323 026A                       u1315 024B                       u1251 0169  
                     u1171 0061                       u1420 02EA                       u1252 0170  
                     u1180 0079                       u2037 06A0                       u1421 02E9  
                     u1341 0284                       u1261 0196                       u1253 0177  
                     u1245 0143                       u1181 0078                       u1430 02F0  
                     u1342 028B                       u1262 019D                       u1190 007E  
                     u2047 06AE                       u1431 02EF                       u1343 0292  
                     u1335 0273                       u1263 01A4                       u1191 007D  
                     u1440 0302                       u2057 0FF7                       u1441 0301  
                     u1281 01CC                       u1450 0311                       u1370 02B6  
                     u1282 01D3                       u1371 02B5                       u1355 0294  
                     u1291 01F9                       u1283 01DA                       u1275 01A6  
                     u1460 032E                       u1292 0200                       u1461 032D  
                     u1365 02AB                       u1293 0207                       u1470 0348  
                     u1390 02CA                       u1471 0347                       u1455 030C  
                     u1391 02C9                       u1480 0366                       u1720 0740  
                     u1800 0549                       u1481 0365                       u1465 032A  
                     u1385 02B9                       u1721 073F                       u1705 072D  
                     u1801 0548                       u1730 06E0                       u1810 054D  
                     u1475 0344                       u1731 06DF                       u1715 0734  
                     u1811 054C                       u1660 07C0                       u1900 05CA  
                     u1820 056D                       u1661 07BF                       u1901 05C9  
                     u1821 056C                       u1670 07CE                       u1750 06F2  
                     u1910 05DF                       u1671 07CD                       u1751 06F1  
                     u1680 0798                       u1920 05EF                       u1840 058E  
                     u1681 0797                       u1745 06E4                       u1921 05EE  
                     u1841 058D                       u1770 0703                       u1690 0724  
                     u1930 05F3                       u1771 0702                       u1691 0723  
                     u1931 05F2                       u1915 05DA                       u1835 0580  
                     u1860 05B0                       u1765 06F3                       u1861 05AF  
                     u1790 0717                       u1791 0716                       u1775 06FF  
                     u1855 05A2                       u1880 05C0                       u1785 070B  
                     u1881 05BF                       u1890 05C6                       u1891 05C5  
                     u1875 05B5                       u1947 048E                       u1957 04A8  
                     u1967 04B6                       u1977 04D0                       u1987 04DE  
                     u1997 04F8                       i1l71 07B1          ?_Lcd_Write_String 0070  
                     _main 047A                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 1000            __end_of_Receive 0FBA  
                    ??_oli 0070              ___fltol@sign1 004D                      ?_main 0070  
          __end_of___flmul 037B            __end_of___fltol 0679                      _ANSEL 0188  
          __end_of___lwdiv 071C                      i1l141 0FB9                      i1l138 0FB4  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 001E                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _setup 07D6  
                    pclath 000A            __end_of_spiInit 0FE6            __end_of_spiRead 0FAC  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 06D6  
         __end_of_Lcd_Port 0F96            __initialization 000F               __end_of_main 0541  
                   ??_main 005B         __size_of_Lcd_Clear 000D                     ?_setup 0070  
                   _ANSELH 0189                     i1l1701 07A9                     i1l1703 07AE  
                   i1l1643 0FAC                     i1l1645 0FB2                     i1l1647 0FB8  
                   i1l1697 0799                     i1l1699 079F                     u206_27 07AB  
                   u163_20 0FB2                     u163_21 0FB1                     u164_20 0FB8  
                   u164_21 0FB7                     u165_20 079F                     u165_21 079E  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 05FD                  ??_Receive 0070  
                   ___wmul 071C                  ??___flmul 0032                  ??___fltol 0048  
                ??___lwdiv 0077         __size_of__Umul8_16 0029                     saved_w 007E  
         __end_of_spiWrite 0F9C                  ??_spiInit 0076                  ??_spiRead 0073  
           WriteFloat@cent 0055             WriteFloat@fila 0058             WriteFloat@temp 0059  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073    __end_of__initialization 0016  
        __end_of_Lcd_Clear 0800                 ___fltol@f1 0044             __pcstackCOMMON 0070  
               _WriteFloat 037B              __end_of_setup 07F3             _Lcd_Set_Cursor 07B8  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0077  
               __pbssBANK0 005D          __end_of__Umul8_16 0770                 __pmaintext 047A  
                  ?___wmul 0073                 __pintentry 0004    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 07D6                  ?___xxtofl 0073  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 0FBA                    _Lcd_Cmd 0FE6  
                  _Receive 0FAC                    _Sensor1 007A                    _Sensor2 0079  
                  _Sensor3 0078                  ?_spiWrite 0070                ?_WriteFloat 004F  
                  ___flmul 001A                    ___fltol 05FD            __size_of___wmul 002B  
                  ___lwdiv 06D6            ?_Lcd_Set_Cursor 0077                    __ptext1 0F96  
                  __ptext2 0FA3                    __ptext3 0F9C                    __ptext4 07D6  
                  __ptext5 0FD0                    __ptext6 037B                    __ptext7 0541  
                  __ptext8 071C                    __ptext9 06D6                    _comando 005D  
             __size_of_oli 001F                 ??___xxtofl 0020                    _spiInit 0FD0  
                  _spiRead 0FA3     __end_of_Lcd_Write_Char 0FD0       end_of_initialization 0016  
                _RCSTAbits 0018                 ??_spiWrite 0073                  Lcd_Port@a 0073  
          WriteFloat@valor 0050                  _PORTAbits 0005              ___xxtofl@sign 0024  
                _TRISCbits 0087                spiWrite@dat 0073            ?_Lcd_Write_Char 0070  
      __size_of_WriteFloat 00FF          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
              ___flmul@grs 0038                  _TXSTAbits 0098                  _Lcd_Clear 07F3  
           _spiReceiveWait 0F9C             __end_of___wmul 0747           _Lcd_Write_String 0770  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_oli 07B8  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0FA3  
               ?_Lcd_Clear 0070                   ??___wmul 0077                  __Umul8_16 0747  
          Lcd_Write_Char@a 0075              WriteFloat@dec 0057                  ___flmul@a 002E  
                ___flmul@b 002A                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
                 ?_Receive 0070           ___lwdiv@dividend 0075            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0078               ??_WriteFloat 0051                   ?___flmul 002A  
                 ?___fltol 0044                 ?__Umul8_16 0073                   ?___lwdiv 0073  
        __size_of_spiWrite 0006                  __pstrings 0800                   ?_spiInit 0073  
                 ?_spiRead 0070           ___lwdiv@quotient 0021             __size_of_setup 001D  
       __end_of_WriteFloat 047A       spiInit@sTransmitEdge 0075          interrupt_function 0004  
           ___wmul@product 0020                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
              __stringbase 0805          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 0679                   _Lcd_Port 0F90   __end_of_Lcd_Write_String 0799  
         __size_of_Lcd_Cmd 001A           __size_of_Receive 000E                ??__Umul8_16 0075  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
       __end_of__stringtab 0806                   ___xxtofl 0541            ___lwdiv@divisor 0073  
          ___lwdiv@counter 0020                   __ptext10 05FD                   __ptext11 001A  
                 __ptext20 0799                   __ptext12 0747                   __ptext21 0FAC  
                 __ptext13 0770                   __ptext14 0FBA                   __ptext15 07B8  
                 __ptext16 0679                   __ptext17 07F3                   __ptext18 0FE6  
                 __ptext19 0F90           __size_of_spiInit 0016           __size_of_spiRead 0009  
            __size_of_main 00C7                   _spiWrite 0F96               spiInit@sType 0076  
        spiInit@sClockIdle 0074                 _INTCONbits 000B                   intlevel1 0000  
         ??_spiReceiveWait 0073          WriteFloat@columna 004F                  stringcode 0800  
   __Umul8_16@multiplicand 0073                   stringdir 0800                   stringtab 0800  
         WriteFloat@unidad 0056       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
