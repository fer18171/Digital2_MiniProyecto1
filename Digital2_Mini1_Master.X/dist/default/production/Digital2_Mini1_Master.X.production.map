Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Digital2_Mini1_Master.X.production.sym \
  --cmf=dist/default/production\Digital2_Mini1_Master.X.production.cmf -z \
  -Q16F887 -oC:\Users\santi\AppData\Local\Temp\s39o.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Digital2_Mini1_Master.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\santi\AppData\Local\Temp\s39o.o \
  dist/default/production\Digital2_Mini1_Master.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\santi\AppData\Local\Temp\s39o.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Digital2_Mini1_Master.X.production.o
                cinit                                 F        F        B        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text21                              E8F      E8F        E     1D1E       0
                text20                              F1E      F1E       1F     1E3C       0
                text19                              E6F      E6F        6     1CDE       0
                text18                              EC9      EC9       1A     1D92       0
                text17                              E82      E82        D     1D04       0
                text16                              798      798       5D        8       0
                text15                              F00      F00       1E     1E00       0
                text14                              E9D      E9D       16     1D3A       0
                text13                              F3D      F3D       29     1E7A       0
                text12                              F66      F66       29     1ECC       0
                text11                               1A       1A      361        8       0
                text10                              71C      71C       7C        8       0
                text9                               FBA      FBA       46     1F74       0
                text8                               F8F      F8F       2B     1F1E       0
                text7                               660      660       BC        8       0
                text6                               37B      37B      213        8       0
                text5                               EB3      EB3       16     1D66       0
                text4                               EE3      EE3       1D     1DC6       0
                text3                               E7B      E7B        7     1CF6       0
                text2                               7F5      7F5        9        8       0
                text1                               E75      E75        6     1CEA       0
                maintext                            58E      58E       D2        8       0
                cstackBANK0                          20       20       40       20       1
                cstackCOMMON                         70       70        8       70       1
                bssBANK0                             60       60        2       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             800      800       1F     1000       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F        B         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text21                              E8F      E8F        E         0
                text20                              F1E      F1E       1F         0
                text19                              E6F      E6F        6         0
                text18                              EC9      EC9       1A         0
                text17                              E82      E82        D         0
                text16                              798      798       5D         0
                text15                              F00      F00       1E         0
                text14                              E9D      E9D       16         0
                text13                              F3D      F3D       29         0
                text12                              F66      F66       29         0
                text11                               1A       1A      361         0
                text10                              71C      71C       7C         0
                text9                               FBA      FBA       46         0
                text8                               F8F      F8F       2B         0
                text7                               660      660       BC         0
                text6                               37B      37B      213         0
                text5                               EB3      EB3       16         0
                text4                               EE3      EE3       1D         0
                text3                               E7B      E7B        7         0
                text2                               7F5      7F5        9         0
                text1                               E75      E75        6         0
                maintext                            58E      58E       D2         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       1F         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20       40         1
                bssBANK0                             60       60        2         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FA  0007FE         8       0  CODE        2
                cstackBANK0                    000020  000042  000062        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        000800  00001F  00081F      1000       0  STRING      2
                text19                         000E6F  000006  000E75      1CDE       0  CODE        2
                text1                          000E75  000006  000E7B      1CEA       0  CODE        2
                text3                          000E7B  000007  000E82      1CF6       0  CODE        2
                text17                         000E82  00000D  000E8F      1D04       0  CODE        2
                text21                         000E8F  00000E  000E9D      1D1E       0  CODE        2
                text14                         000E9D  000016  000EB3      1D3A       0  CODE        2
                text5                          000EB3  000016  000EC9      1D66       0  CODE        2
                text18                         000EC9  00001A  000EE3      1D92       0  CODE        2
                text4                          000EE3  00001D  000F00      1DC6       0  CODE        2
                text15                         000F00  00001E  000F1E      1E00       0  CODE        2
                text20                         000F1E  00001F  000F3D      1E3C       0  CODE        2
                text13                         000F3D  000029  000F66      1E7A       0  CODE        2
                text12                         000F66  000029  000F8F      1ECC       0  CODE        2
                text8                          000F8F  00002B  000FBA      1F1E       0  CODE        2
                text9                          000FBA  000046  001000      1F74       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0062-006F              E           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         07FE-07FF              2
                         081F-0E6E            650
                         1000-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         07FE-07FF              2
                         081F-0E6E            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FE-07FF              2
                         081F-0E6E            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0062-006F              E           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FE-07FF              2
                         081F-0E6E            650
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FE-07FF              2
                         081F-0E6E            100
                         1000-1FFF            100

                                  Symbol Table

?__Umul8_16                cstackCOMMON 0073
?___flmul                  cstackBANK0  002A
?___fltol                  cstackBANK0  0044
?___lwdiv                  cstackCOMMON 0073
?___wmul                   cstackCOMMON 0073
?___xxtofl                 cstackCOMMON 0073
Lcd_Cmd@a                  cstackCOMMON 0076
Lcd_Port@a                 cstackCOMMON 0073
Lcd_Set_Cursor@a           cstackBANK0  0020
Lcd_Set_Cursor@b           cstackCOMMON 0077
Lcd_Write_Char@a           cstackCOMMON 0075
Lcd_Write_String@a         cstackBANK0  0022
Lcd_Write_String@i         cstackBANK0  0020
WriteNumber@cent           cstackBANK0  0056
WriteNumber@columna        cstackBANK0  004F
WriteNumber@cor            cstackBANK0  0057
WriteNumber@dec            cstackBANK0  0059
WriteNumber@fila           cstackBANK0  005C
WriteNumber@formato        cstackBANK0  0051
WriteNumber@temp           cstackBANK0  005A
WriteNumber@unidad         cstackBANK0  0058
WriteNumber@valor          cstackBANK0  0050
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_BAUDCTLbits               (abs)        0187
_INTCONbits                (abs)        000B
_Lcd_Clear                 text17       0E82
_Lcd_Cmd                   text18       0EC9
_Lcd_Init                  text16       0798
_Lcd_Port                  text19       0E6F
_Lcd_Set_Cursor            text15       0F00
_Lcd_Write_Char            text14       0E9D
_Lcd_Write_String          text13       0F3D
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTAbits                 (abs)        0005
_PORTB                     (abs)        0006
_PORTD                     (abs)        0008
_RA4                       (abs)        002C
_RA5                       (abs)        002D
_RCREG                     (abs)        001A
_RCSTAbits                 (abs)        0018
_Receive                   text21       0E8F
_SPBRG                     (abs)        0099
_SPBRGH                    (abs)        009A
_SSPBUF                    (abs)        0013
_SSPCON                    (abs)        0014
_SSPSTAT                   (abs)        0094
_SSPSTATbits               (abs)        0094
_Sensor1                   bssCOMMON    007A
_Sensor2                   bssCOMMON    0079
_Sensor3                   bssCOMMON    0078
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISC3                    (abs)        043B
_TRISC5                    (abs)        043D
_TRISCbits                 (abs)        0087
_TRISD                     (abs)        0088
_TXSTAbits                 (abs)        0098
_WriteNumber               text6        037B
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        001A
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        1000
__Hspace_1                 (abs)        007B
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        1000
__S1                       (abs)        007B
__S2                       (abs)        0000
__S3                       (abs)        0000
__Umul8_16                 text12       0F66
__Umul8_16@multiplicand    cstackCOMMON 0073
__Umul8_16@multiplier      cstackBANK0  0024
__Umul8_16@product         cstackBANK0  0020
__Umul8_16@word_mpld       cstackBANK0  0022
___flmul                   text11       001A
___flmul@a                 cstackBANK0  002E
___flmul@aexp              cstackBANK0  003C
___flmul@b                 cstackBANK0  002A
___flmul@bexp              cstackBANK0  003D
___flmul@grs               cstackBANK0  0038
___flmul@prod              cstackBANK0  003E
___flmul@sign              cstackBANK0  0037
___flmul@temp              cstackBANK0  0042
___fltol                   text10       071C
___fltol@exp1              cstackBANK0  004E
___fltol@f1                cstackBANK0  0044
___fltol@sign1             cstackBANK0  004D
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text9        0FBA
___lwdiv@counter           cstackBANK0  0020
___lwdiv@dividend          cstackCOMMON 0075
___lwdiv@divisor           cstackCOMMON 0073
___lwdiv@quotient          cstackBANK0  0021
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text8        0F8F
___wmul@multiplicand       cstackCOMMON 0075
___wmul@multiplier         cstackCOMMON 0073
___wmul@product            cstackBANK0  0020
___xxtofl                  text7        0660
___xxtofl@arg              cstackBANK0  0026
___xxtofl@exp              cstackBANK0  0025
___xxtofl@sign             cstackBANK0  0024
___xxtofl@val              cstackCOMMON 0073
__end_of_Lcd_Clear         text17       0E8F
__end_of_Lcd_Cmd           text18       0EE3
__end_of_Lcd_Init          text16       07F5
__end_of_Lcd_Port          text19       0E75
__end_of_Lcd_Set_Cursor    text15       0F1E
__end_of_Lcd_Write_Char    text14       0EB3
__end_of_Lcd_Write_String  text13       0F66
__end_of_Receive           text21       0E9D
__end_of_WriteNumber       text6        058E
__end_of__Umul8_16         text12       0F8F
__end_of___flmul           text11       037B
__end_of___fltol           text10       0798
__end_of___lwdiv           text9        1000
__end_of___wmul            text8        0FBA
__end_of___xxtofl          text7        071C
__end_of__initialization   cinit        0016
__end_of__stringtab        strings      0806
__end_of_main              maintext     0660
__end_of_oli               text20       0F3D
__end_of_setup             text4        0F00
__end_of_spiInit           text5        0EC9
__end_of_spiRead           text2        07FE
__end_of_spiReceiveWait    text3        0E82
__end_of_spiWrite          text1        0E7B
__initialization           cinit        000F
__pbssBANK0                bssBANK0     0060
__pbssCOMMON               bssCOMMON    0078
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     058E
__pstrings                 strings      0800
__ptext1                   text1        0E75
__ptext10                  text10       071C
__ptext11                  text11       001A
__ptext12                  text12       0F66
__ptext13                  text13       0F3D
__ptext14                  text14       0E9D
__ptext15                  text15       0F00
__ptext16                  text16       0798
__ptext17                  text17       0E82
__ptext18                  text18       0EC9
__ptext19                  text19       0E6F
__ptext2                   text2        07F5
__ptext20                  text20       0F1E
__ptext21                  text21       0E8F
__ptext3                   text3        0E7B
__ptext4                   text4        0EE3
__ptext5                   text5        0EB3
__ptext6                   text6        037B
__ptext7                   text7        0660
__ptext8                   text8        0F8F
__ptext9                   text9        0FBA
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Receive          (abs)        0000
__size_of_WriteNumber      (abs)        0000
__size_of__Umul8_16        (abs)        0000
__size_of___flmul          (abs)        0000
__size_of___fltol          (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of___xxtofl         (abs)        0000
__size_of_main             (abs)        0000
__size_of_oli              (abs)        0000
__size_of_setup            (abs)        0000
__size_of_spiInit          (abs)        0000
__size_of_spiRead          (abs)        0000
__size_of_spiReceiveWait   (abs)        0000
__size_of_spiWrite         (abs)        0000
__stringbase               strings      0805
__stringtab                strings      0800
_comando                   bssBANK0     0060
_main                      maintext     058E
_oli                       text20       0F1E
_setup                     text4        0EE3
_spiInit                   text5        0EB3
_spiRead                   text2        07F5
_spiReceiveWait            text3        0E7B
_spiWrite                  text1        0E75
btemp                      (abs)        007E
end_of_initialization      cinit        0016
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
spiInit@sClockIdle         cstackCOMMON 0074
spiInit@sDataSample        cstackCOMMON 0073
spiInit@sTransmitEdge      cstackCOMMON 0075
spiInit@sType              cstackCOMMON 0076
spiWrite@dat               cstackCOMMON 0073
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 55 in file "Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_WriteNumber
		_setup
		_spiRead
		_spiWrite
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _spiWrite *****************
 Defined at:
		line 34 in file "SPI.c"
 Parameters:    Size  Location     Type
  dat             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dat             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiRead *****************
 Defined at:
		line 47 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_spiReceiveWait
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiReceiveWait *****************
 Defined at:
		line 29 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_spiRead
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 100 in file "Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_spiInit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiInit *****************
 Defined at:
		line 12 in file "SPI.c"
 Parameters:    Size  Location     Type
  sType           1    wreg     enum E1264
  sDataSample     1    3[COMMON] enum E1272
  sClockIdle      1    4[COMMON] enum E1276
  sTransmitEdg    1    5[COMMON] enum E1280
 Auto vars:     Size  Location     Type
  sType           1    6[COMMON] enum E1264
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _WriteNumber *****************
 Defined at:
		line 132 in file "Master.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  columna         1   47[BANK0 ] unsigned char 
  valor           1   48[BANK0 ] unsigned char 
  formato         1   49[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1   60[BANK0 ] unsigned char 
  temp            2   58[BANK0 ] unsigned int 
  dec             1   57[BANK0 ] unsigned char 
  unidad          1   56[BANK0 ] unsigned char 
  cor             1   55[BANK0 ] unsigned char 
  cent            1   54[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
		___flmul
		___fltol
		___lwdiv
		___wmul
		___xxtofl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4    3[COMMON] long 
 Auto vars:     Size  Location     Type
  sign            1    4[BANK0 ] unsigned char 
  arg             4    6[BANK0 ] unsigned long 
  exp             1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    3[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         4      10       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_WriteNumber
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    3[COMMON] unsigned int 
  multiplicand    2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       2       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_WriteNumber
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       3       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_WriteNumber
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   36[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  exp1            1   46[BANK0 ] unsigned char 
  sign1           1   45[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   36[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_WriteNumber
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 Parameters:    Size  Location     Type
  b               4   10[BANK0 ] long 
  a               4   14[BANK0 ] long 
 Auto vars:     Size  Location     Type
  prod            4   30[BANK0 ] struct .
  grs             4   24[BANK0 ] unsigned long 
  temp            2   34[BANK0 ] struct .
  bexp            1   29[BANK0 ] unsigned char 
  aexp            1   28[BANK0 ] unsigned char 
  sign            1   23[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   10[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__Umul8_16
 This function is called by:
		_WriteNumber
 This function uses a non-reentrant model


 *************** function __Umul8_16 *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    4[BANK0 ] unsigned char 
  word_mpld       2    2[BANK0 ] unsigned int 
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       5       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___flmul
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 54 in file "LCD8.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
		 -> STR_1(17), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR unsigned char 
		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
		 -> STR_1(17), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
		_WriteNumber
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 46 in file "LCD8.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_WriteNumber
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 21 in file "LCD8.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       1       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
		_WriteNumber
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 29 in file "LCD8.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 16 in file "LCD8.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 8 in file "LCD8.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 4 in file "LCD8.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _oli *****************
 Defined at:
		line 123 in file "Master.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Receive
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _Receive *****************
 Defined at:
		line 18 in file "EUSART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_oli
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c
		___flmul       		CODE           	001A	0000	865

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c estimated size: 865

Master.c
		_oli           		CODE           	0F1E	0000	31
		_main          		CODE           	058E	0000	210
		_WriteNumber   		CODE           	037B	0000	531
		_setup         		CODE           	0EE3	0000	29

Master.c estimated size: 801

LCD8.c
		_Lcd_Write_String		CODE           	0F3D	0000	41
		_Lcd_Init      		CODE           	0798	0000	93
		_Lcd_Write_Char		CODE           	0E9D	0000	22
		_Lcd_Cmd       		CODE           	0EC9	0000	26
		_Lcd_Set_Cursor		CODE           	0F00	0000	30
		_Lcd_Clear     		CODE           	0E82	0000	13
		_Lcd_Port      		CODE           	0E6F	0000	6

LCD8.c estimated size: 231

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c
		__Umul8_16     		CODE           	0F66	0000	41

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c estimated size: 41

EUSART.c
		_Receive       		CODE           	0E8F	0000	14

EUSART.c estimated size: 14

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0F8F	0000	43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0FBA	0000	70

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c estimated size: 70

shared
		__stringtab    		STRING         	0800	0000	6
		__initialization		CODE           	000F	0000	7

shared estimated size: 13

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c
		___fltol       		CODE           	071C	0000	124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c estimated size: 124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	0660	0000	188

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c estimated size: 188

SPI.c
		_spiWrite      		CODE           	0E75	0000	6
		_spiInit       		CODE           	0EB3	0000	22
		_spiReceiveWait		CODE           	0E7B	0000	7
		_spiRead       		CODE           	07F5	0000	9

SPI.c estimated size: 44

